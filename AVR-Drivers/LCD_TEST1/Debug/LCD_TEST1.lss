
LCD_TEST1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003380  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000aa  00800060  00003380  000033f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001fb0  00000000  00000000  000034a0  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000cb7  00000000  00000000  00005450  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000160  00000000  00000000  00006107  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000018f  00000000  00000000  00006267  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002045  00000000  00000000  000063f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001101  00000000  00000000  0000843b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f82  00000000  00000000  0000953c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000180  00000000  00000000  0000a4c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002c2  00000000  00000000  0000a640  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000088e  00000000  00000000  0000a902  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000b190  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 e8       	ldi	r30, 0x80	; 128
      68:	f3 e3       	ldi	r31, 0x33	; 51
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	aa 30       	cpi	r26, 0x0A	; 10
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 8f 10 	call	0x211e	; 0x211e <main>
      7a:	0c 94 be 19 	jmp	0x337c	; 0x337c <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 ed 03 	call	0x7da	; 0x7da <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 4d 04 	call	0x89a	; 0x89a <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 4d 04 	call	0x89a	; 0x89a <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 87 19 	jmp	0x330e	; 0x330e <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a9 e9       	ldi	r26, 0x99	; 153
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 a3 19 	jmp	0x3346	; 0x3346 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 93 19 	jmp	0x3326	; 0x3326 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 af 19 	jmp	0x335e	; 0x335e <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 93 19 	jmp	0x3326	; 0x3326 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 af 19 	jmp	0x335e	; 0x335e <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 87 19 	jmp	0x330e	; 0x330e <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	89 e9       	ldi	r24, 0x99	; 153
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 a3 19 	jmp	0x3346	; 0x3346 <__epilogue_restores__>

00000622 <__divsf3>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 8f 19 	jmp	0x331e	; 0x331e <__prologue_saves__+0x10>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	b9 e0       	ldi	r27, 0x09	; 9
     640:	eb 2e       	mov	r14, r27
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     662:	29 85       	ldd	r18, Y+9	; 0x09
     664:	22 30       	cpi	r18, 0x02	; 2
     666:	08 f4       	brcc	.+2      	; 0x66a <__divsf3+0x48>
     668:	7e c0       	rjmp	.+252    	; 0x766 <__divsf3+0x144>
     66a:	39 89       	ldd	r19, Y+17	; 0x11
     66c:	32 30       	cpi	r19, 0x02	; 2
     66e:	10 f4       	brcc	.+4      	; 0x674 <__divsf3+0x52>
     670:	b8 01       	movw	r22, r16
     672:	7c c0       	rjmp	.+248    	; 0x76c <__divsf3+0x14a>
     674:	8a 85       	ldd	r24, Y+10	; 0x0a
     676:	9a 89       	ldd	r25, Y+18	; 0x12
     678:	89 27       	eor	r24, r25
     67a:	8a 87       	std	Y+10, r24	; 0x0a
     67c:	24 30       	cpi	r18, 0x04	; 4
     67e:	11 f0       	breq	.+4      	; 0x684 <__divsf3+0x62>
     680:	22 30       	cpi	r18, 0x02	; 2
     682:	31 f4       	brne	.+12     	; 0x690 <__divsf3+0x6e>
     684:	23 17       	cp	r18, r19
     686:	09 f0       	breq	.+2      	; 0x68a <__divsf3+0x68>
     688:	6e c0       	rjmp	.+220    	; 0x766 <__divsf3+0x144>
     68a:	69 e9       	ldi	r22, 0x99	; 153
     68c:	70 e0       	ldi	r23, 0x00	; 0
     68e:	6e c0       	rjmp	.+220    	; 0x76c <__divsf3+0x14a>
     690:	34 30       	cpi	r19, 0x04	; 4
     692:	39 f4       	brne	.+14     	; 0x6a2 <__divsf3+0x80>
     694:	1d 86       	std	Y+13, r1	; 0x0d
     696:	1e 86       	std	Y+14, r1	; 0x0e
     698:	1f 86       	std	Y+15, r1	; 0x0f
     69a:	18 8a       	std	Y+16, r1	; 0x10
     69c:	1c 86       	std	Y+12, r1	; 0x0c
     69e:	1b 86       	std	Y+11, r1	; 0x0b
     6a0:	04 c0       	rjmp	.+8      	; 0x6aa <__divsf3+0x88>
     6a2:	32 30       	cpi	r19, 0x02	; 2
     6a4:	21 f4       	brne	.+8      	; 0x6ae <__divsf3+0x8c>
     6a6:	84 e0       	ldi	r24, 0x04	; 4
     6a8:	89 87       	std	Y+9, r24	; 0x09
     6aa:	b7 01       	movw	r22, r14
     6ac:	5f c0       	rjmp	.+190    	; 0x76c <__divsf3+0x14a>
     6ae:	2b 85       	ldd	r18, Y+11	; 0x0b
     6b0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6b2:	8b 89       	ldd	r24, Y+19	; 0x13
     6b4:	9c 89       	ldd	r25, Y+20	; 0x14
     6b6:	28 1b       	sub	r18, r24
     6b8:	39 0b       	sbc	r19, r25
     6ba:	3c 87       	std	Y+12, r19	; 0x0c
     6bc:	2b 87       	std	Y+11, r18	; 0x0b
     6be:	ed 84       	ldd	r14, Y+13	; 0x0d
     6c0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6c2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6c4:	18 89       	ldd	r17, Y+16	; 0x10
     6c6:	ad 88       	ldd	r10, Y+21	; 0x15
     6c8:	be 88       	ldd	r11, Y+22	; 0x16
     6ca:	cf 88       	ldd	r12, Y+23	; 0x17
     6cc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6ce:	ea 14       	cp	r14, r10
     6d0:	fb 04       	cpc	r15, r11
     6d2:	0c 05       	cpc	r16, r12
     6d4:	1d 05       	cpc	r17, r13
     6d6:	40 f4       	brcc	.+16     	; 0x6e8 <__divsf3+0xc6>
     6d8:	ee 0c       	add	r14, r14
     6da:	ff 1c       	adc	r15, r15
     6dc:	00 1f       	adc	r16, r16
     6de:	11 1f       	adc	r17, r17
     6e0:	21 50       	subi	r18, 0x01	; 1
     6e2:	30 40       	sbci	r19, 0x00	; 0
     6e4:	3c 87       	std	Y+12, r19	; 0x0c
     6e6:	2b 87       	std	Y+11, r18	; 0x0b
     6e8:	20 e0       	ldi	r18, 0x00	; 0
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	40 e0       	ldi	r20, 0x00	; 0
     6ee:	50 e0       	ldi	r21, 0x00	; 0
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	a0 e0       	ldi	r26, 0x00	; 0
     6f6:	b0 e4       	ldi	r27, 0x40	; 64
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	ea 14       	cp	r14, r10
     6fe:	fb 04       	cpc	r15, r11
     700:	0c 05       	cpc	r16, r12
     702:	1d 05       	cpc	r17, r13
     704:	40 f0       	brcs	.+16     	; 0x716 <__divsf3+0xf4>
     706:	28 2b       	or	r18, r24
     708:	39 2b       	or	r19, r25
     70a:	4a 2b       	or	r20, r26
     70c:	5b 2b       	or	r21, r27
     70e:	ea 18       	sub	r14, r10
     710:	fb 08       	sbc	r15, r11
     712:	0c 09       	sbc	r16, r12
     714:	1d 09       	sbc	r17, r13
     716:	b6 95       	lsr	r27
     718:	a7 95       	ror	r26
     71a:	97 95       	ror	r25
     71c:	87 95       	ror	r24
     71e:	ee 0c       	add	r14, r14
     720:	ff 1c       	adc	r15, r15
     722:	00 1f       	adc	r16, r16
     724:	11 1f       	adc	r17, r17
     726:	6f 5f       	subi	r22, 0xFF	; 255
     728:	7f 4f       	sbci	r23, 0xFF	; 255
     72a:	6f 31       	cpi	r22, 0x1F	; 31
     72c:	71 05       	cpc	r23, r1
     72e:	31 f7       	brne	.-52     	; 0x6fc <__divsf3+0xda>
     730:	da 01       	movw	r26, r20
     732:	c9 01       	movw	r24, r18
     734:	8f 77       	andi	r24, 0x7F	; 127
     736:	90 70       	andi	r25, 0x00	; 0
     738:	a0 70       	andi	r26, 0x00	; 0
     73a:	b0 70       	andi	r27, 0x00	; 0
     73c:	80 34       	cpi	r24, 0x40	; 64
     73e:	91 05       	cpc	r25, r1
     740:	a1 05       	cpc	r26, r1
     742:	b1 05       	cpc	r27, r1
     744:	61 f4       	brne	.+24     	; 0x75e <__divsf3+0x13c>
     746:	27 fd       	sbrc	r18, 7
     748:	0a c0       	rjmp	.+20     	; 0x75e <__divsf3+0x13c>
     74a:	e1 14       	cp	r14, r1
     74c:	f1 04       	cpc	r15, r1
     74e:	01 05       	cpc	r16, r1
     750:	11 05       	cpc	r17, r1
     752:	29 f0       	breq	.+10     	; 0x75e <__divsf3+0x13c>
     754:	20 5c       	subi	r18, 0xC0	; 192
     756:	3f 4f       	sbci	r19, 0xFF	; 255
     758:	4f 4f       	sbci	r20, 0xFF	; 255
     75a:	5f 4f       	sbci	r21, 0xFF	; 255
     75c:	20 78       	andi	r18, 0x80	; 128
     75e:	2d 87       	std	Y+13, r18	; 0x0d
     760:	3e 87       	std	Y+14, r19	; 0x0e
     762:	4f 87       	std	Y+15, r20	; 0x0f
     764:	58 8b       	std	Y+16, r21	; 0x10
     766:	be 01       	movw	r22, r28
     768:	67 5f       	subi	r22, 0xF7	; 247
     76a:	7f 4f       	sbci	r23, 0xFF	; 255
     76c:	cb 01       	movw	r24, r22
     76e:	0e 94 a1 04 	call	0x942	; 0x942 <__pack_f>
     772:	68 96       	adiw	r28, 0x18	; 24
     774:	ea e0       	ldi	r30, 0x0A	; 10
     776:	0c 94 ab 19 	jmp	0x3356	; 0x3356 <__epilogue_restores__+0x10>

0000077a <__gtsf2>:
     77a:	a8 e1       	ldi	r26, 0x18	; 24
     77c:	b0 e0       	ldi	r27, 0x00	; 0
     77e:	e3 ec       	ldi	r30, 0xC3	; 195
     780:	f3 e0       	ldi	r31, 0x03	; 3
     782:	0c 94 93 19 	jmp	0x3326	; 0x3326 <__prologue_saves__+0x18>
     786:	69 83       	std	Y+1, r22	; 0x01
     788:	7a 83       	std	Y+2, r23	; 0x02
     78a:	8b 83       	std	Y+3, r24	; 0x03
     78c:	9c 83       	std	Y+4, r25	; 0x04
     78e:	2d 83       	std	Y+5, r18	; 0x05
     790:	3e 83       	std	Y+6, r19	; 0x06
     792:	4f 83       	std	Y+7, r20	; 0x07
     794:	58 87       	std	Y+8, r21	; 0x08
     796:	89 e0       	ldi	r24, 0x09	; 9
     798:	e8 2e       	mov	r14, r24
     79a:	f1 2c       	mov	r15, r1
     79c:	ec 0e       	add	r14, r28
     79e:	fd 1e       	adc	r15, r29
     7a0:	ce 01       	movw	r24, r28
     7a2:	01 96       	adiw	r24, 0x01	; 1
     7a4:	b7 01       	movw	r22, r14
     7a6:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     7aa:	8e 01       	movw	r16, r28
     7ac:	0f 5e       	subi	r16, 0xEF	; 239
     7ae:	1f 4f       	sbci	r17, 0xFF	; 255
     7b0:	ce 01       	movw	r24, r28
     7b2:	05 96       	adiw	r24, 0x05	; 5
     7b4:	b8 01       	movw	r22, r16
     7b6:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     7ba:	89 85       	ldd	r24, Y+9	; 0x09
     7bc:	82 30       	cpi	r24, 0x02	; 2
     7be:	40 f0       	brcs	.+16     	; 0x7d0 <__gtsf2+0x56>
     7c0:	89 89       	ldd	r24, Y+17	; 0x11
     7c2:	82 30       	cpi	r24, 0x02	; 2
     7c4:	28 f0       	brcs	.+10     	; 0x7d0 <__gtsf2+0x56>
     7c6:	c7 01       	movw	r24, r14
     7c8:	b8 01       	movw	r22, r16
     7ca:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fpcmp_parts_f>
     7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <__gtsf2+0x58>
     7d0:	8f ef       	ldi	r24, 0xFF	; 255
     7d2:	68 96       	adiw	r28, 0x18	; 24
     7d4:	e6 e0       	ldi	r30, 0x06	; 6
     7d6:	0c 94 af 19 	jmp	0x335e	; 0x335e <__epilogue_restores__+0x18>

000007da <__gesf2>:
     7da:	a8 e1       	ldi	r26, 0x18	; 24
     7dc:	b0 e0       	ldi	r27, 0x00	; 0
     7de:	e3 ef       	ldi	r30, 0xF3	; 243
     7e0:	f3 e0       	ldi	r31, 0x03	; 3
     7e2:	0c 94 93 19 	jmp	0x3326	; 0x3326 <__prologue_saves__+0x18>
     7e6:	69 83       	std	Y+1, r22	; 0x01
     7e8:	7a 83       	std	Y+2, r23	; 0x02
     7ea:	8b 83       	std	Y+3, r24	; 0x03
     7ec:	9c 83       	std	Y+4, r25	; 0x04
     7ee:	2d 83       	std	Y+5, r18	; 0x05
     7f0:	3e 83       	std	Y+6, r19	; 0x06
     7f2:	4f 83       	std	Y+7, r20	; 0x07
     7f4:	58 87       	std	Y+8, r21	; 0x08
     7f6:	89 e0       	ldi	r24, 0x09	; 9
     7f8:	e8 2e       	mov	r14, r24
     7fa:	f1 2c       	mov	r15, r1
     7fc:	ec 0e       	add	r14, r28
     7fe:	fd 1e       	adc	r15, r29
     800:	ce 01       	movw	r24, r28
     802:	01 96       	adiw	r24, 0x01	; 1
     804:	b7 01       	movw	r22, r14
     806:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     80a:	8e 01       	movw	r16, r28
     80c:	0f 5e       	subi	r16, 0xEF	; 239
     80e:	1f 4f       	sbci	r17, 0xFF	; 255
     810:	ce 01       	movw	r24, r28
     812:	05 96       	adiw	r24, 0x05	; 5
     814:	b8 01       	movw	r22, r16
     816:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     81a:	89 85       	ldd	r24, Y+9	; 0x09
     81c:	82 30       	cpi	r24, 0x02	; 2
     81e:	40 f0       	brcs	.+16     	; 0x830 <__gesf2+0x56>
     820:	89 89       	ldd	r24, Y+17	; 0x11
     822:	82 30       	cpi	r24, 0x02	; 2
     824:	28 f0       	brcs	.+10     	; 0x830 <__gesf2+0x56>
     826:	c7 01       	movw	r24, r14
     828:	b8 01       	movw	r22, r16
     82a:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fpcmp_parts_f>
     82e:	01 c0       	rjmp	.+2      	; 0x832 <__gesf2+0x58>
     830:	8f ef       	ldi	r24, 0xFF	; 255
     832:	68 96       	adiw	r28, 0x18	; 24
     834:	e6 e0       	ldi	r30, 0x06	; 6
     836:	0c 94 af 19 	jmp	0x335e	; 0x335e <__epilogue_restores__+0x18>

0000083a <__ltsf2>:
     83a:	a8 e1       	ldi	r26, 0x18	; 24
     83c:	b0 e0       	ldi	r27, 0x00	; 0
     83e:	e3 e2       	ldi	r30, 0x23	; 35
     840:	f4 e0       	ldi	r31, 0x04	; 4
     842:	0c 94 93 19 	jmp	0x3326	; 0x3326 <__prologue_saves__+0x18>
     846:	69 83       	std	Y+1, r22	; 0x01
     848:	7a 83       	std	Y+2, r23	; 0x02
     84a:	8b 83       	std	Y+3, r24	; 0x03
     84c:	9c 83       	std	Y+4, r25	; 0x04
     84e:	2d 83       	std	Y+5, r18	; 0x05
     850:	3e 83       	std	Y+6, r19	; 0x06
     852:	4f 83       	std	Y+7, r20	; 0x07
     854:	58 87       	std	Y+8, r21	; 0x08
     856:	89 e0       	ldi	r24, 0x09	; 9
     858:	e8 2e       	mov	r14, r24
     85a:	f1 2c       	mov	r15, r1
     85c:	ec 0e       	add	r14, r28
     85e:	fd 1e       	adc	r15, r29
     860:	ce 01       	movw	r24, r28
     862:	01 96       	adiw	r24, 0x01	; 1
     864:	b7 01       	movw	r22, r14
     866:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     86a:	8e 01       	movw	r16, r28
     86c:	0f 5e       	subi	r16, 0xEF	; 239
     86e:	1f 4f       	sbci	r17, 0xFF	; 255
     870:	ce 01       	movw	r24, r28
     872:	05 96       	adiw	r24, 0x05	; 5
     874:	b8 01       	movw	r22, r16
     876:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     87a:	89 85       	ldd	r24, Y+9	; 0x09
     87c:	82 30       	cpi	r24, 0x02	; 2
     87e:	40 f0       	brcs	.+16     	; 0x890 <__stack+0x31>
     880:	89 89       	ldd	r24, Y+17	; 0x11
     882:	82 30       	cpi	r24, 0x02	; 2
     884:	28 f0       	brcs	.+10     	; 0x890 <__stack+0x31>
     886:	c7 01       	movw	r24, r14
     888:	b8 01       	movw	r22, r16
     88a:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fpcmp_parts_f>
     88e:	01 c0       	rjmp	.+2      	; 0x892 <__stack+0x33>
     890:	81 e0       	ldi	r24, 0x01	; 1
     892:	68 96       	adiw	r28, 0x18	; 24
     894:	e6 e0       	ldi	r30, 0x06	; 6
     896:	0c 94 af 19 	jmp	0x335e	; 0x335e <__epilogue_restores__+0x18>

0000089a <__fixsfsi>:
     89a:	ac e0       	ldi	r26, 0x0C	; 12
     89c:	b0 e0       	ldi	r27, 0x00	; 0
     89e:	e3 e5       	ldi	r30, 0x53	; 83
     8a0:	f4 e0       	ldi	r31, 0x04	; 4
     8a2:	0c 94 97 19 	jmp	0x332e	; 0x332e <__prologue_saves__+0x20>
     8a6:	69 83       	std	Y+1, r22	; 0x01
     8a8:	7a 83       	std	Y+2, r23	; 0x02
     8aa:	8b 83       	std	Y+3, r24	; 0x03
     8ac:	9c 83       	std	Y+4, r25	; 0x04
     8ae:	ce 01       	movw	r24, r28
     8b0:	01 96       	adiw	r24, 0x01	; 1
     8b2:	be 01       	movw	r22, r28
     8b4:	6b 5f       	subi	r22, 0xFB	; 251
     8b6:	7f 4f       	sbci	r23, 0xFF	; 255
     8b8:	0e 94 76 05 	call	0xaec	; 0xaec <__unpack_f>
     8bc:	8d 81       	ldd	r24, Y+5	; 0x05
     8be:	82 30       	cpi	r24, 0x02	; 2
     8c0:	61 f1       	breq	.+88     	; 0x91a <__fixsfsi+0x80>
     8c2:	82 30       	cpi	r24, 0x02	; 2
     8c4:	50 f1       	brcs	.+84     	; 0x91a <__fixsfsi+0x80>
     8c6:	84 30       	cpi	r24, 0x04	; 4
     8c8:	21 f4       	brne	.+8      	; 0x8d2 <__fixsfsi+0x38>
     8ca:	8e 81       	ldd	r24, Y+6	; 0x06
     8cc:	88 23       	and	r24, r24
     8ce:	51 f1       	breq	.+84     	; 0x924 <__fixsfsi+0x8a>
     8d0:	2e c0       	rjmp	.+92     	; 0x92e <__fixsfsi+0x94>
     8d2:	2f 81       	ldd	r18, Y+7	; 0x07
     8d4:	38 85       	ldd	r19, Y+8	; 0x08
     8d6:	37 fd       	sbrc	r19, 7
     8d8:	20 c0       	rjmp	.+64     	; 0x91a <__fixsfsi+0x80>
     8da:	6e 81       	ldd	r22, Y+6	; 0x06
     8dc:	2f 31       	cpi	r18, 0x1F	; 31
     8de:	31 05       	cpc	r19, r1
     8e0:	1c f0       	brlt	.+6      	; 0x8e8 <__fixsfsi+0x4e>
     8e2:	66 23       	and	r22, r22
     8e4:	f9 f0       	breq	.+62     	; 0x924 <__fixsfsi+0x8a>
     8e6:	23 c0       	rjmp	.+70     	; 0x92e <__fixsfsi+0x94>
     8e8:	8e e1       	ldi	r24, 0x1E	; 30
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	82 1b       	sub	r24, r18
     8ee:	93 0b       	sbc	r25, r19
     8f0:	29 85       	ldd	r18, Y+9	; 0x09
     8f2:	3a 85       	ldd	r19, Y+10	; 0x0a
     8f4:	4b 85       	ldd	r20, Y+11	; 0x0b
     8f6:	5c 85       	ldd	r21, Y+12	; 0x0c
     8f8:	04 c0       	rjmp	.+8      	; 0x902 <__fixsfsi+0x68>
     8fa:	56 95       	lsr	r21
     8fc:	47 95       	ror	r20
     8fe:	37 95       	ror	r19
     900:	27 95       	ror	r18
     902:	8a 95       	dec	r24
     904:	d2 f7       	brpl	.-12     	; 0x8fa <__fixsfsi+0x60>
     906:	66 23       	and	r22, r22
     908:	b1 f0       	breq	.+44     	; 0x936 <__fixsfsi+0x9c>
     90a:	50 95       	com	r21
     90c:	40 95       	com	r20
     90e:	30 95       	com	r19
     910:	21 95       	neg	r18
     912:	3f 4f       	sbci	r19, 0xFF	; 255
     914:	4f 4f       	sbci	r20, 0xFF	; 255
     916:	5f 4f       	sbci	r21, 0xFF	; 255
     918:	0e c0       	rjmp	.+28     	; 0x936 <__fixsfsi+0x9c>
     91a:	20 e0       	ldi	r18, 0x00	; 0
     91c:	30 e0       	ldi	r19, 0x00	; 0
     91e:	40 e0       	ldi	r20, 0x00	; 0
     920:	50 e0       	ldi	r21, 0x00	; 0
     922:	09 c0       	rjmp	.+18     	; 0x936 <__fixsfsi+0x9c>
     924:	2f ef       	ldi	r18, 0xFF	; 255
     926:	3f ef       	ldi	r19, 0xFF	; 255
     928:	4f ef       	ldi	r20, 0xFF	; 255
     92a:	5f e7       	ldi	r21, 0x7F	; 127
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__fixsfsi+0x9c>
     92e:	20 e0       	ldi	r18, 0x00	; 0
     930:	30 e0       	ldi	r19, 0x00	; 0
     932:	40 e0       	ldi	r20, 0x00	; 0
     934:	50 e8       	ldi	r21, 0x80	; 128
     936:	b9 01       	movw	r22, r18
     938:	ca 01       	movw	r24, r20
     93a:	2c 96       	adiw	r28, 0x0c	; 12
     93c:	e2 e0       	ldi	r30, 0x02	; 2
     93e:	0c 94 b3 19 	jmp	0x3366	; 0x3366 <__epilogue_restores__+0x20>

00000942 <__pack_f>:
     942:	df 92       	push	r13
     944:	ef 92       	push	r14
     946:	ff 92       	push	r15
     948:	0f 93       	push	r16
     94a:	1f 93       	push	r17
     94c:	fc 01       	movw	r30, r24
     94e:	e4 80       	ldd	r14, Z+4	; 0x04
     950:	f5 80       	ldd	r15, Z+5	; 0x05
     952:	06 81       	ldd	r16, Z+6	; 0x06
     954:	17 81       	ldd	r17, Z+7	; 0x07
     956:	d1 80       	ldd	r13, Z+1	; 0x01
     958:	80 81       	ld	r24, Z
     95a:	82 30       	cpi	r24, 0x02	; 2
     95c:	48 f4       	brcc	.+18     	; 0x970 <__pack_f+0x2e>
     95e:	80 e0       	ldi	r24, 0x00	; 0
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	a0 e1       	ldi	r26, 0x10	; 16
     964:	b0 e0       	ldi	r27, 0x00	; 0
     966:	e8 2a       	or	r14, r24
     968:	f9 2a       	or	r15, r25
     96a:	0a 2b       	or	r16, r26
     96c:	1b 2b       	or	r17, r27
     96e:	a5 c0       	rjmp	.+330    	; 0xaba <__pack_f+0x178>
     970:	84 30       	cpi	r24, 0x04	; 4
     972:	09 f4       	brne	.+2      	; 0x976 <__pack_f+0x34>
     974:	9f c0       	rjmp	.+318    	; 0xab4 <__pack_f+0x172>
     976:	82 30       	cpi	r24, 0x02	; 2
     978:	21 f4       	brne	.+8      	; 0x982 <__pack_f+0x40>
     97a:	ee 24       	eor	r14, r14
     97c:	ff 24       	eor	r15, r15
     97e:	87 01       	movw	r16, r14
     980:	05 c0       	rjmp	.+10     	; 0x98c <__pack_f+0x4a>
     982:	e1 14       	cp	r14, r1
     984:	f1 04       	cpc	r15, r1
     986:	01 05       	cpc	r16, r1
     988:	11 05       	cpc	r17, r1
     98a:	19 f4       	brne	.+6      	; 0x992 <__pack_f+0x50>
     98c:	e0 e0       	ldi	r30, 0x00	; 0
     98e:	f0 e0       	ldi	r31, 0x00	; 0
     990:	96 c0       	rjmp	.+300    	; 0xabe <__pack_f+0x17c>
     992:	62 81       	ldd	r22, Z+2	; 0x02
     994:	73 81       	ldd	r23, Z+3	; 0x03
     996:	9f ef       	ldi	r25, 0xFF	; 255
     998:	62 38       	cpi	r22, 0x82	; 130
     99a:	79 07       	cpc	r23, r25
     99c:	0c f0       	brlt	.+2      	; 0x9a0 <__pack_f+0x5e>
     99e:	5b c0       	rjmp	.+182    	; 0xa56 <__pack_f+0x114>
     9a0:	22 e8       	ldi	r18, 0x82	; 130
     9a2:	3f ef       	ldi	r19, 0xFF	; 255
     9a4:	26 1b       	sub	r18, r22
     9a6:	37 0b       	sbc	r19, r23
     9a8:	2a 31       	cpi	r18, 0x1A	; 26
     9aa:	31 05       	cpc	r19, r1
     9ac:	2c f0       	brlt	.+10     	; 0x9b8 <__pack_f+0x76>
     9ae:	20 e0       	ldi	r18, 0x00	; 0
     9b0:	30 e0       	ldi	r19, 0x00	; 0
     9b2:	40 e0       	ldi	r20, 0x00	; 0
     9b4:	50 e0       	ldi	r21, 0x00	; 0
     9b6:	2a c0       	rjmp	.+84     	; 0xa0c <__pack_f+0xca>
     9b8:	b8 01       	movw	r22, r16
     9ba:	a7 01       	movw	r20, r14
     9bc:	02 2e       	mov	r0, r18
     9be:	04 c0       	rjmp	.+8      	; 0x9c8 <__pack_f+0x86>
     9c0:	76 95       	lsr	r23
     9c2:	67 95       	ror	r22
     9c4:	57 95       	ror	r21
     9c6:	47 95       	ror	r20
     9c8:	0a 94       	dec	r0
     9ca:	d2 f7       	brpl	.-12     	; 0x9c0 <__pack_f+0x7e>
     9cc:	81 e0       	ldi	r24, 0x01	; 1
     9ce:	90 e0       	ldi	r25, 0x00	; 0
     9d0:	a0 e0       	ldi	r26, 0x00	; 0
     9d2:	b0 e0       	ldi	r27, 0x00	; 0
     9d4:	04 c0       	rjmp	.+8      	; 0x9de <__pack_f+0x9c>
     9d6:	88 0f       	add	r24, r24
     9d8:	99 1f       	adc	r25, r25
     9da:	aa 1f       	adc	r26, r26
     9dc:	bb 1f       	adc	r27, r27
     9de:	2a 95       	dec	r18
     9e0:	d2 f7       	brpl	.-12     	; 0x9d6 <__pack_f+0x94>
     9e2:	01 97       	sbiw	r24, 0x01	; 1
     9e4:	a1 09       	sbc	r26, r1
     9e6:	b1 09       	sbc	r27, r1
     9e8:	8e 21       	and	r24, r14
     9ea:	9f 21       	and	r25, r15
     9ec:	a0 23       	and	r26, r16
     9ee:	b1 23       	and	r27, r17
     9f0:	00 97       	sbiw	r24, 0x00	; 0
     9f2:	a1 05       	cpc	r26, r1
     9f4:	b1 05       	cpc	r27, r1
     9f6:	21 f0       	breq	.+8      	; 0xa00 <__pack_f+0xbe>
     9f8:	81 e0       	ldi	r24, 0x01	; 1
     9fa:	90 e0       	ldi	r25, 0x00	; 0
     9fc:	a0 e0       	ldi	r26, 0x00	; 0
     9fe:	b0 e0       	ldi	r27, 0x00	; 0
     a00:	9a 01       	movw	r18, r20
     a02:	ab 01       	movw	r20, r22
     a04:	28 2b       	or	r18, r24
     a06:	39 2b       	or	r19, r25
     a08:	4a 2b       	or	r20, r26
     a0a:	5b 2b       	or	r21, r27
     a0c:	da 01       	movw	r26, r20
     a0e:	c9 01       	movw	r24, r18
     a10:	8f 77       	andi	r24, 0x7F	; 127
     a12:	90 70       	andi	r25, 0x00	; 0
     a14:	a0 70       	andi	r26, 0x00	; 0
     a16:	b0 70       	andi	r27, 0x00	; 0
     a18:	80 34       	cpi	r24, 0x40	; 64
     a1a:	91 05       	cpc	r25, r1
     a1c:	a1 05       	cpc	r26, r1
     a1e:	b1 05       	cpc	r27, r1
     a20:	39 f4       	brne	.+14     	; 0xa30 <__pack_f+0xee>
     a22:	27 ff       	sbrs	r18, 7
     a24:	09 c0       	rjmp	.+18     	; 0xa38 <__pack_f+0xf6>
     a26:	20 5c       	subi	r18, 0xC0	; 192
     a28:	3f 4f       	sbci	r19, 0xFF	; 255
     a2a:	4f 4f       	sbci	r20, 0xFF	; 255
     a2c:	5f 4f       	sbci	r21, 0xFF	; 255
     a2e:	04 c0       	rjmp	.+8      	; 0xa38 <__pack_f+0xf6>
     a30:	21 5c       	subi	r18, 0xC1	; 193
     a32:	3f 4f       	sbci	r19, 0xFF	; 255
     a34:	4f 4f       	sbci	r20, 0xFF	; 255
     a36:	5f 4f       	sbci	r21, 0xFF	; 255
     a38:	e0 e0       	ldi	r30, 0x00	; 0
     a3a:	f0 e0       	ldi	r31, 0x00	; 0
     a3c:	20 30       	cpi	r18, 0x00	; 0
     a3e:	a0 e0       	ldi	r26, 0x00	; 0
     a40:	3a 07       	cpc	r19, r26
     a42:	a0 e0       	ldi	r26, 0x00	; 0
     a44:	4a 07       	cpc	r20, r26
     a46:	a0 e4       	ldi	r26, 0x40	; 64
     a48:	5a 07       	cpc	r21, r26
     a4a:	10 f0       	brcs	.+4      	; 0xa50 <__pack_f+0x10e>
     a4c:	e1 e0       	ldi	r30, 0x01	; 1
     a4e:	f0 e0       	ldi	r31, 0x00	; 0
     a50:	79 01       	movw	r14, r18
     a52:	8a 01       	movw	r16, r20
     a54:	27 c0       	rjmp	.+78     	; 0xaa4 <__pack_f+0x162>
     a56:	60 38       	cpi	r22, 0x80	; 128
     a58:	71 05       	cpc	r23, r1
     a5a:	64 f5       	brge	.+88     	; 0xab4 <__pack_f+0x172>
     a5c:	fb 01       	movw	r30, r22
     a5e:	e1 58       	subi	r30, 0x81	; 129
     a60:	ff 4f       	sbci	r31, 0xFF	; 255
     a62:	d8 01       	movw	r26, r16
     a64:	c7 01       	movw	r24, r14
     a66:	8f 77       	andi	r24, 0x7F	; 127
     a68:	90 70       	andi	r25, 0x00	; 0
     a6a:	a0 70       	andi	r26, 0x00	; 0
     a6c:	b0 70       	andi	r27, 0x00	; 0
     a6e:	80 34       	cpi	r24, 0x40	; 64
     a70:	91 05       	cpc	r25, r1
     a72:	a1 05       	cpc	r26, r1
     a74:	b1 05       	cpc	r27, r1
     a76:	39 f4       	brne	.+14     	; 0xa86 <__pack_f+0x144>
     a78:	e7 fe       	sbrs	r14, 7
     a7a:	0d c0       	rjmp	.+26     	; 0xa96 <__pack_f+0x154>
     a7c:	80 e4       	ldi	r24, 0x40	; 64
     a7e:	90 e0       	ldi	r25, 0x00	; 0
     a80:	a0 e0       	ldi	r26, 0x00	; 0
     a82:	b0 e0       	ldi	r27, 0x00	; 0
     a84:	04 c0       	rjmp	.+8      	; 0xa8e <__pack_f+0x14c>
     a86:	8f e3       	ldi	r24, 0x3F	; 63
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	a0 e0       	ldi	r26, 0x00	; 0
     a8c:	b0 e0       	ldi	r27, 0x00	; 0
     a8e:	e8 0e       	add	r14, r24
     a90:	f9 1e       	adc	r15, r25
     a92:	0a 1f       	adc	r16, r26
     a94:	1b 1f       	adc	r17, r27
     a96:	17 ff       	sbrs	r17, 7
     a98:	05 c0       	rjmp	.+10     	; 0xaa4 <__pack_f+0x162>
     a9a:	16 95       	lsr	r17
     a9c:	07 95       	ror	r16
     a9e:	f7 94       	ror	r15
     aa0:	e7 94       	ror	r14
     aa2:	31 96       	adiw	r30, 0x01	; 1
     aa4:	87 e0       	ldi	r24, 0x07	; 7
     aa6:	16 95       	lsr	r17
     aa8:	07 95       	ror	r16
     aaa:	f7 94       	ror	r15
     aac:	e7 94       	ror	r14
     aae:	8a 95       	dec	r24
     ab0:	d1 f7       	brne	.-12     	; 0xaa6 <__pack_f+0x164>
     ab2:	05 c0       	rjmp	.+10     	; 0xabe <__pack_f+0x17c>
     ab4:	ee 24       	eor	r14, r14
     ab6:	ff 24       	eor	r15, r15
     ab8:	87 01       	movw	r16, r14
     aba:	ef ef       	ldi	r30, 0xFF	; 255
     abc:	f0 e0       	ldi	r31, 0x00	; 0
     abe:	6e 2f       	mov	r22, r30
     ac0:	67 95       	ror	r22
     ac2:	66 27       	eor	r22, r22
     ac4:	67 95       	ror	r22
     ac6:	90 2f       	mov	r25, r16
     ac8:	9f 77       	andi	r25, 0x7F	; 127
     aca:	d7 94       	ror	r13
     acc:	dd 24       	eor	r13, r13
     ace:	d7 94       	ror	r13
     ad0:	8e 2f       	mov	r24, r30
     ad2:	86 95       	lsr	r24
     ad4:	49 2f       	mov	r20, r25
     ad6:	46 2b       	or	r20, r22
     ad8:	58 2f       	mov	r21, r24
     ada:	5d 29       	or	r21, r13
     adc:	b7 01       	movw	r22, r14
     ade:	ca 01       	movw	r24, r20
     ae0:	1f 91       	pop	r17
     ae2:	0f 91       	pop	r16
     ae4:	ff 90       	pop	r15
     ae6:	ef 90       	pop	r14
     ae8:	df 90       	pop	r13
     aea:	08 95       	ret

00000aec <__unpack_f>:
     aec:	fc 01       	movw	r30, r24
     aee:	db 01       	movw	r26, r22
     af0:	40 81       	ld	r20, Z
     af2:	51 81       	ldd	r21, Z+1	; 0x01
     af4:	22 81       	ldd	r18, Z+2	; 0x02
     af6:	62 2f       	mov	r22, r18
     af8:	6f 77       	andi	r22, 0x7F	; 127
     afa:	70 e0       	ldi	r23, 0x00	; 0
     afc:	22 1f       	adc	r18, r18
     afe:	22 27       	eor	r18, r18
     b00:	22 1f       	adc	r18, r18
     b02:	93 81       	ldd	r25, Z+3	; 0x03
     b04:	89 2f       	mov	r24, r25
     b06:	88 0f       	add	r24, r24
     b08:	82 2b       	or	r24, r18
     b0a:	28 2f       	mov	r18, r24
     b0c:	30 e0       	ldi	r19, 0x00	; 0
     b0e:	99 1f       	adc	r25, r25
     b10:	99 27       	eor	r25, r25
     b12:	99 1f       	adc	r25, r25
     b14:	11 96       	adiw	r26, 0x01	; 1
     b16:	9c 93       	st	X, r25
     b18:	11 97       	sbiw	r26, 0x01	; 1
     b1a:	21 15       	cp	r18, r1
     b1c:	31 05       	cpc	r19, r1
     b1e:	a9 f5       	brne	.+106    	; 0xb8a <__unpack_f+0x9e>
     b20:	41 15       	cp	r20, r1
     b22:	51 05       	cpc	r21, r1
     b24:	61 05       	cpc	r22, r1
     b26:	71 05       	cpc	r23, r1
     b28:	11 f4       	brne	.+4      	; 0xb2e <__unpack_f+0x42>
     b2a:	82 e0       	ldi	r24, 0x02	; 2
     b2c:	37 c0       	rjmp	.+110    	; 0xb9c <__unpack_f+0xb0>
     b2e:	82 e8       	ldi	r24, 0x82	; 130
     b30:	9f ef       	ldi	r25, 0xFF	; 255
     b32:	13 96       	adiw	r26, 0x03	; 3
     b34:	9c 93       	st	X, r25
     b36:	8e 93       	st	-X, r24
     b38:	12 97       	sbiw	r26, 0x02	; 2
     b3a:	9a 01       	movw	r18, r20
     b3c:	ab 01       	movw	r20, r22
     b3e:	67 e0       	ldi	r22, 0x07	; 7
     b40:	22 0f       	add	r18, r18
     b42:	33 1f       	adc	r19, r19
     b44:	44 1f       	adc	r20, r20
     b46:	55 1f       	adc	r21, r21
     b48:	6a 95       	dec	r22
     b4a:	d1 f7       	brne	.-12     	; 0xb40 <__unpack_f+0x54>
     b4c:	83 e0       	ldi	r24, 0x03	; 3
     b4e:	8c 93       	st	X, r24
     b50:	0d c0       	rjmp	.+26     	; 0xb6c <__unpack_f+0x80>
     b52:	22 0f       	add	r18, r18
     b54:	33 1f       	adc	r19, r19
     b56:	44 1f       	adc	r20, r20
     b58:	55 1f       	adc	r21, r21
     b5a:	12 96       	adiw	r26, 0x02	; 2
     b5c:	8d 91       	ld	r24, X+
     b5e:	9c 91       	ld	r25, X
     b60:	13 97       	sbiw	r26, 0x03	; 3
     b62:	01 97       	sbiw	r24, 0x01	; 1
     b64:	13 96       	adiw	r26, 0x03	; 3
     b66:	9c 93       	st	X, r25
     b68:	8e 93       	st	-X, r24
     b6a:	12 97       	sbiw	r26, 0x02	; 2
     b6c:	20 30       	cpi	r18, 0x00	; 0
     b6e:	80 e0       	ldi	r24, 0x00	; 0
     b70:	38 07       	cpc	r19, r24
     b72:	80 e0       	ldi	r24, 0x00	; 0
     b74:	48 07       	cpc	r20, r24
     b76:	80 e4       	ldi	r24, 0x40	; 64
     b78:	58 07       	cpc	r21, r24
     b7a:	58 f3       	brcs	.-42     	; 0xb52 <__unpack_f+0x66>
     b7c:	14 96       	adiw	r26, 0x04	; 4
     b7e:	2d 93       	st	X+, r18
     b80:	3d 93       	st	X+, r19
     b82:	4d 93       	st	X+, r20
     b84:	5c 93       	st	X, r21
     b86:	17 97       	sbiw	r26, 0x07	; 7
     b88:	08 95       	ret
     b8a:	2f 3f       	cpi	r18, 0xFF	; 255
     b8c:	31 05       	cpc	r19, r1
     b8e:	79 f4       	brne	.+30     	; 0xbae <__unpack_f+0xc2>
     b90:	41 15       	cp	r20, r1
     b92:	51 05       	cpc	r21, r1
     b94:	61 05       	cpc	r22, r1
     b96:	71 05       	cpc	r23, r1
     b98:	19 f4       	brne	.+6      	; 0xba0 <__unpack_f+0xb4>
     b9a:	84 e0       	ldi	r24, 0x04	; 4
     b9c:	8c 93       	st	X, r24
     b9e:	08 95       	ret
     ba0:	64 ff       	sbrs	r22, 4
     ba2:	03 c0       	rjmp	.+6      	; 0xbaa <__unpack_f+0xbe>
     ba4:	81 e0       	ldi	r24, 0x01	; 1
     ba6:	8c 93       	st	X, r24
     ba8:	12 c0       	rjmp	.+36     	; 0xbce <__unpack_f+0xe2>
     baa:	1c 92       	st	X, r1
     bac:	10 c0       	rjmp	.+32     	; 0xbce <__unpack_f+0xe2>
     bae:	2f 57       	subi	r18, 0x7F	; 127
     bb0:	30 40       	sbci	r19, 0x00	; 0
     bb2:	13 96       	adiw	r26, 0x03	; 3
     bb4:	3c 93       	st	X, r19
     bb6:	2e 93       	st	-X, r18
     bb8:	12 97       	sbiw	r26, 0x02	; 2
     bba:	83 e0       	ldi	r24, 0x03	; 3
     bbc:	8c 93       	st	X, r24
     bbe:	87 e0       	ldi	r24, 0x07	; 7
     bc0:	44 0f       	add	r20, r20
     bc2:	55 1f       	adc	r21, r21
     bc4:	66 1f       	adc	r22, r22
     bc6:	77 1f       	adc	r23, r23
     bc8:	8a 95       	dec	r24
     bca:	d1 f7       	brne	.-12     	; 0xbc0 <__unpack_f+0xd4>
     bcc:	70 64       	ori	r23, 0x40	; 64
     bce:	14 96       	adiw	r26, 0x04	; 4
     bd0:	4d 93       	st	X+, r20
     bd2:	5d 93       	st	X+, r21
     bd4:	6d 93       	st	X+, r22
     bd6:	7c 93       	st	X, r23
     bd8:	17 97       	sbiw	r26, 0x07	; 7
     bda:	08 95       	ret

00000bdc <__fpcmp_parts_f>:
     bdc:	1f 93       	push	r17
     bde:	dc 01       	movw	r26, r24
     be0:	fb 01       	movw	r30, r22
     be2:	9c 91       	ld	r25, X
     be4:	92 30       	cpi	r25, 0x02	; 2
     be6:	08 f4       	brcc	.+2      	; 0xbea <__fpcmp_parts_f+0xe>
     be8:	47 c0       	rjmp	.+142    	; 0xc78 <__fpcmp_parts_f+0x9c>
     bea:	80 81       	ld	r24, Z
     bec:	82 30       	cpi	r24, 0x02	; 2
     bee:	08 f4       	brcc	.+2      	; 0xbf2 <__fpcmp_parts_f+0x16>
     bf0:	43 c0       	rjmp	.+134    	; 0xc78 <__fpcmp_parts_f+0x9c>
     bf2:	94 30       	cpi	r25, 0x04	; 4
     bf4:	51 f4       	brne	.+20     	; 0xc0a <__fpcmp_parts_f+0x2e>
     bf6:	11 96       	adiw	r26, 0x01	; 1
     bf8:	1c 91       	ld	r17, X
     bfa:	84 30       	cpi	r24, 0x04	; 4
     bfc:	99 f5       	brne	.+102    	; 0xc64 <__fpcmp_parts_f+0x88>
     bfe:	81 81       	ldd	r24, Z+1	; 0x01
     c00:	68 2f       	mov	r22, r24
     c02:	70 e0       	ldi	r23, 0x00	; 0
     c04:	61 1b       	sub	r22, r17
     c06:	71 09       	sbc	r23, r1
     c08:	3f c0       	rjmp	.+126    	; 0xc88 <__fpcmp_parts_f+0xac>
     c0a:	84 30       	cpi	r24, 0x04	; 4
     c0c:	21 f0       	breq	.+8      	; 0xc16 <__fpcmp_parts_f+0x3a>
     c0e:	92 30       	cpi	r25, 0x02	; 2
     c10:	31 f4       	brne	.+12     	; 0xc1e <__fpcmp_parts_f+0x42>
     c12:	82 30       	cpi	r24, 0x02	; 2
     c14:	b9 f1       	breq	.+110    	; 0xc84 <__fpcmp_parts_f+0xa8>
     c16:	81 81       	ldd	r24, Z+1	; 0x01
     c18:	88 23       	and	r24, r24
     c1a:	89 f1       	breq	.+98     	; 0xc7e <__fpcmp_parts_f+0xa2>
     c1c:	2d c0       	rjmp	.+90     	; 0xc78 <__fpcmp_parts_f+0x9c>
     c1e:	11 96       	adiw	r26, 0x01	; 1
     c20:	1c 91       	ld	r17, X
     c22:	11 97       	sbiw	r26, 0x01	; 1
     c24:	82 30       	cpi	r24, 0x02	; 2
     c26:	f1 f0       	breq	.+60     	; 0xc64 <__fpcmp_parts_f+0x88>
     c28:	81 81       	ldd	r24, Z+1	; 0x01
     c2a:	18 17       	cp	r17, r24
     c2c:	d9 f4       	brne	.+54     	; 0xc64 <__fpcmp_parts_f+0x88>
     c2e:	12 96       	adiw	r26, 0x02	; 2
     c30:	2d 91       	ld	r18, X+
     c32:	3c 91       	ld	r19, X
     c34:	13 97       	sbiw	r26, 0x03	; 3
     c36:	82 81       	ldd	r24, Z+2	; 0x02
     c38:	93 81       	ldd	r25, Z+3	; 0x03
     c3a:	82 17       	cp	r24, r18
     c3c:	93 07       	cpc	r25, r19
     c3e:	94 f0       	brlt	.+36     	; 0xc64 <__fpcmp_parts_f+0x88>
     c40:	28 17       	cp	r18, r24
     c42:	39 07       	cpc	r19, r25
     c44:	bc f0       	brlt	.+46     	; 0xc74 <__fpcmp_parts_f+0x98>
     c46:	14 96       	adiw	r26, 0x04	; 4
     c48:	8d 91       	ld	r24, X+
     c4a:	9d 91       	ld	r25, X+
     c4c:	0d 90       	ld	r0, X+
     c4e:	bc 91       	ld	r27, X
     c50:	a0 2d       	mov	r26, r0
     c52:	24 81       	ldd	r18, Z+4	; 0x04
     c54:	35 81       	ldd	r19, Z+5	; 0x05
     c56:	46 81       	ldd	r20, Z+6	; 0x06
     c58:	57 81       	ldd	r21, Z+7	; 0x07
     c5a:	28 17       	cp	r18, r24
     c5c:	39 07       	cpc	r19, r25
     c5e:	4a 07       	cpc	r20, r26
     c60:	5b 07       	cpc	r21, r27
     c62:	18 f4       	brcc	.+6      	; 0xc6a <__fpcmp_parts_f+0x8e>
     c64:	11 23       	and	r17, r17
     c66:	41 f0       	breq	.+16     	; 0xc78 <__fpcmp_parts_f+0x9c>
     c68:	0a c0       	rjmp	.+20     	; 0xc7e <__fpcmp_parts_f+0xa2>
     c6a:	82 17       	cp	r24, r18
     c6c:	93 07       	cpc	r25, r19
     c6e:	a4 07       	cpc	r26, r20
     c70:	b5 07       	cpc	r27, r21
     c72:	40 f4       	brcc	.+16     	; 0xc84 <__fpcmp_parts_f+0xa8>
     c74:	11 23       	and	r17, r17
     c76:	19 f0       	breq	.+6      	; 0xc7e <__fpcmp_parts_f+0xa2>
     c78:	61 e0       	ldi	r22, 0x01	; 1
     c7a:	70 e0       	ldi	r23, 0x00	; 0
     c7c:	05 c0       	rjmp	.+10     	; 0xc88 <__fpcmp_parts_f+0xac>
     c7e:	6f ef       	ldi	r22, 0xFF	; 255
     c80:	7f ef       	ldi	r23, 0xFF	; 255
     c82:	02 c0       	rjmp	.+4      	; 0xc88 <__fpcmp_parts_f+0xac>
     c84:	60 e0       	ldi	r22, 0x00	; 0
     c86:	70 e0       	ldi	r23, 0x00	; 0
     c88:	cb 01       	movw	r24, r22
     c8a:	1f 91       	pop	r17
     c8c:	08 95       	ret

00000c8e <DIO_u8Init>:
/*MCAL */
#include  "DIO_interface.h"
#include "DIO_private.h"
#include "DIO_config.h"

void DIO_u8Init(void) {
     c8e:	df 93       	push	r29
     c90:	cf 93       	push	r28
     c92:	cd b7       	in	r28, 0x3d	; 61
     c94:	de b7       	in	r29, 0x3e	; 62
	DIO_u8_DDRA_REG = PRIVATE_u8_CONC(DIO_u8_PA7_DIRECTION,
     c96:	ea e3       	ldi	r30, 0x3A	; 58
     c98:	f0 e0       	ldi	r31, 0x00	; 0
     c9a:	87 e0       	ldi	r24, 0x07	; 7
     c9c:	80 83       	st	Z, r24
			DIO_u8_PA6_DIRECTION, DIO_u8_PA5_DIRECTION, DIO_u8_PA4_DIRECTION,
			DIO_u8_PA3_DIRECTION, DIO_u8_PA2_DIRECTION, DIO_u8_PA1_DIRECTION,
			DIO_u8_PA0_DIRECTION);
	DIO_u8_DDRB_REG = PRIVATE_u8_CONC(DIO_u8_PB7_DIRECTION,
     c9e:	e7 e3       	ldi	r30, 0x37	; 55
     ca0:	f0 e0       	ldi	r31, 0x00	; 0
     ca2:	88 e0       	ldi	r24, 0x08	; 8
     ca4:	80 83       	st	Z, r24
			DIO_u8_PB6_DIRECTION, DIO_u8_PB5_DIRECTION, DIO_u8_PB4_DIRECTION,
			DIO_u8_PB3_DIRECTION, DIO_u8_PB2_DIRECTION, DIO_u8_PB1_DIRECTION,
			DIO_u8_PB0_DIRECTION);
	DIO_u8_DDRC_REG = PRIVATE_u8_CONC(DIO_u8_PC7_DIRECTION,
     ca6:	e4 e3       	ldi	r30, 0x34	; 52
     ca8:	f0 e0       	ldi	r31, 0x00	; 0
     caa:	80 e2       	ldi	r24, 0x20	; 32
     cac:	80 83       	st	Z, r24
			DIO_u8_PC6_DIRECTION, DIO_u8_PC5_DIRECTION, DIO_u8_PC4_DIRECTION,
			DIO_u8_PC3_DIRECTION, DIO_u8_PC2_DIRECTION, DIO_u8_PC1_DIRECTION,
			DIO_u8_PC0_DIRECTION);
	DIO_u8_DDRD_REG = PRIVATE_u8_CONC(DIO_u8_PD7_DIRECTION,
     cae:	e1 e3       	ldi	r30, 0x31	; 49
     cb0:	f0 e0       	ldi	r31, 0x00	; 0
     cb2:	8f ef       	ldi	r24, 0xFF	; 255
     cb4:	80 83       	st	Z, r24
			DIO_u8_PD6_DIRECTION, DIO_u8_PD5_DIRECTION, DIO_u8_PD4_DIRECTION,
			DIO_u8_PD3_DIRECTION, DIO_u8_PD2_DIRECTION, DIO_u8_PD1_DIRECTION,
			DIO_u8_PD0_DIRECTION);

	DIO_u8_PORTA_REG = PRIVATE_u8_CONC(DIO_u8_PA7_VALUE, DIO_u8_PA6_VALUE,
     cb6:	eb e3       	ldi	r30, 0x3B	; 59
     cb8:	f0 e0       	ldi	r31, 0x00	; 0
     cba:	10 82       	st	Z, r1
			DIO_u8_PA5_VALUE, DIO_u8_PA4_VALUE, DIO_u8_PA3_VALUE,
			DIO_u8_PA2_VALUE, DIO_u8_PA1_VALUE, DIO_u8_PA0_VALUE);
	DIO_u8_PORTB_REG = PRIVATE_u8_CONC(DIO_u8_PB7_VALUE, DIO_u8_PB6_VALUE,
     cbc:	e8 e3       	ldi	r30, 0x38	; 56
     cbe:	f0 e0       	ldi	r31, 0x00	; 0
     cc0:	87 ef       	ldi	r24, 0xF7	; 247
     cc2:	80 83       	st	Z, r24
			DIO_u8_PB5_VALUE, DIO_u8_PB4_VALUE, DIO_u8_PB3_VALUE,
			DIO_u8_PB2_VALUE, DIO_u8_PB1_VALUE, DIO_u8_PB0_VALUE);
	DIO_u8_PORTC_REG = PRIVATE_u8_CONC(DIO_u8_PC7_VALUE, DIO_u8_PC6_VALUE,
     cc4:	e5 e3       	ldi	r30, 0x35	; 53
     cc6:	f0 e0       	ldi	r31, 0x00	; 0
     cc8:	8f ed       	ldi	r24, 0xDF	; 223
     cca:	80 83       	st	Z, r24
			DIO_u8_PC5_VALUE, DIO_u8_PC4_VALUE, DIO_u8_PC3_VALUE,
			DIO_u8_PC2_VALUE, DIO_u8_PC1_VALUE, DIO_u8_PC0_VALUE);
	DIO_u8_PORTD_REG = PRIVATE_u8_CONC(DIO_u8_PD7_VALUE, DIO_u8_PD6_VALUE,
     ccc:	e2 e3       	ldi	r30, 0x32	; 50
     cce:	f0 e0       	ldi	r31, 0x00	; 0
     cd0:	10 82       	st	Z, r1
			DIO_u8_PD5_VALUE, DIO_u8_PD4_VALUE, DIO_u8_PD3_VALUE,
			DIO_u8_PD2_VALUE, DIO_u8_PD1_VALUE, DIO_u8_PD0_VALUE);

}
     cd2:	cf 91       	pop	r28
     cd4:	df 91       	pop	r29
     cd6:	08 95       	ret

00000cd8 <DIO_u8SetPinDirection>:
u8 DIO_u8SetPinDirection(u8 Copy_u8PortId, u8 Copy_u8PinId,
		u8 Copy_u8PinDirection) {
     cd8:	df 93       	push	r29
     cda:	cf 93       	push	r28
     cdc:	cd b7       	in	r28, 0x3d	; 61
     cde:	de b7       	in	r29, 0x3e	; 62
     ce0:	2e 97       	sbiw	r28, 0x0e	; 14
     ce2:	0f b6       	in	r0, 0x3f	; 63
     ce4:	f8 94       	cli
     ce6:	de bf       	out	0x3e, r29	; 62
     ce8:	0f be       	out	0x3f, r0	; 63
     cea:	cd bf       	out	0x3d, r28	; 61
     cec:	8a 83       	std	Y+2, r24	; 0x02
     cee:	6b 83       	std	Y+3, r22	; 0x03
     cf0:	4c 83       	std	Y+4, r20	; 0x04

	u8 Local_u8ErrorState = STD_TYPES_OK;
     cf2:	81 e0       	ldi	r24, 0x01	; 1
     cf4:	89 83       	std	Y+1, r24	; 0x01
	if ((Copy_u8PinId <= DIO_u8_PIN7)) {
     cf6:	8b 81       	ldd	r24, Y+3	; 0x03
     cf8:	88 30       	cpi	r24, 0x08	; 8
     cfa:	08 f0       	brcs	.+2      	; 0xcfe <DIO_u8SetPinDirection+0x26>
     cfc:	68 c1       	rjmp	.+720    	; 0xfce <DIO_u8SetPinDirection+0x2f6>
		switch (Copy_u8PortId) {
     cfe:	8a 81       	ldd	r24, Y+2	; 0x02
     d00:	28 2f       	mov	r18, r24
     d02:	30 e0       	ldi	r19, 0x00	; 0
     d04:	3e 87       	std	Y+14, r19	; 0x0e
     d06:	2d 87       	std	Y+13, r18	; 0x0d
     d08:	8d 85       	ldd	r24, Y+13	; 0x0d
     d0a:	9e 85       	ldd	r25, Y+14	; 0x0e
     d0c:	81 30       	cpi	r24, 0x01	; 1
     d0e:	91 05       	cpc	r25, r1
     d10:	09 f4       	brne	.+2      	; 0xd14 <DIO_u8SetPinDirection+0x3c>
     d12:	68 c0       	rjmp	.+208    	; 0xde4 <DIO_u8SetPinDirection+0x10c>
     d14:	2d 85       	ldd	r18, Y+13	; 0x0d
     d16:	3e 85       	ldd	r19, Y+14	; 0x0e
     d18:	22 30       	cpi	r18, 0x02	; 2
     d1a:	31 05       	cpc	r19, r1
     d1c:	2c f4       	brge	.+10     	; 0xd28 <DIO_u8SetPinDirection+0x50>
     d1e:	8d 85       	ldd	r24, Y+13	; 0x0d
     d20:	9e 85       	ldd	r25, Y+14	; 0x0e
     d22:	00 97       	sbiw	r24, 0x00	; 0
     d24:	71 f0       	breq	.+28     	; 0xd42 <DIO_u8SetPinDirection+0x6a>
     d26:	51 c1       	rjmp	.+674    	; 0xfca <DIO_u8SetPinDirection+0x2f2>
     d28:	2d 85       	ldd	r18, Y+13	; 0x0d
     d2a:	3e 85       	ldd	r19, Y+14	; 0x0e
     d2c:	22 30       	cpi	r18, 0x02	; 2
     d2e:	31 05       	cpc	r19, r1
     d30:	09 f4       	brne	.+2      	; 0xd34 <DIO_u8SetPinDirection+0x5c>
     d32:	a9 c0       	rjmp	.+338    	; 0xe86 <DIO_u8SetPinDirection+0x1ae>
     d34:	8d 85       	ldd	r24, Y+13	; 0x0d
     d36:	9e 85       	ldd	r25, Y+14	; 0x0e
     d38:	83 30       	cpi	r24, 0x03	; 3
     d3a:	91 05       	cpc	r25, r1
     d3c:	09 f4       	brne	.+2      	; 0xd40 <DIO_u8SetPinDirection+0x68>
     d3e:	f4 c0       	rjmp	.+488    	; 0xf28 <DIO_u8SetPinDirection+0x250>
     d40:	44 c1       	rjmp	.+648    	; 0xfca <DIO_u8SetPinDirection+0x2f2>
		case DIO_u8_PORTA:
			switch (Copy_u8PinDirection) {
     d42:	8c 81       	ldd	r24, Y+4	; 0x04
     d44:	28 2f       	mov	r18, r24
     d46:	30 e0       	ldi	r19, 0x00	; 0
     d48:	3c 87       	std	Y+12, r19	; 0x0c
     d4a:	2b 87       	std	Y+11, r18	; 0x0b
     d4c:	8b 85       	ldd	r24, Y+11	; 0x0b
     d4e:	9c 85       	ldd	r25, Y+12	; 0x0c
     d50:	81 30       	cpi	r24, 0x01	; 1
     d52:	91 05       	cpc	r25, r1
     d54:	89 f1       	breq	.+98     	; 0xdb8 <DIO_u8SetPinDirection+0xe0>
     d56:	2b 85       	ldd	r18, Y+11	; 0x0b
     d58:	3c 85       	ldd	r19, Y+12	; 0x0c
     d5a:	22 30       	cpi	r18, 0x02	; 2
     d5c:	31 05       	cpc	r19, r1
     d5e:	29 f0       	breq	.+10     	; 0xd6a <DIO_u8SetPinDirection+0x92>
     d60:	8b 85       	ldd	r24, Y+11	; 0x0b
     d62:	9c 85       	ldd	r25, Y+12	; 0x0c
     d64:	00 97       	sbiw	r24, 0x00	; 0
     d66:	99 f0       	breq	.+38     	; 0xd8e <DIO_u8SetPinDirection+0xb6>
     d68:	3b c0       	rjmp	.+118    	; 0xde0 <DIO_u8SetPinDirection+0x108>
			case DIO_u8_INPUT_PULLUP:
				SET_BIT(DIO_u8_PORTA_REG, Copy_u8PinId);
     d6a:	ab e3       	ldi	r26, 0x3B	; 59
     d6c:	b0 e0       	ldi	r27, 0x00	; 0
     d6e:	eb e3       	ldi	r30, 0x3B	; 59
     d70:	f0 e0       	ldi	r31, 0x00	; 0
     d72:	80 81       	ld	r24, Z
     d74:	48 2f       	mov	r20, r24
     d76:	8b 81       	ldd	r24, Y+3	; 0x03
     d78:	28 2f       	mov	r18, r24
     d7a:	30 e0       	ldi	r19, 0x00	; 0
     d7c:	81 e0       	ldi	r24, 0x01	; 1
     d7e:	90 e0       	ldi	r25, 0x00	; 0
     d80:	02 c0       	rjmp	.+4      	; 0xd86 <DIO_u8SetPinDirection+0xae>
     d82:	88 0f       	add	r24, r24
     d84:	99 1f       	adc	r25, r25
     d86:	2a 95       	dec	r18
     d88:	e2 f7       	brpl	.-8      	; 0xd82 <DIO_u8SetPinDirection+0xaa>
     d8a:	84 2b       	or	r24, r20
     d8c:	8c 93       	st	X, r24
			case DIO_u8_INPUT_FLOATING:
				CLR_BIT(DIO_u8_DDRA_REG, Copy_u8PinId);
     d8e:	aa e3       	ldi	r26, 0x3A	; 58
     d90:	b0 e0       	ldi	r27, 0x00	; 0
     d92:	ea e3       	ldi	r30, 0x3A	; 58
     d94:	f0 e0       	ldi	r31, 0x00	; 0
     d96:	80 81       	ld	r24, Z
     d98:	48 2f       	mov	r20, r24
     d9a:	8b 81       	ldd	r24, Y+3	; 0x03
     d9c:	28 2f       	mov	r18, r24
     d9e:	30 e0       	ldi	r19, 0x00	; 0
     da0:	81 e0       	ldi	r24, 0x01	; 1
     da2:	90 e0       	ldi	r25, 0x00	; 0
     da4:	02 2e       	mov	r0, r18
     da6:	02 c0       	rjmp	.+4      	; 0xdac <DIO_u8SetPinDirection+0xd4>
     da8:	88 0f       	add	r24, r24
     daa:	99 1f       	adc	r25, r25
     dac:	0a 94       	dec	r0
     dae:	e2 f7       	brpl	.-8      	; 0xda8 <DIO_u8SetPinDirection+0xd0>
     db0:	80 95       	com	r24
     db2:	84 23       	and	r24, r20
     db4:	8c 93       	st	X, r24
     db6:	0c c1       	rjmp	.+536    	; 0xfd0 <DIO_u8SetPinDirection+0x2f8>
				break;
			case DIO_u8_OUTPUT:
				SET_BIT(DIO_u8_DDRA_REG, Copy_u8PinId);
     db8:	aa e3       	ldi	r26, 0x3A	; 58
     dba:	b0 e0       	ldi	r27, 0x00	; 0
     dbc:	ea e3       	ldi	r30, 0x3A	; 58
     dbe:	f0 e0       	ldi	r31, 0x00	; 0
     dc0:	80 81       	ld	r24, Z
     dc2:	48 2f       	mov	r20, r24
     dc4:	8b 81       	ldd	r24, Y+3	; 0x03
     dc6:	28 2f       	mov	r18, r24
     dc8:	30 e0       	ldi	r19, 0x00	; 0
     dca:	81 e0       	ldi	r24, 0x01	; 1
     dcc:	90 e0       	ldi	r25, 0x00	; 0
     dce:	02 2e       	mov	r0, r18
     dd0:	02 c0       	rjmp	.+4      	; 0xdd6 <DIO_u8SetPinDirection+0xfe>
     dd2:	88 0f       	add	r24, r24
     dd4:	99 1f       	adc	r25, r25
     dd6:	0a 94       	dec	r0
     dd8:	e2 f7       	brpl	.-8      	; 0xdd2 <DIO_u8SetPinDirection+0xfa>
     dda:	84 2b       	or	r24, r20
     ddc:	8c 93       	st	X, r24
     dde:	f8 c0       	rjmp	.+496    	; 0xfd0 <DIO_u8SetPinDirection+0x2f8>
				break;
			default:
				Local_u8ErrorState = STD_TYPES_NOK;
     de0:	19 82       	std	Y+1, r1	; 0x01
     de2:	f6 c0       	rjmp	.+492    	; 0xfd0 <DIO_u8SetPinDirection+0x2f8>
			}
			break;
		case DIO_u8_PORTB:
			switch (Copy_u8PinDirection) {
     de4:	8c 81       	ldd	r24, Y+4	; 0x04
     de6:	28 2f       	mov	r18, r24
     de8:	30 e0       	ldi	r19, 0x00	; 0
     dea:	3a 87       	std	Y+10, r19	; 0x0a
     dec:	29 87       	std	Y+9, r18	; 0x09
     dee:	89 85       	ldd	r24, Y+9	; 0x09
     df0:	9a 85       	ldd	r25, Y+10	; 0x0a
     df2:	81 30       	cpi	r24, 0x01	; 1
     df4:	91 05       	cpc	r25, r1
     df6:	89 f1       	breq	.+98     	; 0xe5a <DIO_u8SetPinDirection+0x182>
     df8:	29 85       	ldd	r18, Y+9	; 0x09
     dfa:	3a 85       	ldd	r19, Y+10	; 0x0a
     dfc:	22 30       	cpi	r18, 0x02	; 2
     dfe:	31 05       	cpc	r19, r1
     e00:	29 f0       	breq	.+10     	; 0xe0c <DIO_u8SetPinDirection+0x134>
     e02:	89 85       	ldd	r24, Y+9	; 0x09
     e04:	9a 85       	ldd	r25, Y+10	; 0x0a
     e06:	00 97       	sbiw	r24, 0x00	; 0
     e08:	99 f0       	breq	.+38     	; 0xe30 <DIO_u8SetPinDirection+0x158>
     e0a:	3b c0       	rjmp	.+118    	; 0xe82 <DIO_u8SetPinDirection+0x1aa>
			case DIO_u8_INPUT_PULLUP:
				SET_BIT(DIO_u8_PORTB_REG, Copy_u8PinId);
     e0c:	a8 e3       	ldi	r26, 0x38	; 56
     e0e:	b0 e0       	ldi	r27, 0x00	; 0
     e10:	e8 e3       	ldi	r30, 0x38	; 56
     e12:	f0 e0       	ldi	r31, 0x00	; 0
     e14:	80 81       	ld	r24, Z
     e16:	48 2f       	mov	r20, r24
     e18:	8b 81       	ldd	r24, Y+3	; 0x03
     e1a:	28 2f       	mov	r18, r24
     e1c:	30 e0       	ldi	r19, 0x00	; 0
     e1e:	81 e0       	ldi	r24, 0x01	; 1
     e20:	90 e0       	ldi	r25, 0x00	; 0
     e22:	02 c0       	rjmp	.+4      	; 0xe28 <DIO_u8SetPinDirection+0x150>
     e24:	88 0f       	add	r24, r24
     e26:	99 1f       	adc	r25, r25
     e28:	2a 95       	dec	r18
     e2a:	e2 f7       	brpl	.-8      	; 0xe24 <DIO_u8SetPinDirection+0x14c>
     e2c:	84 2b       	or	r24, r20
     e2e:	8c 93       	st	X, r24
			case DIO_u8_INPUT_FLOATING:
				CLR_BIT(DIO_u8_DDRB_REG, Copy_u8PinId);
     e30:	a7 e3       	ldi	r26, 0x37	; 55
     e32:	b0 e0       	ldi	r27, 0x00	; 0
     e34:	e7 e3       	ldi	r30, 0x37	; 55
     e36:	f0 e0       	ldi	r31, 0x00	; 0
     e38:	80 81       	ld	r24, Z
     e3a:	48 2f       	mov	r20, r24
     e3c:	8b 81       	ldd	r24, Y+3	; 0x03
     e3e:	28 2f       	mov	r18, r24
     e40:	30 e0       	ldi	r19, 0x00	; 0
     e42:	81 e0       	ldi	r24, 0x01	; 1
     e44:	90 e0       	ldi	r25, 0x00	; 0
     e46:	02 2e       	mov	r0, r18
     e48:	02 c0       	rjmp	.+4      	; 0xe4e <DIO_u8SetPinDirection+0x176>
     e4a:	88 0f       	add	r24, r24
     e4c:	99 1f       	adc	r25, r25
     e4e:	0a 94       	dec	r0
     e50:	e2 f7       	brpl	.-8      	; 0xe4a <DIO_u8SetPinDirection+0x172>
     e52:	80 95       	com	r24
     e54:	84 23       	and	r24, r20
     e56:	8c 93       	st	X, r24
     e58:	bb c0       	rjmp	.+374    	; 0xfd0 <DIO_u8SetPinDirection+0x2f8>
				break;
			case DIO_u8_OUTPUT:
				SET_BIT(DIO_u8_DDRB_REG, Copy_u8PinId);
     e5a:	a7 e3       	ldi	r26, 0x37	; 55
     e5c:	b0 e0       	ldi	r27, 0x00	; 0
     e5e:	e7 e3       	ldi	r30, 0x37	; 55
     e60:	f0 e0       	ldi	r31, 0x00	; 0
     e62:	80 81       	ld	r24, Z
     e64:	48 2f       	mov	r20, r24
     e66:	8b 81       	ldd	r24, Y+3	; 0x03
     e68:	28 2f       	mov	r18, r24
     e6a:	30 e0       	ldi	r19, 0x00	; 0
     e6c:	81 e0       	ldi	r24, 0x01	; 1
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	02 2e       	mov	r0, r18
     e72:	02 c0       	rjmp	.+4      	; 0xe78 <DIO_u8SetPinDirection+0x1a0>
     e74:	88 0f       	add	r24, r24
     e76:	99 1f       	adc	r25, r25
     e78:	0a 94       	dec	r0
     e7a:	e2 f7       	brpl	.-8      	; 0xe74 <DIO_u8SetPinDirection+0x19c>
     e7c:	84 2b       	or	r24, r20
     e7e:	8c 93       	st	X, r24
     e80:	a7 c0       	rjmp	.+334    	; 0xfd0 <DIO_u8SetPinDirection+0x2f8>
				break;
			default:
				Local_u8ErrorState = STD_TYPES_NOK;
     e82:	19 82       	std	Y+1, r1	; 0x01
     e84:	a5 c0       	rjmp	.+330    	; 0xfd0 <DIO_u8SetPinDirection+0x2f8>
			}
			break;
		case DIO_u8_PORTC:
			switch (Copy_u8PinDirection) {
     e86:	8c 81       	ldd	r24, Y+4	; 0x04
     e88:	28 2f       	mov	r18, r24
     e8a:	30 e0       	ldi	r19, 0x00	; 0
     e8c:	38 87       	std	Y+8, r19	; 0x08
     e8e:	2f 83       	std	Y+7, r18	; 0x07
     e90:	8f 81       	ldd	r24, Y+7	; 0x07
     e92:	98 85       	ldd	r25, Y+8	; 0x08
     e94:	81 30       	cpi	r24, 0x01	; 1
     e96:	91 05       	cpc	r25, r1
     e98:	89 f1       	breq	.+98     	; 0xefc <DIO_u8SetPinDirection+0x224>
     e9a:	2f 81       	ldd	r18, Y+7	; 0x07
     e9c:	38 85       	ldd	r19, Y+8	; 0x08
     e9e:	22 30       	cpi	r18, 0x02	; 2
     ea0:	31 05       	cpc	r19, r1
     ea2:	29 f0       	breq	.+10     	; 0xeae <DIO_u8SetPinDirection+0x1d6>
     ea4:	8f 81       	ldd	r24, Y+7	; 0x07
     ea6:	98 85       	ldd	r25, Y+8	; 0x08
     ea8:	00 97       	sbiw	r24, 0x00	; 0
     eaa:	99 f0       	breq	.+38     	; 0xed2 <DIO_u8SetPinDirection+0x1fa>
     eac:	3b c0       	rjmp	.+118    	; 0xf24 <DIO_u8SetPinDirection+0x24c>
			case DIO_u8_INPUT_PULLUP:
				SET_BIT(DIO_u8_PORTC_REG, Copy_u8PinId);
     eae:	a5 e3       	ldi	r26, 0x35	; 53
     eb0:	b0 e0       	ldi	r27, 0x00	; 0
     eb2:	e5 e3       	ldi	r30, 0x35	; 53
     eb4:	f0 e0       	ldi	r31, 0x00	; 0
     eb6:	80 81       	ld	r24, Z
     eb8:	48 2f       	mov	r20, r24
     eba:	8b 81       	ldd	r24, Y+3	; 0x03
     ebc:	28 2f       	mov	r18, r24
     ebe:	30 e0       	ldi	r19, 0x00	; 0
     ec0:	81 e0       	ldi	r24, 0x01	; 1
     ec2:	90 e0       	ldi	r25, 0x00	; 0
     ec4:	02 c0       	rjmp	.+4      	; 0xeca <DIO_u8SetPinDirection+0x1f2>
     ec6:	88 0f       	add	r24, r24
     ec8:	99 1f       	adc	r25, r25
     eca:	2a 95       	dec	r18
     ecc:	e2 f7       	brpl	.-8      	; 0xec6 <DIO_u8SetPinDirection+0x1ee>
     ece:	84 2b       	or	r24, r20
     ed0:	8c 93       	st	X, r24
			case DIO_u8_INPUT_FLOATING:
				CLR_BIT(DIO_u8_DDRC_REG, Copy_u8PinId);
     ed2:	a4 e3       	ldi	r26, 0x34	; 52
     ed4:	b0 e0       	ldi	r27, 0x00	; 0
     ed6:	e4 e3       	ldi	r30, 0x34	; 52
     ed8:	f0 e0       	ldi	r31, 0x00	; 0
     eda:	80 81       	ld	r24, Z
     edc:	48 2f       	mov	r20, r24
     ede:	8b 81       	ldd	r24, Y+3	; 0x03
     ee0:	28 2f       	mov	r18, r24
     ee2:	30 e0       	ldi	r19, 0x00	; 0
     ee4:	81 e0       	ldi	r24, 0x01	; 1
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	02 2e       	mov	r0, r18
     eea:	02 c0       	rjmp	.+4      	; 0xef0 <DIO_u8SetPinDirection+0x218>
     eec:	88 0f       	add	r24, r24
     eee:	99 1f       	adc	r25, r25
     ef0:	0a 94       	dec	r0
     ef2:	e2 f7       	brpl	.-8      	; 0xeec <DIO_u8SetPinDirection+0x214>
     ef4:	80 95       	com	r24
     ef6:	84 23       	and	r24, r20
     ef8:	8c 93       	st	X, r24
     efa:	6a c0       	rjmp	.+212    	; 0xfd0 <DIO_u8SetPinDirection+0x2f8>
				break;
			case DIO_u8_OUTPUT:
				SET_BIT(DIO_u8_DDRC_REG, Copy_u8PinId);
     efc:	a4 e3       	ldi	r26, 0x34	; 52
     efe:	b0 e0       	ldi	r27, 0x00	; 0
     f00:	e4 e3       	ldi	r30, 0x34	; 52
     f02:	f0 e0       	ldi	r31, 0x00	; 0
     f04:	80 81       	ld	r24, Z
     f06:	48 2f       	mov	r20, r24
     f08:	8b 81       	ldd	r24, Y+3	; 0x03
     f0a:	28 2f       	mov	r18, r24
     f0c:	30 e0       	ldi	r19, 0x00	; 0
     f0e:	81 e0       	ldi	r24, 0x01	; 1
     f10:	90 e0       	ldi	r25, 0x00	; 0
     f12:	02 2e       	mov	r0, r18
     f14:	02 c0       	rjmp	.+4      	; 0xf1a <DIO_u8SetPinDirection+0x242>
     f16:	88 0f       	add	r24, r24
     f18:	99 1f       	adc	r25, r25
     f1a:	0a 94       	dec	r0
     f1c:	e2 f7       	brpl	.-8      	; 0xf16 <DIO_u8SetPinDirection+0x23e>
     f1e:	84 2b       	or	r24, r20
     f20:	8c 93       	st	X, r24
     f22:	56 c0       	rjmp	.+172    	; 0xfd0 <DIO_u8SetPinDirection+0x2f8>
				break;
			default:
				Local_u8ErrorState = STD_TYPES_NOK;
     f24:	19 82       	std	Y+1, r1	; 0x01
     f26:	54 c0       	rjmp	.+168    	; 0xfd0 <DIO_u8SetPinDirection+0x2f8>
			}
			break;
		case DIO_u8_PORTD:
			switch (Copy_u8PinDirection) {
     f28:	8c 81       	ldd	r24, Y+4	; 0x04
     f2a:	28 2f       	mov	r18, r24
     f2c:	30 e0       	ldi	r19, 0x00	; 0
     f2e:	3e 83       	std	Y+6, r19	; 0x06
     f30:	2d 83       	std	Y+5, r18	; 0x05
     f32:	8d 81       	ldd	r24, Y+5	; 0x05
     f34:	9e 81       	ldd	r25, Y+6	; 0x06
     f36:	81 30       	cpi	r24, 0x01	; 1
     f38:	91 05       	cpc	r25, r1
     f3a:	89 f1       	breq	.+98     	; 0xf9e <DIO_u8SetPinDirection+0x2c6>
     f3c:	2d 81       	ldd	r18, Y+5	; 0x05
     f3e:	3e 81       	ldd	r19, Y+6	; 0x06
     f40:	22 30       	cpi	r18, 0x02	; 2
     f42:	31 05       	cpc	r19, r1
     f44:	29 f0       	breq	.+10     	; 0xf50 <DIO_u8SetPinDirection+0x278>
     f46:	8d 81       	ldd	r24, Y+5	; 0x05
     f48:	9e 81       	ldd	r25, Y+6	; 0x06
     f4a:	00 97       	sbiw	r24, 0x00	; 0
     f4c:	99 f0       	breq	.+38     	; 0xf74 <DIO_u8SetPinDirection+0x29c>
     f4e:	3b c0       	rjmp	.+118    	; 0xfc6 <DIO_u8SetPinDirection+0x2ee>
			case DIO_u8_INPUT_PULLUP:
				SET_BIT(DIO_u8_PORTD_REG, Copy_u8PinId);
     f50:	a2 e3       	ldi	r26, 0x32	; 50
     f52:	b0 e0       	ldi	r27, 0x00	; 0
     f54:	e2 e3       	ldi	r30, 0x32	; 50
     f56:	f0 e0       	ldi	r31, 0x00	; 0
     f58:	80 81       	ld	r24, Z
     f5a:	48 2f       	mov	r20, r24
     f5c:	8b 81       	ldd	r24, Y+3	; 0x03
     f5e:	28 2f       	mov	r18, r24
     f60:	30 e0       	ldi	r19, 0x00	; 0
     f62:	81 e0       	ldi	r24, 0x01	; 1
     f64:	90 e0       	ldi	r25, 0x00	; 0
     f66:	02 c0       	rjmp	.+4      	; 0xf6c <DIO_u8SetPinDirection+0x294>
     f68:	88 0f       	add	r24, r24
     f6a:	99 1f       	adc	r25, r25
     f6c:	2a 95       	dec	r18
     f6e:	e2 f7       	brpl	.-8      	; 0xf68 <DIO_u8SetPinDirection+0x290>
     f70:	84 2b       	or	r24, r20
     f72:	8c 93       	st	X, r24
			case DIO_u8_INPUT_FLOATING:
				CLR_BIT(DIO_u8_DDRD_REG, Copy_u8PinId);
     f74:	a1 e3       	ldi	r26, 0x31	; 49
     f76:	b0 e0       	ldi	r27, 0x00	; 0
     f78:	e1 e3       	ldi	r30, 0x31	; 49
     f7a:	f0 e0       	ldi	r31, 0x00	; 0
     f7c:	80 81       	ld	r24, Z
     f7e:	48 2f       	mov	r20, r24
     f80:	8b 81       	ldd	r24, Y+3	; 0x03
     f82:	28 2f       	mov	r18, r24
     f84:	30 e0       	ldi	r19, 0x00	; 0
     f86:	81 e0       	ldi	r24, 0x01	; 1
     f88:	90 e0       	ldi	r25, 0x00	; 0
     f8a:	02 2e       	mov	r0, r18
     f8c:	02 c0       	rjmp	.+4      	; 0xf92 <DIO_u8SetPinDirection+0x2ba>
     f8e:	88 0f       	add	r24, r24
     f90:	99 1f       	adc	r25, r25
     f92:	0a 94       	dec	r0
     f94:	e2 f7       	brpl	.-8      	; 0xf8e <DIO_u8SetPinDirection+0x2b6>
     f96:	80 95       	com	r24
     f98:	84 23       	and	r24, r20
     f9a:	8c 93       	st	X, r24
     f9c:	19 c0       	rjmp	.+50     	; 0xfd0 <DIO_u8SetPinDirection+0x2f8>
				break;
			case DIO_u8_OUTPUT:
				SET_BIT(DIO_u8_DDRD_REG, Copy_u8PinId);
     f9e:	a1 e3       	ldi	r26, 0x31	; 49
     fa0:	b0 e0       	ldi	r27, 0x00	; 0
     fa2:	e1 e3       	ldi	r30, 0x31	; 49
     fa4:	f0 e0       	ldi	r31, 0x00	; 0
     fa6:	80 81       	ld	r24, Z
     fa8:	48 2f       	mov	r20, r24
     faa:	8b 81       	ldd	r24, Y+3	; 0x03
     fac:	28 2f       	mov	r18, r24
     fae:	30 e0       	ldi	r19, 0x00	; 0
     fb0:	81 e0       	ldi	r24, 0x01	; 1
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	02 2e       	mov	r0, r18
     fb6:	02 c0       	rjmp	.+4      	; 0xfbc <DIO_u8SetPinDirection+0x2e4>
     fb8:	88 0f       	add	r24, r24
     fba:	99 1f       	adc	r25, r25
     fbc:	0a 94       	dec	r0
     fbe:	e2 f7       	brpl	.-8      	; 0xfb8 <DIO_u8SetPinDirection+0x2e0>
     fc0:	84 2b       	or	r24, r20
     fc2:	8c 93       	st	X, r24
     fc4:	05 c0       	rjmp	.+10     	; 0xfd0 <DIO_u8SetPinDirection+0x2f8>
				break;
			default:
				Local_u8ErrorState = STD_TYPES_NOK;
     fc6:	19 82       	std	Y+1, r1	; 0x01
     fc8:	03 c0       	rjmp	.+6      	; 0xfd0 <DIO_u8SetPinDirection+0x2f8>
			}
			break;
		default:
			Local_u8ErrorState = STD_TYPES_NOK;
     fca:	19 82       	std	Y+1, r1	; 0x01
     fcc:	01 c0       	rjmp	.+2      	; 0xfd0 <DIO_u8SetPinDirection+0x2f8>
		}
	} else
		Local_u8ErrorState = STD_TYPES_NOK;
     fce:	19 82       	std	Y+1, r1	; 0x01
	return Local_u8ErrorState;
     fd0:	89 81       	ldd	r24, Y+1	; 0x01
}
     fd2:	2e 96       	adiw	r28, 0x0e	; 14
     fd4:	0f b6       	in	r0, 0x3f	; 63
     fd6:	f8 94       	cli
     fd8:	de bf       	out	0x3e, r29	; 62
     fda:	0f be       	out	0x3f, r0	; 63
     fdc:	cd bf       	out	0x3d, r28	; 61
     fde:	cf 91       	pop	r28
     fe0:	df 91       	pop	r29
     fe2:	08 95       	ret

00000fe4 <DIO_u8SetPortDirection>:
u8 DIO_u8SetPortDirection(u8 Copy_u8PortId, u8 Copy_u8PortDirection) {
     fe4:	df 93       	push	r29
     fe6:	cf 93       	push	r28
     fe8:	cd b7       	in	r28, 0x3d	; 61
     fea:	de b7       	in	r29, 0x3e	; 62
     fec:	2d 97       	sbiw	r28, 0x0d	; 13
     fee:	0f b6       	in	r0, 0x3f	; 63
     ff0:	f8 94       	cli
     ff2:	de bf       	out	0x3e, r29	; 62
     ff4:	0f be       	out	0x3f, r0	; 63
     ff6:	cd bf       	out	0x3d, r28	; 61
     ff8:	8a 83       	std	Y+2, r24	; 0x02
     ffa:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState = STD_TYPES_OK;
     ffc:	81 e0       	ldi	r24, 0x01	; 1
     ffe:	89 83       	std	Y+1, r24	; 0x01
	switch (Copy_u8PortId) {
    1000:	8a 81       	ldd	r24, Y+2	; 0x02
    1002:	28 2f       	mov	r18, r24
    1004:	30 e0       	ldi	r19, 0x00	; 0
    1006:	3d 87       	std	Y+13, r19	; 0x0d
    1008:	2c 87       	std	Y+12, r18	; 0x0c
    100a:	8c 85       	ldd	r24, Y+12	; 0x0c
    100c:	9d 85       	ldd	r25, Y+13	; 0x0d
    100e:	81 30       	cpi	r24, 0x01	; 1
    1010:	91 05       	cpc	r25, r1
    1012:	d1 f1       	breq	.+116    	; 0x1088 <DIO_u8SetPortDirection+0xa4>
    1014:	2c 85       	ldd	r18, Y+12	; 0x0c
    1016:	3d 85       	ldd	r19, Y+13	; 0x0d
    1018:	22 30       	cpi	r18, 0x02	; 2
    101a:	31 05       	cpc	r19, r1
    101c:	2c f4       	brge	.+10     	; 0x1028 <DIO_u8SetPortDirection+0x44>
    101e:	8c 85       	ldd	r24, Y+12	; 0x0c
    1020:	9d 85       	ldd	r25, Y+13	; 0x0d
    1022:	00 97       	sbiw	r24, 0x00	; 0
    1024:	71 f0       	breq	.+28     	; 0x1042 <DIO_u8SetPortDirection+0x5e>
    1026:	99 c0       	rjmp	.+306    	; 0x115a <DIO_u8SetPortDirection+0x176>
    1028:	2c 85       	ldd	r18, Y+12	; 0x0c
    102a:	3d 85       	ldd	r19, Y+13	; 0x0d
    102c:	22 30       	cpi	r18, 0x02	; 2
    102e:	31 05       	cpc	r19, r1
    1030:	09 f4       	brne	.+2      	; 0x1034 <DIO_u8SetPortDirection+0x50>
    1032:	4d c0       	rjmp	.+154    	; 0x10ce <DIO_u8SetPortDirection+0xea>
    1034:	8c 85       	ldd	r24, Y+12	; 0x0c
    1036:	9d 85       	ldd	r25, Y+13	; 0x0d
    1038:	83 30       	cpi	r24, 0x03	; 3
    103a:	91 05       	cpc	r25, r1
    103c:	09 f4       	brne	.+2      	; 0x1040 <DIO_u8SetPortDirection+0x5c>
    103e:	6a c0       	rjmp	.+212    	; 0x1114 <DIO_u8SetPortDirection+0x130>
    1040:	8c c0       	rjmp	.+280    	; 0x115a <DIO_u8SetPortDirection+0x176>
	case DIO_u8_PORTA:
		switch (Copy_u8PortDirection) {
    1042:	8b 81       	ldd	r24, Y+3	; 0x03
    1044:	28 2f       	mov	r18, r24
    1046:	30 e0       	ldi	r19, 0x00	; 0
    1048:	3b 87       	std	Y+11, r19	; 0x0b
    104a:	2a 87       	std	Y+10, r18	; 0x0a
    104c:	8a 85       	ldd	r24, Y+10	; 0x0a
    104e:	9b 85       	ldd	r25, Y+11	; 0x0b
    1050:	81 30       	cpi	r24, 0x01	; 1
    1052:	91 05       	cpc	r25, r1
    1054:	91 f0       	breq	.+36     	; 0x107a <DIO_u8SetPortDirection+0x96>
    1056:	2a 85       	ldd	r18, Y+10	; 0x0a
    1058:	3b 85       	ldd	r19, Y+11	; 0x0b
    105a:	22 30       	cpi	r18, 0x02	; 2
    105c:	31 05       	cpc	r19, r1
    105e:	29 f0       	breq	.+10     	; 0x106a <DIO_u8SetPortDirection+0x86>
    1060:	8a 85       	ldd	r24, Y+10	; 0x0a
    1062:	9b 85       	ldd	r25, Y+11	; 0x0b
    1064:	00 97       	sbiw	r24, 0x00	; 0
    1066:	29 f0       	breq	.+10     	; 0x1072 <DIO_u8SetPortDirection+0x8e>
    1068:	0d c0       	rjmp	.+26     	; 0x1084 <DIO_u8SetPortDirection+0xa0>
		case DIO_u8_INPUT_PULLUP:
			DIO_u8_PORTA_REG = 0xff;
    106a:	eb e3       	ldi	r30, 0x3B	; 59
    106c:	f0 e0       	ldi	r31, 0x00	; 0
    106e:	8f ef       	ldi	r24, 0xFF	; 255
    1070:	80 83       	st	Z, r24
		case DIO_u8_INPUT_FLOATING:
			DIO_u8_DDRA_REG = 0x00;
    1072:	ea e3       	ldi	r30, 0x3A	; 58
    1074:	f0 e0       	ldi	r31, 0x00	; 0
    1076:	10 82       	st	Z, r1
    1078:	71 c0       	rjmp	.+226    	; 0x115c <DIO_u8SetPortDirection+0x178>
			break;
		case DIO_u8_OUTPUT:
			DIO_u8_DDRA_REG = 0xff;
    107a:	ea e3       	ldi	r30, 0x3A	; 58
    107c:	f0 e0       	ldi	r31, 0x00	; 0
    107e:	8f ef       	ldi	r24, 0xFF	; 255
    1080:	80 83       	st	Z, r24
    1082:	6c c0       	rjmp	.+216    	; 0x115c <DIO_u8SetPortDirection+0x178>
			break;
		default:
			Local_u8ErrorState = STD_TYPES_NOK;
    1084:	19 82       	std	Y+1, r1	; 0x01
    1086:	6a c0       	rjmp	.+212    	; 0x115c <DIO_u8SetPortDirection+0x178>
		}
		break;
	case DIO_u8_PORTB:
		switch (Copy_u8PortDirection) {
    1088:	8b 81       	ldd	r24, Y+3	; 0x03
    108a:	28 2f       	mov	r18, r24
    108c:	30 e0       	ldi	r19, 0x00	; 0
    108e:	39 87       	std	Y+9, r19	; 0x09
    1090:	28 87       	std	Y+8, r18	; 0x08
    1092:	88 85       	ldd	r24, Y+8	; 0x08
    1094:	99 85       	ldd	r25, Y+9	; 0x09
    1096:	81 30       	cpi	r24, 0x01	; 1
    1098:	91 05       	cpc	r25, r1
    109a:	91 f0       	breq	.+36     	; 0x10c0 <DIO_u8SetPortDirection+0xdc>
    109c:	28 85       	ldd	r18, Y+8	; 0x08
    109e:	39 85       	ldd	r19, Y+9	; 0x09
    10a0:	22 30       	cpi	r18, 0x02	; 2
    10a2:	31 05       	cpc	r19, r1
    10a4:	29 f0       	breq	.+10     	; 0x10b0 <DIO_u8SetPortDirection+0xcc>
    10a6:	88 85       	ldd	r24, Y+8	; 0x08
    10a8:	99 85       	ldd	r25, Y+9	; 0x09
    10aa:	00 97       	sbiw	r24, 0x00	; 0
    10ac:	29 f0       	breq	.+10     	; 0x10b8 <DIO_u8SetPortDirection+0xd4>
    10ae:	0d c0       	rjmp	.+26     	; 0x10ca <DIO_u8SetPortDirection+0xe6>
		case DIO_u8_INPUT_PULLUP:
			DIO_u8_PORTB_REG = 255;
    10b0:	e8 e3       	ldi	r30, 0x38	; 56
    10b2:	f0 e0       	ldi	r31, 0x00	; 0
    10b4:	8f ef       	ldi	r24, 0xFF	; 255
    10b6:	80 83       	st	Z, r24
		case DIO_u8_INPUT_FLOATING:
			DIO_u8_DDRB_REG = 0;
    10b8:	e7 e3       	ldi	r30, 0x37	; 55
    10ba:	f0 e0       	ldi	r31, 0x00	; 0
    10bc:	10 82       	st	Z, r1
    10be:	4e c0       	rjmp	.+156    	; 0x115c <DIO_u8SetPortDirection+0x178>
			break;
		case DIO_u8_OUTPUT:
			DIO_u8_DDRB_REG = 255;
    10c0:	e7 e3       	ldi	r30, 0x37	; 55
    10c2:	f0 e0       	ldi	r31, 0x00	; 0
    10c4:	8f ef       	ldi	r24, 0xFF	; 255
    10c6:	80 83       	st	Z, r24
    10c8:	49 c0       	rjmp	.+146    	; 0x115c <DIO_u8SetPortDirection+0x178>
			break;
		default:
			Local_u8ErrorState = STD_TYPES_NOK;
    10ca:	19 82       	std	Y+1, r1	; 0x01
    10cc:	47 c0       	rjmp	.+142    	; 0x115c <DIO_u8SetPortDirection+0x178>
		}
		break;
	case DIO_u8_PORTC:
		switch (Copy_u8PortDirection) {
    10ce:	8b 81       	ldd	r24, Y+3	; 0x03
    10d0:	28 2f       	mov	r18, r24
    10d2:	30 e0       	ldi	r19, 0x00	; 0
    10d4:	3f 83       	std	Y+7, r19	; 0x07
    10d6:	2e 83       	std	Y+6, r18	; 0x06
    10d8:	8e 81       	ldd	r24, Y+6	; 0x06
    10da:	9f 81       	ldd	r25, Y+7	; 0x07
    10dc:	81 30       	cpi	r24, 0x01	; 1
    10de:	91 05       	cpc	r25, r1
    10e0:	91 f0       	breq	.+36     	; 0x1106 <DIO_u8SetPortDirection+0x122>
    10e2:	2e 81       	ldd	r18, Y+6	; 0x06
    10e4:	3f 81       	ldd	r19, Y+7	; 0x07
    10e6:	22 30       	cpi	r18, 0x02	; 2
    10e8:	31 05       	cpc	r19, r1
    10ea:	29 f0       	breq	.+10     	; 0x10f6 <DIO_u8SetPortDirection+0x112>
    10ec:	8e 81       	ldd	r24, Y+6	; 0x06
    10ee:	9f 81       	ldd	r25, Y+7	; 0x07
    10f0:	00 97       	sbiw	r24, 0x00	; 0
    10f2:	29 f0       	breq	.+10     	; 0x10fe <DIO_u8SetPortDirection+0x11a>
    10f4:	0d c0       	rjmp	.+26     	; 0x1110 <DIO_u8SetPortDirection+0x12c>
		case DIO_u8_INPUT_PULLUP:
			DIO_u8_PORTC_REG = 255;
    10f6:	e5 e3       	ldi	r30, 0x35	; 53
    10f8:	f0 e0       	ldi	r31, 0x00	; 0
    10fa:	8f ef       	ldi	r24, 0xFF	; 255
    10fc:	80 83       	st	Z, r24
		case DIO_u8_INPUT_FLOATING:
			DIO_u8_DDRC_REG = 0;
    10fe:	e4 e3       	ldi	r30, 0x34	; 52
    1100:	f0 e0       	ldi	r31, 0x00	; 0
    1102:	10 82       	st	Z, r1
    1104:	2b c0       	rjmp	.+86     	; 0x115c <DIO_u8SetPortDirection+0x178>
			break;
		case DIO_u8_OUTPUT:
			DIO_u8_DDRC_REG = 255;
    1106:	e4 e3       	ldi	r30, 0x34	; 52
    1108:	f0 e0       	ldi	r31, 0x00	; 0
    110a:	8f ef       	ldi	r24, 0xFF	; 255
    110c:	80 83       	st	Z, r24
    110e:	26 c0       	rjmp	.+76     	; 0x115c <DIO_u8SetPortDirection+0x178>
			break;
		default:
			Local_u8ErrorState = STD_TYPES_NOK;
    1110:	19 82       	std	Y+1, r1	; 0x01
    1112:	24 c0       	rjmp	.+72     	; 0x115c <DIO_u8SetPortDirection+0x178>
		}
		break;
	case DIO_u8_PORTD:
		switch (Copy_u8PortDirection) {
    1114:	8b 81       	ldd	r24, Y+3	; 0x03
    1116:	28 2f       	mov	r18, r24
    1118:	30 e0       	ldi	r19, 0x00	; 0
    111a:	3d 83       	std	Y+5, r19	; 0x05
    111c:	2c 83       	std	Y+4, r18	; 0x04
    111e:	8c 81       	ldd	r24, Y+4	; 0x04
    1120:	9d 81       	ldd	r25, Y+5	; 0x05
    1122:	81 30       	cpi	r24, 0x01	; 1
    1124:	91 05       	cpc	r25, r1
    1126:	91 f0       	breq	.+36     	; 0x114c <DIO_u8SetPortDirection+0x168>
    1128:	2c 81       	ldd	r18, Y+4	; 0x04
    112a:	3d 81       	ldd	r19, Y+5	; 0x05
    112c:	22 30       	cpi	r18, 0x02	; 2
    112e:	31 05       	cpc	r19, r1
    1130:	29 f0       	breq	.+10     	; 0x113c <DIO_u8SetPortDirection+0x158>
    1132:	8c 81       	ldd	r24, Y+4	; 0x04
    1134:	9d 81       	ldd	r25, Y+5	; 0x05
    1136:	00 97       	sbiw	r24, 0x00	; 0
    1138:	29 f0       	breq	.+10     	; 0x1144 <DIO_u8SetPortDirection+0x160>
    113a:	0d c0       	rjmp	.+26     	; 0x1156 <DIO_u8SetPortDirection+0x172>
		case DIO_u8_INPUT_PULLUP:
			DIO_u8_PORTD_REG = 255;
    113c:	e2 e3       	ldi	r30, 0x32	; 50
    113e:	f0 e0       	ldi	r31, 0x00	; 0
    1140:	8f ef       	ldi	r24, 0xFF	; 255
    1142:	80 83       	st	Z, r24
		case DIO_u8_INPUT_FLOATING:
			DIO_u8_DDRD_REG = 0;
    1144:	e1 e3       	ldi	r30, 0x31	; 49
    1146:	f0 e0       	ldi	r31, 0x00	; 0
    1148:	10 82       	st	Z, r1
    114a:	08 c0       	rjmp	.+16     	; 0x115c <DIO_u8SetPortDirection+0x178>
			break;
		case DIO_u8_OUTPUT:
			DIO_u8_DDRD_REG = 255;
    114c:	e1 e3       	ldi	r30, 0x31	; 49
    114e:	f0 e0       	ldi	r31, 0x00	; 0
    1150:	8f ef       	ldi	r24, 0xFF	; 255
    1152:	80 83       	st	Z, r24
    1154:	03 c0       	rjmp	.+6      	; 0x115c <DIO_u8SetPortDirection+0x178>
			break;
		default:
			Local_u8ErrorState = STD_TYPES_NOK;
    1156:	19 82       	std	Y+1, r1	; 0x01
    1158:	01 c0       	rjmp	.+2      	; 0x115c <DIO_u8SetPortDirection+0x178>
		}
		break;
	default:
		Local_u8ErrorState = STD_TYPES_NOK;
    115a:	19 82       	std	Y+1, r1	; 0x01
	}

	return Local_u8ErrorState;
    115c:	89 81       	ldd	r24, Y+1	; 0x01
}
    115e:	2d 96       	adiw	r28, 0x0d	; 13
    1160:	0f b6       	in	r0, 0x3f	; 63
    1162:	f8 94       	cli
    1164:	de bf       	out	0x3e, r29	; 62
    1166:	0f be       	out	0x3f, r0	; 63
    1168:	cd bf       	out	0x3d, r28	; 61
    116a:	cf 91       	pop	r28
    116c:	df 91       	pop	r29
    116e:	08 95       	ret

00001170 <DIO_u8SetPinValue>:
u8 DIO_u8SetPinValue(u8 Copy_u8PortId, u8 Copy_u8PinId, u8 Copy_u8PinValue) {
    1170:	df 93       	push	r29
    1172:	cf 93       	push	r28
    1174:	cd b7       	in	r28, 0x3d	; 61
    1176:	de b7       	in	r29, 0x3e	; 62
    1178:	2e 97       	sbiw	r28, 0x0e	; 14
    117a:	0f b6       	in	r0, 0x3f	; 63
    117c:	f8 94       	cli
    117e:	de bf       	out	0x3e, r29	; 62
    1180:	0f be       	out	0x3f, r0	; 63
    1182:	cd bf       	out	0x3d, r28	; 61
    1184:	8a 83       	std	Y+2, r24	; 0x02
    1186:	6b 83       	std	Y+3, r22	; 0x03
    1188:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState = STD_TYPES_OK;
    118a:	81 e0       	ldi	r24, 0x01	; 1
    118c:	89 83       	std	Y+1, r24	; 0x01
	if ((Copy_u8PinId <= DIO_u8_PIN7)
    118e:	8b 81       	ldd	r24, Y+3	; 0x03
    1190:	88 30       	cpi	r24, 0x08	; 8
    1192:	08 f0       	brcs	.+2      	; 0x1196 <DIO_u8SetPinValue+0x26>
    1194:	0a c1       	rjmp	.+532    	; 0x13aa <DIO_u8SetPinValue+0x23a>
    1196:	8c 81       	ldd	r24, Y+4	; 0x04
    1198:	81 30       	cpi	r24, 0x01	; 1
    119a:	21 f0       	breq	.+8      	; 0x11a4 <DIO_u8SetPinValue+0x34>
    119c:	8c 81       	ldd	r24, Y+4	; 0x04
    119e:	88 23       	and	r24, r24
    11a0:	09 f0       	breq	.+2      	; 0x11a4 <DIO_u8SetPinValue+0x34>
    11a2:	03 c1       	rjmp	.+518    	; 0x13aa <DIO_u8SetPinValue+0x23a>
			&& ((Copy_u8PinValue == DIO_u8_HIGH)
					|| (Copy_u8PinValue == DIO_u8_LOW))) {
		switch (Copy_u8PortId) {
    11a4:	8a 81       	ldd	r24, Y+2	; 0x02
    11a6:	28 2f       	mov	r18, r24
    11a8:	30 e0       	ldi	r19, 0x00	; 0
    11aa:	3e 87       	std	Y+14, r19	; 0x0e
    11ac:	2d 87       	std	Y+13, r18	; 0x0d
    11ae:	8d 85       	ldd	r24, Y+13	; 0x0d
    11b0:	9e 85       	ldd	r25, Y+14	; 0x0e
    11b2:	81 30       	cpi	r24, 0x01	; 1
    11b4:	91 05       	cpc	r25, r1
    11b6:	09 f4       	brne	.+2      	; 0x11ba <DIO_u8SetPinValue+0x4a>
    11b8:	4f c0       	rjmp	.+158    	; 0x1258 <DIO_u8SetPinValue+0xe8>
    11ba:	2d 85       	ldd	r18, Y+13	; 0x0d
    11bc:	3e 85       	ldd	r19, Y+14	; 0x0e
    11be:	22 30       	cpi	r18, 0x02	; 2
    11c0:	31 05       	cpc	r19, r1
    11c2:	2c f4       	brge	.+10     	; 0x11ce <DIO_u8SetPinValue+0x5e>
    11c4:	8d 85       	ldd	r24, Y+13	; 0x0d
    11c6:	9e 85       	ldd	r25, Y+14	; 0x0e
    11c8:	00 97       	sbiw	r24, 0x00	; 0
    11ca:	71 f0       	breq	.+28     	; 0x11e8 <DIO_u8SetPinValue+0x78>
    11cc:	ec c0       	rjmp	.+472    	; 0x13a6 <DIO_u8SetPinValue+0x236>
    11ce:	2d 85       	ldd	r18, Y+13	; 0x0d
    11d0:	3e 85       	ldd	r19, Y+14	; 0x0e
    11d2:	22 30       	cpi	r18, 0x02	; 2
    11d4:	31 05       	cpc	r19, r1
    11d6:	09 f4       	brne	.+2      	; 0x11da <DIO_u8SetPinValue+0x6a>
    11d8:	77 c0       	rjmp	.+238    	; 0x12c8 <DIO_u8SetPinValue+0x158>
    11da:	8d 85       	ldd	r24, Y+13	; 0x0d
    11dc:	9e 85       	ldd	r25, Y+14	; 0x0e
    11de:	83 30       	cpi	r24, 0x03	; 3
    11e0:	91 05       	cpc	r25, r1
    11e2:	09 f4       	brne	.+2      	; 0x11e6 <DIO_u8SetPinValue+0x76>
    11e4:	a9 c0       	rjmp	.+338    	; 0x1338 <DIO_u8SetPinValue+0x1c8>
    11e6:	df c0       	rjmp	.+446    	; 0x13a6 <DIO_u8SetPinValue+0x236>
		case DIO_u8_PORTA:
			switch (Copy_u8PinValue) {
    11e8:	8c 81       	ldd	r24, Y+4	; 0x04
    11ea:	28 2f       	mov	r18, r24
    11ec:	30 e0       	ldi	r19, 0x00	; 0
    11ee:	3c 87       	std	Y+12, r19	; 0x0c
    11f0:	2b 87       	std	Y+11, r18	; 0x0b
    11f2:	8b 85       	ldd	r24, Y+11	; 0x0b
    11f4:	9c 85       	ldd	r25, Y+12	; 0x0c
    11f6:	00 97       	sbiw	r24, 0x00	; 0
    11f8:	d1 f0       	breq	.+52     	; 0x122e <DIO_u8SetPinValue+0xbe>
    11fa:	2b 85       	ldd	r18, Y+11	; 0x0b
    11fc:	3c 85       	ldd	r19, Y+12	; 0x0c
    11fe:	21 30       	cpi	r18, 0x01	; 1
    1200:	31 05       	cpc	r19, r1
    1202:	09 f0       	breq	.+2      	; 0x1206 <DIO_u8SetPinValue+0x96>
    1204:	d3 c0       	rjmp	.+422    	; 0x13ac <DIO_u8SetPinValue+0x23c>
			case DIO_u8_HIGH:
				SET_BIT(DIO_u8_PORTA_REG, Copy_u8PinId);
    1206:	ab e3       	ldi	r26, 0x3B	; 59
    1208:	b0 e0       	ldi	r27, 0x00	; 0
    120a:	eb e3       	ldi	r30, 0x3B	; 59
    120c:	f0 e0       	ldi	r31, 0x00	; 0
    120e:	80 81       	ld	r24, Z
    1210:	48 2f       	mov	r20, r24
    1212:	8b 81       	ldd	r24, Y+3	; 0x03
    1214:	28 2f       	mov	r18, r24
    1216:	30 e0       	ldi	r19, 0x00	; 0
    1218:	81 e0       	ldi	r24, 0x01	; 1
    121a:	90 e0       	ldi	r25, 0x00	; 0
    121c:	02 2e       	mov	r0, r18
    121e:	02 c0       	rjmp	.+4      	; 0x1224 <DIO_u8SetPinValue+0xb4>
    1220:	88 0f       	add	r24, r24
    1222:	99 1f       	adc	r25, r25
    1224:	0a 94       	dec	r0
    1226:	e2 f7       	brpl	.-8      	; 0x1220 <DIO_u8SetPinValue+0xb0>
    1228:	84 2b       	or	r24, r20
    122a:	8c 93       	st	X, r24
    122c:	bf c0       	rjmp	.+382    	; 0x13ac <DIO_u8SetPinValue+0x23c>
				break;
			case DIO_u8_LOW:
				CLR_BIT(DIO_u8_PORTA_REG, Copy_u8PinId);
    122e:	ab e3       	ldi	r26, 0x3B	; 59
    1230:	b0 e0       	ldi	r27, 0x00	; 0
    1232:	eb e3       	ldi	r30, 0x3B	; 59
    1234:	f0 e0       	ldi	r31, 0x00	; 0
    1236:	80 81       	ld	r24, Z
    1238:	48 2f       	mov	r20, r24
    123a:	8b 81       	ldd	r24, Y+3	; 0x03
    123c:	28 2f       	mov	r18, r24
    123e:	30 e0       	ldi	r19, 0x00	; 0
    1240:	81 e0       	ldi	r24, 0x01	; 1
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	02 2e       	mov	r0, r18
    1246:	02 c0       	rjmp	.+4      	; 0x124c <DIO_u8SetPinValue+0xdc>
    1248:	88 0f       	add	r24, r24
    124a:	99 1f       	adc	r25, r25
    124c:	0a 94       	dec	r0
    124e:	e2 f7       	brpl	.-8      	; 0x1248 <DIO_u8SetPinValue+0xd8>
    1250:	80 95       	com	r24
    1252:	84 23       	and	r24, r20
    1254:	8c 93       	st	X, r24
    1256:	aa c0       	rjmp	.+340    	; 0x13ac <DIO_u8SetPinValue+0x23c>
				break;
			}
			break;
		case DIO_u8_PORTB:
			switch (Copy_u8PinValue) {
    1258:	8c 81       	ldd	r24, Y+4	; 0x04
    125a:	28 2f       	mov	r18, r24
    125c:	30 e0       	ldi	r19, 0x00	; 0
    125e:	3a 87       	std	Y+10, r19	; 0x0a
    1260:	29 87       	std	Y+9, r18	; 0x09
    1262:	89 85       	ldd	r24, Y+9	; 0x09
    1264:	9a 85       	ldd	r25, Y+10	; 0x0a
    1266:	00 97       	sbiw	r24, 0x00	; 0
    1268:	d1 f0       	breq	.+52     	; 0x129e <DIO_u8SetPinValue+0x12e>
    126a:	29 85       	ldd	r18, Y+9	; 0x09
    126c:	3a 85       	ldd	r19, Y+10	; 0x0a
    126e:	21 30       	cpi	r18, 0x01	; 1
    1270:	31 05       	cpc	r19, r1
    1272:	09 f0       	breq	.+2      	; 0x1276 <DIO_u8SetPinValue+0x106>
    1274:	9b c0       	rjmp	.+310    	; 0x13ac <DIO_u8SetPinValue+0x23c>
			case DIO_u8_HIGH:
				SET_BIT(DIO_u8_PORTB_REG, Copy_u8PinId);
    1276:	a8 e3       	ldi	r26, 0x38	; 56
    1278:	b0 e0       	ldi	r27, 0x00	; 0
    127a:	e8 e3       	ldi	r30, 0x38	; 56
    127c:	f0 e0       	ldi	r31, 0x00	; 0
    127e:	80 81       	ld	r24, Z
    1280:	48 2f       	mov	r20, r24
    1282:	8b 81       	ldd	r24, Y+3	; 0x03
    1284:	28 2f       	mov	r18, r24
    1286:	30 e0       	ldi	r19, 0x00	; 0
    1288:	81 e0       	ldi	r24, 0x01	; 1
    128a:	90 e0       	ldi	r25, 0x00	; 0
    128c:	02 2e       	mov	r0, r18
    128e:	02 c0       	rjmp	.+4      	; 0x1294 <DIO_u8SetPinValue+0x124>
    1290:	88 0f       	add	r24, r24
    1292:	99 1f       	adc	r25, r25
    1294:	0a 94       	dec	r0
    1296:	e2 f7       	brpl	.-8      	; 0x1290 <DIO_u8SetPinValue+0x120>
    1298:	84 2b       	or	r24, r20
    129a:	8c 93       	st	X, r24
    129c:	87 c0       	rjmp	.+270    	; 0x13ac <DIO_u8SetPinValue+0x23c>
				break;
			case DIO_u8_LOW:
				CLR_BIT(DIO_u8_PORTB_REG, Copy_u8PinId);
    129e:	a8 e3       	ldi	r26, 0x38	; 56
    12a0:	b0 e0       	ldi	r27, 0x00	; 0
    12a2:	e8 e3       	ldi	r30, 0x38	; 56
    12a4:	f0 e0       	ldi	r31, 0x00	; 0
    12a6:	80 81       	ld	r24, Z
    12a8:	48 2f       	mov	r20, r24
    12aa:	8b 81       	ldd	r24, Y+3	; 0x03
    12ac:	28 2f       	mov	r18, r24
    12ae:	30 e0       	ldi	r19, 0x00	; 0
    12b0:	81 e0       	ldi	r24, 0x01	; 1
    12b2:	90 e0       	ldi	r25, 0x00	; 0
    12b4:	02 2e       	mov	r0, r18
    12b6:	02 c0       	rjmp	.+4      	; 0x12bc <DIO_u8SetPinValue+0x14c>
    12b8:	88 0f       	add	r24, r24
    12ba:	99 1f       	adc	r25, r25
    12bc:	0a 94       	dec	r0
    12be:	e2 f7       	brpl	.-8      	; 0x12b8 <DIO_u8SetPinValue+0x148>
    12c0:	80 95       	com	r24
    12c2:	84 23       	and	r24, r20
    12c4:	8c 93       	st	X, r24
    12c6:	72 c0       	rjmp	.+228    	; 0x13ac <DIO_u8SetPinValue+0x23c>
				break;
			}
			break;
		case DIO_u8_PORTC:
			switch (Copy_u8PinValue) {
    12c8:	8c 81       	ldd	r24, Y+4	; 0x04
    12ca:	28 2f       	mov	r18, r24
    12cc:	30 e0       	ldi	r19, 0x00	; 0
    12ce:	38 87       	std	Y+8, r19	; 0x08
    12d0:	2f 83       	std	Y+7, r18	; 0x07
    12d2:	8f 81       	ldd	r24, Y+7	; 0x07
    12d4:	98 85       	ldd	r25, Y+8	; 0x08
    12d6:	00 97       	sbiw	r24, 0x00	; 0
    12d8:	d1 f0       	breq	.+52     	; 0x130e <DIO_u8SetPinValue+0x19e>
    12da:	2f 81       	ldd	r18, Y+7	; 0x07
    12dc:	38 85       	ldd	r19, Y+8	; 0x08
    12de:	21 30       	cpi	r18, 0x01	; 1
    12e0:	31 05       	cpc	r19, r1
    12e2:	09 f0       	breq	.+2      	; 0x12e6 <DIO_u8SetPinValue+0x176>
    12e4:	63 c0       	rjmp	.+198    	; 0x13ac <DIO_u8SetPinValue+0x23c>
			case DIO_u8_HIGH:
				SET_BIT(DIO_u8_PORTC_REG, Copy_u8PinId);
    12e6:	a5 e3       	ldi	r26, 0x35	; 53
    12e8:	b0 e0       	ldi	r27, 0x00	; 0
    12ea:	e5 e3       	ldi	r30, 0x35	; 53
    12ec:	f0 e0       	ldi	r31, 0x00	; 0
    12ee:	80 81       	ld	r24, Z
    12f0:	48 2f       	mov	r20, r24
    12f2:	8b 81       	ldd	r24, Y+3	; 0x03
    12f4:	28 2f       	mov	r18, r24
    12f6:	30 e0       	ldi	r19, 0x00	; 0
    12f8:	81 e0       	ldi	r24, 0x01	; 1
    12fa:	90 e0       	ldi	r25, 0x00	; 0
    12fc:	02 2e       	mov	r0, r18
    12fe:	02 c0       	rjmp	.+4      	; 0x1304 <DIO_u8SetPinValue+0x194>
    1300:	88 0f       	add	r24, r24
    1302:	99 1f       	adc	r25, r25
    1304:	0a 94       	dec	r0
    1306:	e2 f7       	brpl	.-8      	; 0x1300 <DIO_u8SetPinValue+0x190>
    1308:	84 2b       	or	r24, r20
    130a:	8c 93       	st	X, r24
    130c:	4f c0       	rjmp	.+158    	; 0x13ac <DIO_u8SetPinValue+0x23c>
				break;
			case DIO_u8_LOW:
				CLR_BIT(DIO_u8_PORTC_REG, Copy_u8PinId);
    130e:	a5 e3       	ldi	r26, 0x35	; 53
    1310:	b0 e0       	ldi	r27, 0x00	; 0
    1312:	e5 e3       	ldi	r30, 0x35	; 53
    1314:	f0 e0       	ldi	r31, 0x00	; 0
    1316:	80 81       	ld	r24, Z
    1318:	48 2f       	mov	r20, r24
    131a:	8b 81       	ldd	r24, Y+3	; 0x03
    131c:	28 2f       	mov	r18, r24
    131e:	30 e0       	ldi	r19, 0x00	; 0
    1320:	81 e0       	ldi	r24, 0x01	; 1
    1322:	90 e0       	ldi	r25, 0x00	; 0
    1324:	02 2e       	mov	r0, r18
    1326:	02 c0       	rjmp	.+4      	; 0x132c <DIO_u8SetPinValue+0x1bc>
    1328:	88 0f       	add	r24, r24
    132a:	99 1f       	adc	r25, r25
    132c:	0a 94       	dec	r0
    132e:	e2 f7       	brpl	.-8      	; 0x1328 <DIO_u8SetPinValue+0x1b8>
    1330:	80 95       	com	r24
    1332:	84 23       	and	r24, r20
    1334:	8c 93       	st	X, r24
    1336:	3a c0       	rjmp	.+116    	; 0x13ac <DIO_u8SetPinValue+0x23c>
				break;
			}
			break;
		case DIO_u8_PORTD:
			switch (Copy_u8PinValue) {
    1338:	8c 81       	ldd	r24, Y+4	; 0x04
    133a:	28 2f       	mov	r18, r24
    133c:	30 e0       	ldi	r19, 0x00	; 0
    133e:	3e 83       	std	Y+6, r19	; 0x06
    1340:	2d 83       	std	Y+5, r18	; 0x05
    1342:	8d 81       	ldd	r24, Y+5	; 0x05
    1344:	9e 81       	ldd	r25, Y+6	; 0x06
    1346:	00 97       	sbiw	r24, 0x00	; 0
    1348:	c9 f0       	breq	.+50     	; 0x137c <DIO_u8SetPinValue+0x20c>
    134a:	2d 81       	ldd	r18, Y+5	; 0x05
    134c:	3e 81       	ldd	r19, Y+6	; 0x06
    134e:	21 30       	cpi	r18, 0x01	; 1
    1350:	31 05       	cpc	r19, r1
    1352:	61 f5       	brne	.+88     	; 0x13ac <DIO_u8SetPinValue+0x23c>
			case DIO_u8_HIGH:
				SET_BIT(DIO_u8_PORTD_REG, Copy_u8PinId);
    1354:	a2 e3       	ldi	r26, 0x32	; 50
    1356:	b0 e0       	ldi	r27, 0x00	; 0
    1358:	e2 e3       	ldi	r30, 0x32	; 50
    135a:	f0 e0       	ldi	r31, 0x00	; 0
    135c:	80 81       	ld	r24, Z
    135e:	48 2f       	mov	r20, r24
    1360:	8b 81       	ldd	r24, Y+3	; 0x03
    1362:	28 2f       	mov	r18, r24
    1364:	30 e0       	ldi	r19, 0x00	; 0
    1366:	81 e0       	ldi	r24, 0x01	; 1
    1368:	90 e0       	ldi	r25, 0x00	; 0
    136a:	02 2e       	mov	r0, r18
    136c:	02 c0       	rjmp	.+4      	; 0x1372 <DIO_u8SetPinValue+0x202>
    136e:	88 0f       	add	r24, r24
    1370:	99 1f       	adc	r25, r25
    1372:	0a 94       	dec	r0
    1374:	e2 f7       	brpl	.-8      	; 0x136e <DIO_u8SetPinValue+0x1fe>
    1376:	84 2b       	or	r24, r20
    1378:	8c 93       	st	X, r24
    137a:	18 c0       	rjmp	.+48     	; 0x13ac <DIO_u8SetPinValue+0x23c>
				break;
			case DIO_u8_LOW:
				CLR_BIT(DIO_u8_PORTD_REG, Copy_u8PinId);
    137c:	a2 e3       	ldi	r26, 0x32	; 50
    137e:	b0 e0       	ldi	r27, 0x00	; 0
    1380:	e2 e3       	ldi	r30, 0x32	; 50
    1382:	f0 e0       	ldi	r31, 0x00	; 0
    1384:	80 81       	ld	r24, Z
    1386:	48 2f       	mov	r20, r24
    1388:	8b 81       	ldd	r24, Y+3	; 0x03
    138a:	28 2f       	mov	r18, r24
    138c:	30 e0       	ldi	r19, 0x00	; 0
    138e:	81 e0       	ldi	r24, 0x01	; 1
    1390:	90 e0       	ldi	r25, 0x00	; 0
    1392:	02 2e       	mov	r0, r18
    1394:	02 c0       	rjmp	.+4      	; 0x139a <DIO_u8SetPinValue+0x22a>
    1396:	88 0f       	add	r24, r24
    1398:	99 1f       	adc	r25, r25
    139a:	0a 94       	dec	r0
    139c:	e2 f7       	brpl	.-8      	; 0x1396 <DIO_u8SetPinValue+0x226>
    139e:	80 95       	com	r24
    13a0:	84 23       	and	r24, r20
    13a2:	8c 93       	st	X, r24
    13a4:	03 c0       	rjmp	.+6      	; 0x13ac <DIO_u8SetPinValue+0x23c>
				break;
			}
			break;
		default:
			Local_u8ErrorState = STD_TYPES_NOK;
    13a6:	19 82       	std	Y+1, r1	; 0x01
    13a8:	01 c0       	rjmp	.+2      	; 0x13ac <DIO_u8SetPinValue+0x23c>
		}
	} else
		Local_u8ErrorState = STD_TYPES_NOK;
    13aa:	19 82       	std	Y+1, r1	; 0x01
	return Local_u8ErrorState;
    13ac:	89 81       	ldd	r24, Y+1	; 0x01
}
    13ae:	2e 96       	adiw	r28, 0x0e	; 14
    13b0:	0f b6       	in	r0, 0x3f	; 63
    13b2:	f8 94       	cli
    13b4:	de bf       	out	0x3e, r29	; 62
    13b6:	0f be       	out	0x3f, r0	; 63
    13b8:	cd bf       	out	0x3d, r28	; 61
    13ba:	cf 91       	pop	r28
    13bc:	df 91       	pop	r29
    13be:	08 95       	ret

000013c0 <DIO_u8GetPinValue>:
u8 DIO_u8GetPinValue(u8 Copy_u8PortId, u8 Copy_u8PinId, u8 *Copy_Pu8ReturnValue) {
    13c0:	df 93       	push	r29
    13c2:	cf 93       	push	r28
    13c4:	cd b7       	in	r28, 0x3d	; 61
    13c6:	de b7       	in	r29, 0x3e	; 62
    13c8:	27 97       	sbiw	r28, 0x07	; 7
    13ca:	0f b6       	in	r0, 0x3f	; 63
    13cc:	f8 94       	cli
    13ce:	de bf       	out	0x3e, r29	; 62
    13d0:	0f be       	out	0x3f, r0	; 63
    13d2:	cd bf       	out	0x3d, r28	; 61
    13d4:	8a 83       	std	Y+2, r24	; 0x02
    13d6:	6b 83       	std	Y+3, r22	; 0x03
    13d8:	5d 83       	std	Y+5, r21	; 0x05
    13da:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState = STD_TYPES_OK;
    13dc:	81 e0       	ldi	r24, 0x01	; 1
    13de:	89 83       	std	Y+1, r24	; 0x01
	if ((Copy_u8PinId <= DIO_u8_PIN7) && (Copy_Pu8ReturnValue != NULL)) {
    13e0:	8b 81       	ldd	r24, Y+3	; 0x03
    13e2:	88 30       	cpi	r24, 0x08	; 8
    13e4:	08 f0       	brcs	.+2      	; 0x13e8 <DIO_u8GetPinValue+0x28>
    13e6:	7a c0       	rjmp	.+244    	; 0x14dc <DIO_u8GetPinValue+0x11c>
    13e8:	8c 81       	ldd	r24, Y+4	; 0x04
    13ea:	9d 81       	ldd	r25, Y+5	; 0x05
    13ec:	00 97       	sbiw	r24, 0x00	; 0
    13ee:	09 f4       	brne	.+2      	; 0x13f2 <DIO_u8GetPinValue+0x32>
    13f0:	75 c0       	rjmp	.+234    	; 0x14dc <DIO_u8GetPinValue+0x11c>
		Local_u8ErrorState = STD_TYPES_OK;
    13f2:	81 e0       	ldi	r24, 0x01	; 1
    13f4:	89 83       	std	Y+1, r24	; 0x01
		switch (Copy_u8PortId) {
    13f6:	8a 81       	ldd	r24, Y+2	; 0x02
    13f8:	28 2f       	mov	r18, r24
    13fa:	30 e0       	ldi	r19, 0x00	; 0
    13fc:	3f 83       	std	Y+7, r19	; 0x07
    13fe:	2e 83       	std	Y+6, r18	; 0x06
    1400:	4e 81       	ldd	r20, Y+6	; 0x06
    1402:	5f 81       	ldd	r21, Y+7	; 0x07
    1404:	41 30       	cpi	r20, 0x01	; 1
    1406:	51 05       	cpc	r21, r1
    1408:	59 f1       	breq	.+86     	; 0x1460 <DIO_u8GetPinValue+0xa0>
    140a:	8e 81       	ldd	r24, Y+6	; 0x06
    140c:	9f 81       	ldd	r25, Y+7	; 0x07
    140e:	82 30       	cpi	r24, 0x02	; 2
    1410:	91 05       	cpc	r25, r1
    1412:	34 f4       	brge	.+12     	; 0x1420 <DIO_u8GetPinValue+0x60>
    1414:	2e 81       	ldd	r18, Y+6	; 0x06
    1416:	3f 81       	ldd	r19, Y+7	; 0x07
    1418:	21 15       	cp	r18, r1
    141a:	31 05       	cpc	r19, r1
    141c:	69 f0       	breq	.+26     	; 0x1438 <DIO_u8GetPinValue+0x78>
    141e:	5c c0       	rjmp	.+184    	; 0x14d8 <DIO_u8GetPinValue+0x118>
    1420:	4e 81       	ldd	r20, Y+6	; 0x06
    1422:	5f 81       	ldd	r21, Y+7	; 0x07
    1424:	42 30       	cpi	r20, 0x02	; 2
    1426:	51 05       	cpc	r21, r1
    1428:	79 f1       	breq	.+94     	; 0x1488 <DIO_u8GetPinValue+0xc8>
    142a:	8e 81       	ldd	r24, Y+6	; 0x06
    142c:	9f 81       	ldd	r25, Y+7	; 0x07
    142e:	83 30       	cpi	r24, 0x03	; 3
    1430:	91 05       	cpc	r25, r1
    1432:	09 f4       	brne	.+2      	; 0x1436 <DIO_u8GetPinValue+0x76>
    1434:	3d c0       	rjmp	.+122    	; 0x14b0 <DIO_u8GetPinValue+0xf0>
    1436:	50 c0       	rjmp	.+160    	; 0x14d8 <DIO_u8GetPinValue+0x118>
		case DIO_u8_PORTA:
			*Copy_Pu8ReturnValue = GET_BIT(DIO_u8_PINA_REG, Copy_u8PinId);
    1438:	e9 e3       	ldi	r30, 0x39	; 57
    143a:	f0 e0       	ldi	r31, 0x00	; 0
    143c:	80 81       	ld	r24, Z
    143e:	28 2f       	mov	r18, r24
    1440:	30 e0       	ldi	r19, 0x00	; 0
    1442:	8b 81       	ldd	r24, Y+3	; 0x03
    1444:	88 2f       	mov	r24, r24
    1446:	90 e0       	ldi	r25, 0x00	; 0
    1448:	a9 01       	movw	r20, r18
    144a:	02 c0       	rjmp	.+4      	; 0x1450 <DIO_u8GetPinValue+0x90>
    144c:	55 95       	asr	r21
    144e:	47 95       	ror	r20
    1450:	8a 95       	dec	r24
    1452:	e2 f7       	brpl	.-8      	; 0x144c <DIO_u8GetPinValue+0x8c>
    1454:	ca 01       	movw	r24, r20
    1456:	81 70       	andi	r24, 0x01	; 1
    1458:	ec 81       	ldd	r30, Y+4	; 0x04
    145a:	fd 81       	ldd	r31, Y+5	; 0x05
    145c:	80 83       	st	Z, r24
    145e:	40 c0       	rjmp	.+128    	; 0x14e0 <DIO_u8GetPinValue+0x120>
			break;
		case DIO_u8_PORTB:
			*Copy_Pu8ReturnValue = GET_BIT(DIO_u8_PINB_REG, Copy_u8PinId);
    1460:	e6 e3       	ldi	r30, 0x36	; 54
    1462:	f0 e0       	ldi	r31, 0x00	; 0
    1464:	80 81       	ld	r24, Z
    1466:	28 2f       	mov	r18, r24
    1468:	30 e0       	ldi	r19, 0x00	; 0
    146a:	8b 81       	ldd	r24, Y+3	; 0x03
    146c:	88 2f       	mov	r24, r24
    146e:	90 e0       	ldi	r25, 0x00	; 0
    1470:	a9 01       	movw	r20, r18
    1472:	02 c0       	rjmp	.+4      	; 0x1478 <DIO_u8GetPinValue+0xb8>
    1474:	55 95       	asr	r21
    1476:	47 95       	ror	r20
    1478:	8a 95       	dec	r24
    147a:	e2 f7       	brpl	.-8      	; 0x1474 <DIO_u8GetPinValue+0xb4>
    147c:	ca 01       	movw	r24, r20
    147e:	81 70       	andi	r24, 0x01	; 1
    1480:	ec 81       	ldd	r30, Y+4	; 0x04
    1482:	fd 81       	ldd	r31, Y+5	; 0x05
    1484:	80 83       	st	Z, r24
    1486:	2c c0       	rjmp	.+88     	; 0x14e0 <DIO_u8GetPinValue+0x120>
			break;
		case DIO_u8_PORTC:
			*Copy_Pu8ReturnValue = GET_BIT(DIO_u8_PINC_REG, Copy_u8PinId);
    1488:	e3 e3       	ldi	r30, 0x33	; 51
    148a:	f0 e0       	ldi	r31, 0x00	; 0
    148c:	80 81       	ld	r24, Z
    148e:	28 2f       	mov	r18, r24
    1490:	30 e0       	ldi	r19, 0x00	; 0
    1492:	8b 81       	ldd	r24, Y+3	; 0x03
    1494:	88 2f       	mov	r24, r24
    1496:	90 e0       	ldi	r25, 0x00	; 0
    1498:	a9 01       	movw	r20, r18
    149a:	02 c0       	rjmp	.+4      	; 0x14a0 <DIO_u8GetPinValue+0xe0>
    149c:	55 95       	asr	r21
    149e:	47 95       	ror	r20
    14a0:	8a 95       	dec	r24
    14a2:	e2 f7       	brpl	.-8      	; 0x149c <DIO_u8GetPinValue+0xdc>
    14a4:	ca 01       	movw	r24, r20
    14a6:	81 70       	andi	r24, 0x01	; 1
    14a8:	ec 81       	ldd	r30, Y+4	; 0x04
    14aa:	fd 81       	ldd	r31, Y+5	; 0x05
    14ac:	80 83       	st	Z, r24
    14ae:	18 c0       	rjmp	.+48     	; 0x14e0 <DIO_u8GetPinValue+0x120>
			break;
		case DIO_u8_PORTD:
			*Copy_Pu8ReturnValue = GET_BIT(DIO_u8_PIND_REG, Copy_u8PinId);
    14b0:	e0 e3       	ldi	r30, 0x30	; 48
    14b2:	f0 e0       	ldi	r31, 0x00	; 0
    14b4:	80 81       	ld	r24, Z
    14b6:	28 2f       	mov	r18, r24
    14b8:	30 e0       	ldi	r19, 0x00	; 0
    14ba:	8b 81       	ldd	r24, Y+3	; 0x03
    14bc:	88 2f       	mov	r24, r24
    14be:	90 e0       	ldi	r25, 0x00	; 0
    14c0:	a9 01       	movw	r20, r18
    14c2:	02 c0       	rjmp	.+4      	; 0x14c8 <DIO_u8GetPinValue+0x108>
    14c4:	55 95       	asr	r21
    14c6:	47 95       	ror	r20
    14c8:	8a 95       	dec	r24
    14ca:	e2 f7       	brpl	.-8      	; 0x14c4 <DIO_u8GetPinValue+0x104>
    14cc:	ca 01       	movw	r24, r20
    14ce:	81 70       	andi	r24, 0x01	; 1
    14d0:	ec 81       	ldd	r30, Y+4	; 0x04
    14d2:	fd 81       	ldd	r31, Y+5	; 0x05
    14d4:	80 83       	st	Z, r24
    14d6:	04 c0       	rjmp	.+8      	; 0x14e0 <DIO_u8GetPinValue+0x120>
			break;
		default:
			Local_u8ErrorState = STD_TYPES_NOK;
    14d8:	19 82       	std	Y+1, r1	; 0x01
    14da:	02 c0       	rjmp	.+4      	; 0x14e0 <DIO_u8GetPinValue+0x120>
		}
	} else
		Local_u8ErrorState = STD_TYPES_OK;
    14dc:	81 e0       	ldi	r24, 0x01	; 1
    14de:	89 83       	std	Y+1, r24	; 0x01
	return Local_u8ErrorState;
    14e0:	89 81       	ldd	r24, Y+1	; 0x01
}
    14e2:	27 96       	adiw	r28, 0x07	; 7
    14e4:	0f b6       	in	r0, 0x3f	; 63
    14e6:	f8 94       	cli
    14e8:	de bf       	out	0x3e, r29	; 62
    14ea:	0f be       	out	0x3f, r0	; 63
    14ec:	cd bf       	out	0x3d, r28	; 61
    14ee:	cf 91       	pop	r28
    14f0:	df 91       	pop	r29
    14f2:	08 95       	ret

000014f4 <DIO_u8TogglePinValue>:
u8 DIO_u8TogglePinValue(u8 Copy_u8PortId, u8 Copy_u8PinId) {
    14f4:	df 93       	push	r29
    14f6:	cf 93       	push	r28
    14f8:	00 d0       	rcall	.+0      	; 0x14fa <DIO_u8TogglePinValue+0x6>
    14fa:	00 d0       	rcall	.+0      	; 0x14fc <DIO_u8TogglePinValue+0x8>
    14fc:	00 d0       	rcall	.+0      	; 0x14fe <DIO_u8TogglePinValue+0xa>
    14fe:	cd b7       	in	r28, 0x3d	; 61
    1500:	de b7       	in	r29, 0x3e	; 62
    1502:	8a 83       	std	Y+2, r24	; 0x02
    1504:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState = STD_TYPES_OK;
    1506:	81 e0       	ldi	r24, 0x01	; 1
    1508:	89 83       	std	Y+1, r24	; 0x01
	if (Copy_u8PinId <= DIO_u8_PIN7) {
    150a:	8b 81       	ldd	r24, Y+3	; 0x03
    150c:	88 30       	cpi	r24, 0x08	; 8
    150e:	08 f0       	brcs	.+2      	; 0x1512 <DIO_u8TogglePinValue+0x1e>
    1510:	70 c0       	rjmp	.+224    	; 0x15f2 <DIO_u8TogglePinValue+0xfe>
		switch (Copy_u8PortId) {
    1512:	8a 81       	ldd	r24, Y+2	; 0x02
    1514:	28 2f       	mov	r18, r24
    1516:	30 e0       	ldi	r19, 0x00	; 0
    1518:	3d 83       	std	Y+5, r19	; 0x05
    151a:	2c 83       	std	Y+4, r18	; 0x04
    151c:	8c 81       	ldd	r24, Y+4	; 0x04
    151e:	9d 81       	ldd	r25, Y+5	; 0x05
    1520:	81 30       	cpi	r24, 0x01	; 1
    1522:	91 05       	cpc	r25, r1
    1524:	49 f1       	breq	.+82     	; 0x1578 <DIO_u8TogglePinValue+0x84>
    1526:	2c 81       	ldd	r18, Y+4	; 0x04
    1528:	3d 81       	ldd	r19, Y+5	; 0x05
    152a:	22 30       	cpi	r18, 0x02	; 2
    152c:	31 05       	cpc	r19, r1
    152e:	2c f4       	brge	.+10     	; 0x153a <DIO_u8TogglePinValue+0x46>
    1530:	8c 81       	ldd	r24, Y+4	; 0x04
    1532:	9d 81       	ldd	r25, Y+5	; 0x05
    1534:	00 97       	sbiw	r24, 0x00	; 0
    1536:	61 f0       	breq	.+24     	; 0x1550 <DIO_u8TogglePinValue+0x5c>
    1538:	5b c0       	rjmp	.+182    	; 0x15f0 <DIO_u8TogglePinValue+0xfc>
    153a:	2c 81       	ldd	r18, Y+4	; 0x04
    153c:	3d 81       	ldd	r19, Y+5	; 0x05
    153e:	22 30       	cpi	r18, 0x02	; 2
    1540:	31 05       	cpc	r19, r1
    1542:	71 f1       	breq	.+92     	; 0x15a0 <DIO_u8TogglePinValue+0xac>
    1544:	8c 81       	ldd	r24, Y+4	; 0x04
    1546:	9d 81       	ldd	r25, Y+5	; 0x05
    1548:	83 30       	cpi	r24, 0x03	; 3
    154a:	91 05       	cpc	r25, r1
    154c:	e9 f1       	breq	.+122    	; 0x15c8 <DIO_u8TogglePinValue+0xd4>
    154e:	50 c0       	rjmp	.+160    	; 0x15f0 <DIO_u8TogglePinValue+0xfc>
		case DIO_u8_PORTA:
			TOG_BIT(DIO_u8_PORTA_REG, Copy_u8PinId);
    1550:	ab e3       	ldi	r26, 0x3B	; 59
    1552:	b0 e0       	ldi	r27, 0x00	; 0
    1554:	eb e3       	ldi	r30, 0x3B	; 59
    1556:	f0 e0       	ldi	r31, 0x00	; 0
    1558:	80 81       	ld	r24, Z
    155a:	48 2f       	mov	r20, r24
    155c:	8b 81       	ldd	r24, Y+3	; 0x03
    155e:	28 2f       	mov	r18, r24
    1560:	30 e0       	ldi	r19, 0x00	; 0
    1562:	81 e0       	ldi	r24, 0x01	; 1
    1564:	90 e0       	ldi	r25, 0x00	; 0
    1566:	02 2e       	mov	r0, r18
    1568:	02 c0       	rjmp	.+4      	; 0x156e <DIO_u8TogglePinValue+0x7a>
    156a:	88 0f       	add	r24, r24
    156c:	99 1f       	adc	r25, r25
    156e:	0a 94       	dec	r0
    1570:	e2 f7       	brpl	.-8      	; 0x156a <DIO_u8TogglePinValue+0x76>
    1572:	84 27       	eor	r24, r20
    1574:	8c 93       	st	X, r24
    1576:	3d c0       	rjmp	.+122    	; 0x15f2 <DIO_u8TogglePinValue+0xfe>
			break;
		case DIO_u8_PORTB:
			TOG_BIT(DIO_u8_PORTB_REG, Copy_u8PinId);
    1578:	a8 e3       	ldi	r26, 0x38	; 56
    157a:	b0 e0       	ldi	r27, 0x00	; 0
    157c:	e8 e3       	ldi	r30, 0x38	; 56
    157e:	f0 e0       	ldi	r31, 0x00	; 0
    1580:	80 81       	ld	r24, Z
    1582:	48 2f       	mov	r20, r24
    1584:	8b 81       	ldd	r24, Y+3	; 0x03
    1586:	28 2f       	mov	r18, r24
    1588:	30 e0       	ldi	r19, 0x00	; 0
    158a:	81 e0       	ldi	r24, 0x01	; 1
    158c:	90 e0       	ldi	r25, 0x00	; 0
    158e:	02 2e       	mov	r0, r18
    1590:	02 c0       	rjmp	.+4      	; 0x1596 <DIO_u8TogglePinValue+0xa2>
    1592:	88 0f       	add	r24, r24
    1594:	99 1f       	adc	r25, r25
    1596:	0a 94       	dec	r0
    1598:	e2 f7       	brpl	.-8      	; 0x1592 <DIO_u8TogglePinValue+0x9e>
    159a:	84 27       	eor	r24, r20
    159c:	8c 93       	st	X, r24
    159e:	29 c0       	rjmp	.+82     	; 0x15f2 <DIO_u8TogglePinValue+0xfe>
			break;
		case DIO_u8_PORTC:
			TOG_BIT(DIO_u8_PORTC_REG, Copy_u8PinId);
    15a0:	a5 e3       	ldi	r26, 0x35	; 53
    15a2:	b0 e0       	ldi	r27, 0x00	; 0
    15a4:	e5 e3       	ldi	r30, 0x35	; 53
    15a6:	f0 e0       	ldi	r31, 0x00	; 0
    15a8:	80 81       	ld	r24, Z
    15aa:	48 2f       	mov	r20, r24
    15ac:	8b 81       	ldd	r24, Y+3	; 0x03
    15ae:	28 2f       	mov	r18, r24
    15b0:	30 e0       	ldi	r19, 0x00	; 0
    15b2:	81 e0       	ldi	r24, 0x01	; 1
    15b4:	90 e0       	ldi	r25, 0x00	; 0
    15b6:	02 2e       	mov	r0, r18
    15b8:	02 c0       	rjmp	.+4      	; 0x15be <DIO_u8TogglePinValue+0xca>
    15ba:	88 0f       	add	r24, r24
    15bc:	99 1f       	adc	r25, r25
    15be:	0a 94       	dec	r0
    15c0:	e2 f7       	brpl	.-8      	; 0x15ba <DIO_u8TogglePinValue+0xc6>
    15c2:	84 27       	eor	r24, r20
    15c4:	8c 93       	st	X, r24
    15c6:	15 c0       	rjmp	.+42     	; 0x15f2 <DIO_u8TogglePinValue+0xfe>
			break;
		case DIO_u8_PORTD:
			TOG_BIT(DIO_u8_PORTD_REG, Copy_u8PinId);
    15c8:	a2 e3       	ldi	r26, 0x32	; 50
    15ca:	b0 e0       	ldi	r27, 0x00	; 0
    15cc:	e2 e3       	ldi	r30, 0x32	; 50
    15ce:	f0 e0       	ldi	r31, 0x00	; 0
    15d0:	80 81       	ld	r24, Z
    15d2:	48 2f       	mov	r20, r24
    15d4:	8b 81       	ldd	r24, Y+3	; 0x03
    15d6:	28 2f       	mov	r18, r24
    15d8:	30 e0       	ldi	r19, 0x00	; 0
    15da:	81 e0       	ldi	r24, 0x01	; 1
    15dc:	90 e0       	ldi	r25, 0x00	; 0
    15de:	02 2e       	mov	r0, r18
    15e0:	02 c0       	rjmp	.+4      	; 0x15e6 <DIO_u8TogglePinValue+0xf2>
    15e2:	88 0f       	add	r24, r24
    15e4:	99 1f       	adc	r25, r25
    15e6:	0a 94       	dec	r0
    15e8:	e2 f7       	brpl	.-8      	; 0x15e2 <DIO_u8TogglePinValue+0xee>
    15ea:	84 27       	eor	r24, r20
    15ec:	8c 93       	st	X, r24
    15ee:	01 c0       	rjmp	.+2      	; 0x15f2 <DIO_u8TogglePinValue+0xfe>
			break;
		default:
			Local_u8ErrorState = STD_TYPES_NOK;
    15f0:	19 82       	std	Y+1, r1	; 0x01
		}
	}
}
    15f2:	26 96       	adiw	r28, 0x06	; 6
    15f4:	0f b6       	in	r0, 0x3f	; 63
    15f6:	f8 94       	cli
    15f8:	de bf       	out	0x3e, r29	; 62
    15fa:	0f be       	out	0x3f, r0	; 63
    15fc:	cd bf       	out	0x3d, r28	; 61
    15fe:	cf 91       	pop	r28
    1600:	df 91       	pop	r29
    1602:	08 95       	ret

00001604 <DIO_u8SetPortValue>:
u8 DIO_u8SetPortValue(u8 Copy_u8PortId, u8 Copy_u8PortValue) {
    1604:	df 93       	push	r29
    1606:	cf 93       	push	r28
    1608:	00 d0       	rcall	.+0      	; 0x160a <DIO_u8SetPortValue+0x6>
    160a:	00 d0       	rcall	.+0      	; 0x160c <DIO_u8SetPortValue+0x8>
    160c:	0f 92       	push	r0
    160e:	cd b7       	in	r28, 0x3d	; 61
    1610:	de b7       	in	r29, 0x3e	; 62
    1612:	8a 83       	std	Y+2, r24	; 0x02
    1614:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState = STD_TYPES_OK;
    1616:	81 e0       	ldi	r24, 0x01	; 1
    1618:	89 83       	std	Y+1, r24	; 0x01
	switch (Copy_u8PortId) {
    161a:	8a 81       	ldd	r24, Y+2	; 0x02
    161c:	28 2f       	mov	r18, r24
    161e:	30 e0       	ldi	r19, 0x00	; 0
    1620:	3d 83       	std	Y+5, r19	; 0x05
    1622:	2c 83       	std	Y+4, r18	; 0x04
    1624:	8c 81       	ldd	r24, Y+4	; 0x04
    1626:	9d 81       	ldd	r25, Y+5	; 0x05
    1628:	81 30       	cpi	r24, 0x01	; 1
    162a:	91 05       	cpc	r25, r1
    162c:	d1 f0       	breq	.+52     	; 0x1662 <DIO_u8SetPortValue+0x5e>
    162e:	2c 81       	ldd	r18, Y+4	; 0x04
    1630:	3d 81       	ldd	r19, Y+5	; 0x05
    1632:	22 30       	cpi	r18, 0x02	; 2
    1634:	31 05       	cpc	r19, r1
    1636:	2c f4       	brge	.+10     	; 0x1642 <DIO_u8SetPortValue+0x3e>
    1638:	8c 81       	ldd	r24, Y+4	; 0x04
    163a:	9d 81       	ldd	r25, Y+5	; 0x05
    163c:	00 97       	sbiw	r24, 0x00	; 0
    163e:	61 f0       	breq	.+24     	; 0x1658 <DIO_u8SetPortValue+0x54>
    1640:	1f c0       	rjmp	.+62     	; 0x1680 <DIO_u8SetPortValue+0x7c>
    1642:	2c 81       	ldd	r18, Y+4	; 0x04
    1644:	3d 81       	ldd	r19, Y+5	; 0x05
    1646:	22 30       	cpi	r18, 0x02	; 2
    1648:	31 05       	cpc	r19, r1
    164a:	81 f0       	breq	.+32     	; 0x166c <DIO_u8SetPortValue+0x68>
    164c:	8c 81       	ldd	r24, Y+4	; 0x04
    164e:	9d 81       	ldd	r25, Y+5	; 0x05
    1650:	83 30       	cpi	r24, 0x03	; 3
    1652:	91 05       	cpc	r25, r1
    1654:	81 f0       	breq	.+32     	; 0x1676 <DIO_u8SetPortValue+0x72>
    1656:	14 c0       	rjmp	.+40     	; 0x1680 <DIO_u8SetPortValue+0x7c>
	case DIO_u8_PORTA:
		DIO_u8_PORTA_REG = Copy_u8PortValue;
    1658:	eb e3       	ldi	r30, 0x3B	; 59
    165a:	f0 e0       	ldi	r31, 0x00	; 0
    165c:	8b 81       	ldd	r24, Y+3	; 0x03
    165e:	80 83       	st	Z, r24
    1660:	10 c0       	rjmp	.+32     	; 0x1682 <DIO_u8SetPortValue+0x7e>
		break;
	case DIO_u8_PORTB:
		DIO_u8_PORTB_REG = Copy_u8PortValue;
    1662:	e8 e3       	ldi	r30, 0x38	; 56
    1664:	f0 e0       	ldi	r31, 0x00	; 0
    1666:	8b 81       	ldd	r24, Y+3	; 0x03
    1668:	80 83       	st	Z, r24
    166a:	0b c0       	rjmp	.+22     	; 0x1682 <DIO_u8SetPortValue+0x7e>
		break;
	case DIO_u8_PORTC:
		DIO_u8_PORTC_REG = Copy_u8PortValue;
    166c:	e5 e3       	ldi	r30, 0x35	; 53
    166e:	f0 e0       	ldi	r31, 0x00	; 0
    1670:	8b 81       	ldd	r24, Y+3	; 0x03
    1672:	80 83       	st	Z, r24
    1674:	06 c0       	rjmp	.+12     	; 0x1682 <DIO_u8SetPortValue+0x7e>
		break;
	case DIO_u8_PORTD:
		DIO_u8_PORTD_REG = Copy_u8PortValue;
    1676:	e2 e3       	ldi	r30, 0x32	; 50
    1678:	f0 e0       	ldi	r31, 0x00	; 0
    167a:	8b 81       	ldd	r24, Y+3	; 0x03
    167c:	80 83       	st	Z, r24
    167e:	01 c0       	rjmp	.+2      	; 0x1682 <DIO_u8SetPortValue+0x7e>
		break;
	default:
		Local_u8ErrorState = STD_TYPES_NOK;
    1680:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ErrorState;
    1682:	89 81       	ldd	r24, Y+1	; 0x01
}
    1684:	0f 90       	pop	r0
    1686:	0f 90       	pop	r0
    1688:	0f 90       	pop	r0
    168a:	0f 90       	pop	r0
    168c:	0f 90       	pop	r0
    168e:	cf 91       	pop	r28
    1690:	df 91       	pop	r29
    1692:	08 95       	ret

00001694 <DIO_u8GetPortValue>:

u8 DIO_u8GetPortValue(u8 Copy_u8PortId, u8 *Copy_Pu8ReturnValue) {
    1694:	df 93       	push	r29
    1696:	cf 93       	push	r28
    1698:	00 d0       	rcall	.+0      	; 0x169a <DIO_u8GetPortValue+0x6>
    169a:	00 d0       	rcall	.+0      	; 0x169c <DIO_u8GetPortValue+0x8>
    169c:	00 d0       	rcall	.+0      	; 0x169e <DIO_u8GetPortValue+0xa>
    169e:	cd b7       	in	r28, 0x3d	; 61
    16a0:	de b7       	in	r29, 0x3e	; 62
    16a2:	8a 83       	std	Y+2, r24	; 0x02
    16a4:	7c 83       	std	Y+4, r23	; 0x04
    16a6:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState = STD_TYPES_OK;
    16a8:	81 e0       	ldi	r24, 0x01	; 1
    16aa:	89 83       	std	Y+1, r24	; 0x01
	if (Copy_Pu8ReturnValue != NULL) {
    16ac:	8b 81       	ldd	r24, Y+3	; 0x03
    16ae:	9c 81       	ldd	r25, Y+4	; 0x04
    16b0:	00 97       	sbiw	r24, 0x00	; 0
    16b2:	09 f4       	brne	.+2      	; 0x16b6 <DIO_u8GetPortValue+0x22>
    16b4:	3f c0       	rjmp	.+126    	; 0x1734 <DIO_u8GetPortValue+0xa0>
		Local_u8ErrorState = STD_TYPES_OK;
    16b6:	81 e0       	ldi	r24, 0x01	; 1
    16b8:	89 83       	std	Y+1, r24	; 0x01
		switch (Copy_u8PortId) {
    16ba:	8a 81       	ldd	r24, Y+2	; 0x02
    16bc:	28 2f       	mov	r18, r24
    16be:	30 e0       	ldi	r19, 0x00	; 0
    16c0:	3e 83       	std	Y+6, r19	; 0x06
    16c2:	2d 83       	std	Y+5, r18	; 0x05
    16c4:	8d 81       	ldd	r24, Y+5	; 0x05
    16c6:	9e 81       	ldd	r25, Y+6	; 0x06
    16c8:	81 30       	cpi	r24, 0x01	; 1
    16ca:	91 05       	cpc	r25, r1
    16cc:	e1 f0       	breq	.+56     	; 0x1706 <DIO_u8GetPortValue+0x72>
    16ce:	2d 81       	ldd	r18, Y+5	; 0x05
    16d0:	3e 81       	ldd	r19, Y+6	; 0x06
    16d2:	22 30       	cpi	r18, 0x02	; 2
    16d4:	31 05       	cpc	r19, r1
    16d6:	2c f4       	brge	.+10     	; 0x16e2 <DIO_u8GetPortValue+0x4e>
    16d8:	8d 81       	ldd	r24, Y+5	; 0x05
    16da:	9e 81       	ldd	r25, Y+6	; 0x06
    16dc:	00 97       	sbiw	r24, 0x00	; 0
    16de:	61 f0       	breq	.+24     	; 0x16f8 <DIO_u8GetPortValue+0x64>
    16e0:	27 c0       	rjmp	.+78     	; 0x1730 <DIO_u8GetPortValue+0x9c>
    16e2:	2d 81       	ldd	r18, Y+5	; 0x05
    16e4:	3e 81       	ldd	r19, Y+6	; 0x06
    16e6:	22 30       	cpi	r18, 0x02	; 2
    16e8:	31 05       	cpc	r19, r1
    16ea:	a1 f0       	breq	.+40     	; 0x1714 <DIO_u8GetPortValue+0x80>
    16ec:	8d 81       	ldd	r24, Y+5	; 0x05
    16ee:	9e 81       	ldd	r25, Y+6	; 0x06
    16f0:	83 30       	cpi	r24, 0x03	; 3
    16f2:	91 05       	cpc	r25, r1
    16f4:	b1 f0       	breq	.+44     	; 0x1722 <DIO_u8GetPortValue+0x8e>
    16f6:	1c c0       	rjmp	.+56     	; 0x1730 <DIO_u8GetPortValue+0x9c>
		case DIO_u8_PORTA:
			*Copy_Pu8ReturnValue = DIO_u8_PINA_REG;
    16f8:	e9 e3       	ldi	r30, 0x39	; 57
    16fa:	f0 e0       	ldi	r31, 0x00	; 0
    16fc:	80 81       	ld	r24, Z
    16fe:	eb 81       	ldd	r30, Y+3	; 0x03
    1700:	fc 81       	ldd	r31, Y+4	; 0x04
    1702:	80 83       	st	Z, r24
    1704:	19 c0       	rjmp	.+50     	; 0x1738 <DIO_u8GetPortValue+0xa4>
			break;
		case DIO_u8_PORTB:
			*Copy_Pu8ReturnValue = DIO_u8_PINB_REG;
    1706:	e6 e3       	ldi	r30, 0x36	; 54
    1708:	f0 e0       	ldi	r31, 0x00	; 0
    170a:	80 81       	ld	r24, Z
    170c:	eb 81       	ldd	r30, Y+3	; 0x03
    170e:	fc 81       	ldd	r31, Y+4	; 0x04
    1710:	80 83       	st	Z, r24
    1712:	12 c0       	rjmp	.+36     	; 0x1738 <DIO_u8GetPortValue+0xa4>
			break;
		case DIO_u8_PORTC:
			*Copy_Pu8ReturnValue = DIO_u8_PINC_REG;
    1714:	e3 e3       	ldi	r30, 0x33	; 51
    1716:	f0 e0       	ldi	r31, 0x00	; 0
    1718:	80 81       	ld	r24, Z
    171a:	eb 81       	ldd	r30, Y+3	; 0x03
    171c:	fc 81       	ldd	r31, Y+4	; 0x04
    171e:	80 83       	st	Z, r24
    1720:	0b c0       	rjmp	.+22     	; 0x1738 <DIO_u8GetPortValue+0xa4>
			break;
		case DIO_u8_PORTD:
			*Copy_Pu8ReturnValue = DIO_u8_PIND_REG;
    1722:	e0 e3       	ldi	r30, 0x30	; 48
    1724:	f0 e0       	ldi	r31, 0x00	; 0
    1726:	80 81       	ld	r24, Z
    1728:	eb 81       	ldd	r30, Y+3	; 0x03
    172a:	fc 81       	ldd	r31, Y+4	; 0x04
    172c:	80 83       	st	Z, r24
    172e:	04 c0       	rjmp	.+8      	; 0x1738 <DIO_u8GetPortValue+0xa4>
			break;
		default:
			Local_u8ErrorState = STD_TYPES_NOK;
    1730:	19 82       	std	Y+1, r1	; 0x01
    1732:	02 c0       	rjmp	.+4      	; 0x1738 <DIO_u8GetPortValue+0xa4>
		}
	} else
		Local_u8ErrorState = STD_TYPES_OK;
    1734:	81 e0       	ldi	r24, 0x01	; 1
    1736:	89 83       	std	Y+1, r24	; 0x01
	return Local_u8ErrorState;
    1738:	89 81       	ldd	r24, Y+1	; 0x01
}
    173a:	26 96       	adiw	r28, 0x06	; 6
    173c:	0f b6       	in	r0, 0x3f	; 63
    173e:	f8 94       	cli
    1740:	de bf       	out	0x3e, r29	; 62
    1742:	0f be       	out	0x3f, r0	; 63
    1744:	cd bf       	out	0x3d, r28	; 61
    1746:	cf 91       	pop	r28
    1748:	df 91       	pop	r29
    174a:	08 95       	ret

0000174c <LCD_voidInit8Bit>:
/*HAL*/
#include"LCD_interface.h"
#include "LCD_private.h"
#include "LCD_config.h"

void LCD_voidInit8Bit(void) {
    174c:	df 93       	push	r29
    174e:	cf 93       	push	r28
    1750:	cd b7       	in	r28, 0x3d	; 61
    1752:	de b7       	in	r29, 0x3e	; 62
    1754:	6c 97       	sbiw	r28, 0x1c	; 28
    1756:	0f b6       	in	r0, 0x3f	; 63
    1758:	f8 94       	cli
    175a:	de bf       	out	0x3e, r29	; 62
    175c:	0f be       	out	0x3f, r0	; 63
    175e:	cd bf       	out	0x3d, r28	; 61
    1760:	80 e0       	ldi	r24, 0x00	; 0
    1762:	90 e0       	ldi	r25, 0x00	; 0
    1764:	ac e0       	ldi	r26, 0x0C	; 12
    1766:	b2 e4       	ldi	r27, 0x42	; 66
    1768:	89 8f       	std	Y+25, r24	; 0x19
    176a:	9a 8f       	std	Y+26, r25	; 0x1a
    176c:	ab 8f       	std	Y+27, r26	; 0x1b
    176e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1770:	69 8d       	ldd	r22, Y+25	; 0x19
    1772:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1774:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1776:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1778:	20 e0       	ldi	r18, 0x00	; 0
    177a:	30 e0       	ldi	r19, 0x00	; 0
    177c:	4a ef       	ldi	r20, 0xFA	; 250
    177e:	54 e4       	ldi	r21, 0x44	; 68
    1780:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1784:	dc 01       	movw	r26, r24
    1786:	cb 01       	movw	r24, r22
    1788:	8d 8b       	std	Y+21, r24	; 0x15
    178a:	9e 8b       	std	Y+22, r25	; 0x16
    178c:	af 8b       	std	Y+23, r26	; 0x17
    178e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1790:	6d 89       	ldd	r22, Y+21	; 0x15
    1792:	7e 89       	ldd	r23, Y+22	; 0x16
    1794:	8f 89       	ldd	r24, Y+23	; 0x17
    1796:	98 8d       	ldd	r25, Y+24	; 0x18
    1798:	20 e0       	ldi	r18, 0x00	; 0
    179a:	30 e0       	ldi	r19, 0x00	; 0
    179c:	40 e8       	ldi	r20, 0x80	; 128
    179e:	5f e3       	ldi	r21, 0x3F	; 63
    17a0:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    17a4:	88 23       	and	r24, r24
    17a6:	2c f4       	brge	.+10     	; 0x17b2 <LCD_voidInit8Bit+0x66>
		__ticks = 1;
    17a8:	81 e0       	ldi	r24, 0x01	; 1
    17aa:	90 e0       	ldi	r25, 0x00	; 0
    17ac:	9c 8b       	std	Y+20, r25	; 0x14
    17ae:	8b 8b       	std	Y+19, r24	; 0x13
    17b0:	3f c0       	rjmp	.+126    	; 0x1830 <LCD_voidInit8Bit+0xe4>
	else if (__tmp > 65535)
    17b2:	6d 89       	ldd	r22, Y+21	; 0x15
    17b4:	7e 89       	ldd	r23, Y+22	; 0x16
    17b6:	8f 89       	ldd	r24, Y+23	; 0x17
    17b8:	98 8d       	ldd	r25, Y+24	; 0x18
    17ba:	20 e0       	ldi	r18, 0x00	; 0
    17bc:	3f ef       	ldi	r19, 0xFF	; 255
    17be:	4f e7       	ldi	r20, 0x7F	; 127
    17c0:	57 e4       	ldi	r21, 0x47	; 71
    17c2:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    17c6:	18 16       	cp	r1, r24
    17c8:	4c f5       	brge	.+82     	; 0x181c <LCD_voidInit8Bit+0xd0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17ca:	69 8d       	ldd	r22, Y+25	; 0x19
    17cc:	7a 8d       	ldd	r23, Y+26	; 0x1a
    17ce:	8b 8d       	ldd	r24, Y+27	; 0x1b
    17d0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    17d2:	20 e0       	ldi	r18, 0x00	; 0
    17d4:	30 e0       	ldi	r19, 0x00	; 0
    17d6:	40 e2       	ldi	r20, 0x20	; 32
    17d8:	51 e4       	ldi	r21, 0x41	; 65
    17da:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17de:	dc 01       	movw	r26, r24
    17e0:	cb 01       	movw	r24, r22
    17e2:	bc 01       	movw	r22, r24
    17e4:	cd 01       	movw	r24, r26
    17e6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    17ea:	dc 01       	movw	r26, r24
    17ec:	cb 01       	movw	r24, r22
    17ee:	9c 8b       	std	Y+20, r25	; 0x14
    17f0:	8b 8b       	std	Y+19, r24	; 0x13
    17f2:	0f c0       	rjmp	.+30     	; 0x1812 <LCD_voidInit8Bit+0xc6>
    17f4:	88 ec       	ldi	r24, 0xC8	; 200
    17f6:	90 e0       	ldi	r25, 0x00	; 0
    17f8:	9a 8b       	std	Y+18, r25	; 0x12
    17fa:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    17fc:	89 89       	ldd	r24, Y+17	; 0x11
    17fe:	9a 89       	ldd	r25, Y+18	; 0x12
    1800:	01 97       	sbiw	r24, 0x01	; 1
    1802:	f1 f7       	brne	.-4      	; 0x1800 <LCD_voidInit8Bit+0xb4>
    1804:	9a 8b       	std	Y+18, r25	; 0x12
    1806:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1808:	8b 89       	ldd	r24, Y+19	; 0x13
    180a:	9c 89       	ldd	r25, Y+20	; 0x14
    180c:	01 97       	sbiw	r24, 0x01	; 1
    180e:	9c 8b       	std	Y+20, r25	; 0x14
    1810:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1812:	8b 89       	ldd	r24, Y+19	; 0x13
    1814:	9c 89       	ldd	r25, Y+20	; 0x14
    1816:	00 97       	sbiw	r24, 0x00	; 0
    1818:	69 f7       	brne	.-38     	; 0x17f4 <LCD_voidInit8Bit+0xa8>
    181a:	14 c0       	rjmp	.+40     	; 0x1844 <LCD_voidInit8Bit+0xf8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    181c:	6d 89       	ldd	r22, Y+21	; 0x15
    181e:	7e 89       	ldd	r23, Y+22	; 0x16
    1820:	8f 89       	ldd	r24, Y+23	; 0x17
    1822:	98 8d       	ldd	r25, Y+24	; 0x18
    1824:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1828:	dc 01       	movw	r26, r24
    182a:	cb 01       	movw	r24, r22
    182c:	9c 8b       	std	Y+20, r25	; 0x14
    182e:	8b 8b       	std	Y+19, r24	; 0x13
    1830:	8b 89       	ldd	r24, Y+19	; 0x13
    1832:	9c 89       	ldd	r25, Y+20	; 0x14
    1834:	98 8b       	std	Y+16, r25	; 0x10
    1836:	8f 87       	std	Y+15, r24	; 0x0f
    1838:	8f 85       	ldd	r24, Y+15	; 0x0f
    183a:	98 89       	ldd	r25, Y+16	; 0x10
    183c:	01 97       	sbiw	r24, 0x01	; 1
    183e:	f1 f7       	brne	.-4      	; 0x183c <LCD_voidInit8Bit+0xf0>
    1840:	98 8b       	std	Y+16, r25	; 0x10
    1842:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(35);
	LCD_voidWriteCmd(0b00111000);
    1844:	88 e3       	ldi	r24, 0x38	; 56
    1846:	0e 94 a5 0e 	call	0x1d4a	; 0x1d4a <LCD_voidWriteCmd>
	LCD_voidWriteCmd(0b00001100);
    184a:	8c e0       	ldi	r24, 0x0C	; 12
    184c:	0e 94 a5 0e 	call	0x1d4a	; 0x1d4a <LCD_voidWriteCmd>
	LCD_voidWriteCmd(0x01);
    1850:	81 e0       	ldi	r24, 0x01	; 1
    1852:	0e 94 a5 0e 	call	0x1d4a	; 0x1d4a <LCD_voidWriteCmd>
    1856:	80 e0       	ldi	r24, 0x00	; 0
    1858:	90 e0       	ldi	r25, 0x00	; 0
    185a:	a0 e0       	ldi	r26, 0x00	; 0
    185c:	b0 e4       	ldi	r27, 0x40	; 64
    185e:	8b 87       	std	Y+11, r24	; 0x0b
    1860:	9c 87       	std	Y+12, r25	; 0x0c
    1862:	ad 87       	std	Y+13, r26	; 0x0d
    1864:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1866:	6b 85       	ldd	r22, Y+11	; 0x0b
    1868:	7c 85       	ldd	r23, Y+12	; 0x0c
    186a:	8d 85       	ldd	r24, Y+13	; 0x0d
    186c:	9e 85       	ldd	r25, Y+14	; 0x0e
    186e:	20 e0       	ldi	r18, 0x00	; 0
    1870:	30 e0       	ldi	r19, 0x00	; 0
    1872:	4a ef       	ldi	r20, 0xFA	; 250
    1874:	54 e4       	ldi	r21, 0x44	; 68
    1876:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    187a:	dc 01       	movw	r26, r24
    187c:	cb 01       	movw	r24, r22
    187e:	8f 83       	std	Y+7, r24	; 0x07
    1880:	98 87       	std	Y+8, r25	; 0x08
    1882:	a9 87       	std	Y+9, r26	; 0x09
    1884:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1886:	6f 81       	ldd	r22, Y+7	; 0x07
    1888:	78 85       	ldd	r23, Y+8	; 0x08
    188a:	89 85       	ldd	r24, Y+9	; 0x09
    188c:	9a 85       	ldd	r25, Y+10	; 0x0a
    188e:	20 e0       	ldi	r18, 0x00	; 0
    1890:	30 e0       	ldi	r19, 0x00	; 0
    1892:	40 e8       	ldi	r20, 0x80	; 128
    1894:	5f e3       	ldi	r21, 0x3F	; 63
    1896:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    189a:	88 23       	and	r24, r24
    189c:	2c f4       	brge	.+10     	; 0x18a8 <LCD_voidInit8Bit+0x15c>
		__ticks = 1;
    189e:	81 e0       	ldi	r24, 0x01	; 1
    18a0:	90 e0       	ldi	r25, 0x00	; 0
    18a2:	9e 83       	std	Y+6, r25	; 0x06
    18a4:	8d 83       	std	Y+5, r24	; 0x05
    18a6:	3f c0       	rjmp	.+126    	; 0x1926 <LCD_voidInit8Bit+0x1da>
	else if (__tmp > 65535)
    18a8:	6f 81       	ldd	r22, Y+7	; 0x07
    18aa:	78 85       	ldd	r23, Y+8	; 0x08
    18ac:	89 85       	ldd	r24, Y+9	; 0x09
    18ae:	9a 85       	ldd	r25, Y+10	; 0x0a
    18b0:	20 e0       	ldi	r18, 0x00	; 0
    18b2:	3f ef       	ldi	r19, 0xFF	; 255
    18b4:	4f e7       	ldi	r20, 0x7F	; 127
    18b6:	57 e4       	ldi	r21, 0x47	; 71
    18b8:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    18bc:	18 16       	cp	r1, r24
    18be:	4c f5       	brge	.+82     	; 0x1912 <LCD_voidInit8Bit+0x1c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    18c0:	6b 85       	ldd	r22, Y+11	; 0x0b
    18c2:	7c 85       	ldd	r23, Y+12	; 0x0c
    18c4:	8d 85       	ldd	r24, Y+13	; 0x0d
    18c6:	9e 85       	ldd	r25, Y+14	; 0x0e
    18c8:	20 e0       	ldi	r18, 0x00	; 0
    18ca:	30 e0       	ldi	r19, 0x00	; 0
    18cc:	40 e2       	ldi	r20, 0x20	; 32
    18ce:	51 e4       	ldi	r21, 0x41	; 65
    18d0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18d4:	dc 01       	movw	r26, r24
    18d6:	cb 01       	movw	r24, r22
    18d8:	bc 01       	movw	r22, r24
    18da:	cd 01       	movw	r24, r26
    18dc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18e0:	dc 01       	movw	r26, r24
    18e2:	cb 01       	movw	r24, r22
    18e4:	9e 83       	std	Y+6, r25	; 0x06
    18e6:	8d 83       	std	Y+5, r24	; 0x05
    18e8:	0f c0       	rjmp	.+30     	; 0x1908 <LCD_voidInit8Bit+0x1bc>
    18ea:	88 ec       	ldi	r24, 0xC8	; 200
    18ec:	90 e0       	ldi	r25, 0x00	; 0
    18ee:	9c 83       	std	Y+4, r25	; 0x04
    18f0:	8b 83       	std	Y+3, r24	; 0x03
    18f2:	8b 81       	ldd	r24, Y+3	; 0x03
    18f4:	9c 81       	ldd	r25, Y+4	; 0x04
    18f6:	01 97       	sbiw	r24, 0x01	; 1
    18f8:	f1 f7       	brne	.-4      	; 0x18f6 <LCD_voidInit8Bit+0x1aa>
    18fa:	9c 83       	std	Y+4, r25	; 0x04
    18fc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18fe:	8d 81       	ldd	r24, Y+5	; 0x05
    1900:	9e 81       	ldd	r25, Y+6	; 0x06
    1902:	01 97       	sbiw	r24, 0x01	; 1
    1904:	9e 83       	std	Y+6, r25	; 0x06
    1906:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1908:	8d 81       	ldd	r24, Y+5	; 0x05
    190a:	9e 81       	ldd	r25, Y+6	; 0x06
    190c:	00 97       	sbiw	r24, 0x00	; 0
    190e:	69 f7       	brne	.-38     	; 0x18ea <LCD_voidInit8Bit+0x19e>
    1910:	14 c0       	rjmp	.+40     	; 0x193a <LCD_voidInit8Bit+0x1ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1912:	6f 81       	ldd	r22, Y+7	; 0x07
    1914:	78 85       	ldd	r23, Y+8	; 0x08
    1916:	89 85       	ldd	r24, Y+9	; 0x09
    1918:	9a 85       	ldd	r25, Y+10	; 0x0a
    191a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    191e:	dc 01       	movw	r26, r24
    1920:	cb 01       	movw	r24, r22
    1922:	9e 83       	std	Y+6, r25	; 0x06
    1924:	8d 83       	std	Y+5, r24	; 0x05
    1926:	8d 81       	ldd	r24, Y+5	; 0x05
    1928:	9e 81       	ldd	r25, Y+6	; 0x06
    192a:	9a 83       	std	Y+2, r25	; 0x02
    192c:	89 83       	std	Y+1, r24	; 0x01
    192e:	89 81       	ldd	r24, Y+1	; 0x01
    1930:	9a 81       	ldd	r25, Y+2	; 0x02
    1932:	01 97       	sbiw	r24, 0x01	; 1
    1934:	f1 f7       	brne	.-4      	; 0x1932 <LCD_voidInit8Bit+0x1e6>
    1936:	9a 83       	std	Y+2, r25	; 0x02
    1938:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	LCD_voidWriteCmd(0b00000110);
    193a:	86 e0       	ldi	r24, 0x06	; 6
    193c:	0e 94 a5 0e 	call	0x1d4a	; 0x1d4a <LCD_voidWriteCmd>
}
    1940:	6c 96       	adiw	r28, 0x1c	; 28
    1942:	0f b6       	in	r0, 0x3f	; 63
    1944:	f8 94       	cli
    1946:	de bf       	out	0x3e, r29	; 62
    1948:	0f be       	out	0x3f, r0	; 63
    194a:	cd bf       	out	0x3d, r28	; 61
    194c:	cf 91       	pop	r28
    194e:	df 91       	pop	r29
    1950:	08 95       	ret

00001952 <LCD_voidInit4Bit>:

void LCD_voidInit4Bit(void) {
    1952:	df 93       	push	r29
    1954:	cf 93       	push	r28
    1956:	cd b7       	in	r28, 0x3d	; 61
    1958:	de b7       	in	r29, 0x3e	; 62
    195a:	6c 97       	sbiw	r28, 0x1c	; 28
    195c:	0f b6       	in	r0, 0x3f	; 63
    195e:	f8 94       	cli
    1960:	de bf       	out	0x3e, r29	; 62
    1962:	0f be       	out	0x3f, r0	; 63
    1964:	cd bf       	out	0x3d, r28	; 61
    1966:	80 e0       	ldi	r24, 0x00	; 0
    1968:	90 e0       	ldi	r25, 0x00	; 0
    196a:	ac e0       	ldi	r26, 0x0C	; 12
    196c:	b2 e4       	ldi	r27, 0x42	; 66
    196e:	89 8f       	std	Y+25, r24	; 0x19
    1970:	9a 8f       	std	Y+26, r25	; 0x1a
    1972:	ab 8f       	std	Y+27, r26	; 0x1b
    1974:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1976:	69 8d       	ldd	r22, Y+25	; 0x19
    1978:	7a 8d       	ldd	r23, Y+26	; 0x1a
    197a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    197c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    197e:	20 e0       	ldi	r18, 0x00	; 0
    1980:	30 e0       	ldi	r19, 0x00	; 0
    1982:	4a ef       	ldi	r20, 0xFA	; 250
    1984:	54 e4       	ldi	r21, 0x44	; 68
    1986:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    198a:	dc 01       	movw	r26, r24
    198c:	cb 01       	movw	r24, r22
    198e:	8d 8b       	std	Y+21, r24	; 0x15
    1990:	9e 8b       	std	Y+22, r25	; 0x16
    1992:	af 8b       	std	Y+23, r26	; 0x17
    1994:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1996:	6d 89       	ldd	r22, Y+21	; 0x15
    1998:	7e 89       	ldd	r23, Y+22	; 0x16
    199a:	8f 89       	ldd	r24, Y+23	; 0x17
    199c:	98 8d       	ldd	r25, Y+24	; 0x18
    199e:	20 e0       	ldi	r18, 0x00	; 0
    19a0:	30 e0       	ldi	r19, 0x00	; 0
    19a2:	40 e8       	ldi	r20, 0x80	; 128
    19a4:	5f e3       	ldi	r21, 0x3F	; 63
    19a6:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    19aa:	88 23       	and	r24, r24
    19ac:	2c f4       	brge	.+10     	; 0x19b8 <LCD_voidInit4Bit+0x66>
		__ticks = 1;
    19ae:	81 e0       	ldi	r24, 0x01	; 1
    19b0:	90 e0       	ldi	r25, 0x00	; 0
    19b2:	9c 8b       	std	Y+20, r25	; 0x14
    19b4:	8b 8b       	std	Y+19, r24	; 0x13
    19b6:	3f c0       	rjmp	.+126    	; 0x1a36 <LCD_voidInit4Bit+0xe4>
	else if (__tmp > 65535)
    19b8:	6d 89       	ldd	r22, Y+21	; 0x15
    19ba:	7e 89       	ldd	r23, Y+22	; 0x16
    19bc:	8f 89       	ldd	r24, Y+23	; 0x17
    19be:	98 8d       	ldd	r25, Y+24	; 0x18
    19c0:	20 e0       	ldi	r18, 0x00	; 0
    19c2:	3f ef       	ldi	r19, 0xFF	; 255
    19c4:	4f e7       	ldi	r20, 0x7F	; 127
    19c6:	57 e4       	ldi	r21, 0x47	; 71
    19c8:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    19cc:	18 16       	cp	r1, r24
    19ce:	4c f5       	brge	.+82     	; 0x1a22 <LCD_voidInit4Bit+0xd0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19d0:	69 8d       	ldd	r22, Y+25	; 0x19
    19d2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    19d4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    19d6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    19d8:	20 e0       	ldi	r18, 0x00	; 0
    19da:	30 e0       	ldi	r19, 0x00	; 0
    19dc:	40 e2       	ldi	r20, 0x20	; 32
    19de:	51 e4       	ldi	r21, 0x41	; 65
    19e0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19e4:	dc 01       	movw	r26, r24
    19e6:	cb 01       	movw	r24, r22
    19e8:	bc 01       	movw	r22, r24
    19ea:	cd 01       	movw	r24, r26
    19ec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19f0:	dc 01       	movw	r26, r24
    19f2:	cb 01       	movw	r24, r22
    19f4:	9c 8b       	std	Y+20, r25	; 0x14
    19f6:	8b 8b       	std	Y+19, r24	; 0x13
    19f8:	0f c0       	rjmp	.+30     	; 0x1a18 <LCD_voidInit4Bit+0xc6>
    19fa:	88 ec       	ldi	r24, 0xC8	; 200
    19fc:	90 e0       	ldi	r25, 0x00	; 0
    19fe:	9a 8b       	std	Y+18, r25	; 0x12
    1a00:	89 8b       	std	Y+17, r24	; 0x11
    1a02:	89 89       	ldd	r24, Y+17	; 0x11
    1a04:	9a 89       	ldd	r25, Y+18	; 0x12
    1a06:	01 97       	sbiw	r24, 0x01	; 1
    1a08:	f1 f7       	brne	.-4      	; 0x1a06 <LCD_voidInit4Bit+0xb4>
    1a0a:	9a 8b       	std	Y+18, r25	; 0x12
    1a0c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a0e:	8b 89       	ldd	r24, Y+19	; 0x13
    1a10:	9c 89       	ldd	r25, Y+20	; 0x14
    1a12:	01 97       	sbiw	r24, 0x01	; 1
    1a14:	9c 8b       	std	Y+20, r25	; 0x14
    1a16:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a18:	8b 89       	ldd	r24, Y+19	; 0x13
    1a1a:	9c 89       	ldd	r25, Y+20	; 0x14
    1a1c:	00 97       	sbiw	r24, 0x00	; 0
    1a1e:	69 f7       	brne	.-38     	; 0x19fa <LCD_voidInit4Bit+0xa8>
    1a20:	14 c0       	rjmp	.+40     	; 0x1a4a <LCD_voidInit4Bit+0xf8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a22:	6d 89       	ldd	r22, Y+21	; 0x15
    1a24:	7e 89       	ldd	r23, Y+22	; 0x16
    1a26:	8f 89       	ldd	r24, Y+23	; 0x17
    1a28:	98 8d       	ldd	r25, Y+24	; 0x18
    1a2a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a2e:	dc 01       	movw	r26, r24
    1a30:	cb 01       	movw	r24, r22
    1a32:	9c 8b       	std	Y+20, r25	; 0x14
    1a34:	8b 8b       	std	Y+19, r24	; 0x13
    1a36:	8b 89       	ldd	r24, Y+19	; 0x13
    1a38:	9c 89       	ldd	r25, Y+20	; 0x14
    1a3a:	98 8b       	std	Y+16, r25	; 0x10
    1a3c:	8f 87       	std	Y+15, r24	; 0x0f
    1a3e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1a40:	98 89       	ldd	r25, Y+16	; 0x10
    1a42:	01 97       	sbiw	r24, 0x01	; 1
    1a44:	f1 f7       	brne	.-4      	; 0x1a42 <LCD_voidInit4Bit+0xf0>
    1a46:	98 8b       	std	Y+16, r25	; 0x10
    1a48:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(35);
	LCD_voidWriteCmd(0b00100000);
    1a4a:	80 e2       	ldi	r24, 0x20	; 32
    1a4c:	0e 94 a5 0e 	call	0x1d4a	; 0x1d4a <LCD_voidWriteCmd>
	LCD_voidWriteCmd(0b00100000);
    1a50:	80 e2       	ldi	r24, 0x20	; 32
    1a52:	0e 94 a5 0e 	call	0x1d4a	; 0x1d4a <LCD_voidWriteCmd>
	LCD_voidWriteCmd(0b00100000);
    1a56:	80 e2       	ldi	r24, 0x20	; 32
    1a58:	0e 94 a5 0e 	call	0x1d4a	; 0x1d4a <LCD_voidWriteCmd>
	LCD_voidWriteCmd(0b00000000);
    1a5c:	80 e0       	ldi	r24, 0x00	; 0
    1a5e:	0e 94 a5 0e 	call	0x1d4a	; 0x1d4a <LCD_voidWriteCmd>
	LCD_voidWriteCmd(0b11000000);
    1a62:	80 ec       	ldi	r24, 0xC0	; 192
    1a64:	0e 94 a5 0e 	call	0x1d4a	; 0x1d4a <LCD_voidWriteCmd>
	LCD_voidWriteCmd(0b00000000);
    1a68:	80 e0       	ldi	r24, 0x00	; 0
    1a6a:	0e 94 a5 0e 	call	0x1d4a	; 0x1d4a <LCD_voidWriteCmd>
	LCD_voidWriteCmd(0b00010000);
    1a6e:	80 e1       	ldi	r24, 0x10	; 16
    1a70:	0e 94 a5 0e 	call	0x1d4a	; 0x1d4a <LCD_voidWriteCmd>
    1a74:	80 e0       	ldi	r24, 0x00	; 0
    1a76:	90 e0       	ldi	r25, 0x00	; 0
    1a78:	a0 e0       	ldi	r26, 0x00	; 0
    1a7a:	b0 e4       	ldi	r27, 0x40	; 64
    1a7c:	8b 87       	std	Y+11, r24	; 0x0b
    1a7e:	9c 87       	std	Y+12, r25	; 0x0c
    1a80:	ad 87       	std	Y+13, r26	; 0x0d
    1a82:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a84:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a86:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a88:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a8a:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a8c:	20 e0       	ldi	r18, 0x00	; 0
    1a8e:	30 e0       	ldi	r19, 0x00	; 0
    1a90:	4a ef       	ldi	r20, 0xFA	; 250
    1a92:	54 e4       	ldi	r21, 0x44	; 68
    1a94:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a98:	dc 01       	movw	r26, r24
    1a9a:	cb 01       	movw	r24, r22
    1a9c:	8f 83       	std	Y+7, r24	; 0x07
    1a9e:	98 87       	std	Y+8, r25	; 0x08
    1aa0:	a9 87       	std	Y+9, r26	; 0x09
    1aa2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1aa4:	6f 81       	ldd	r22, Y+7	; 0x07
    1aa6:	78 85       	ldd	r23, Y+8	; 0x08
    1aa8:	89 85       	ldd	r24, Y+9	; 0x09
    1aaa:	9a 85       	ldd	r25, Y+10	; 0x0a
    1aac:	20 e0       	ldi	r18, 0x00	; 0
    1aae:	30 e0       	ldi	r19, 0x00	; 0
    1ab0:	40 e8       	ldi	r20, 0x80	; 128
    1ab2:	5f e3       	ldi	r21, 0x3F	; 63
    1ab4:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1ab8:	88 23       	and	r24, r24
    1aba:	2c f4       	brge	.+10     	; 0x1ac6 <LCD_voidInit4Bit+0x174>
		__ticks = 1;
    1abc:	81 e0       	ldi	r24, 0x01	; 1
    1abe:	90 e0       	ldi	r25, 0x00	; 0
    1ac0:	9e 83       	std	Y+6, r25	; 0x06
    1ac2:	8d 83       	std	Y+5, r24	; 0x05
    1ac4:	3f c0       	rjmp	.+126    	; 0x1b44 <LCD_voidInit4Bit+0x1f2>
	else if (__tmp > 65535)
    1ac6:	6f 81       	ldd	r22, Y+7	; 0x07
    1ac8:	78 85       	ldd	r23, Y+8	; 0x08
    1aca:	89 85       	ldd	r24, Y+9	; 0x09
    1acc:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ace:	20 e0       	ldi	r18, 0x00	; 0
    1ad0:	3f ef       	ldi	r19, 0xFF	; 255
    1ad2:	4f e7       	ldi	r20, 0x7F	; 127
    1ad4:	57 e4       	ldi	r21, 0x47	; 71
    1ad6:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1ada:	18 16       	cp	r1, r24
    1adc:	4c f5       	brge	.+82     	; 0x1b30 <LCD_voidInit4Bit+0x1de>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ade:	6b 85       	ldd	r22, Y+11	; 0x0b
    1ae0:	7c 85       	ldd	r23, Y+12	; 0x0c
    1ae2:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ae4:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ae6:	20 e0       	ldi	r18, 0x00	; 0
    1ae8:	30 e0       	ldi	r19, 0x00	; 0
    1aea:	40 e2       	ldi	r20, 0x20	; 32
    1aec:	51 e4       	ldi	r21, 0x41	; 65
    1aee:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1af2:	dc 01       	movw	r26, r24
    1af4:	cb 01       	movw	r24, r22
    1af6:	bc 01       	movw	r22, r24
    1af8:	cd 01       	movw	r24, r26
    1afa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1afe:	dc 01       	movw	r26, r24
    1b00:	cb 01       	movw	r24, r22
    1b02:	9e 83       	std	Y+6, r25	; 0x06
    1b04:	8d 83       	std	Y+5, r24	; 0x05
    1b06:	0f c0       	rjmp	.+30     	; 0x1b26 <LCD_voidInit4Bit+0x1d4>
    1b08:	88 ec       	ldi	r24, 0xC8	; 200
    1b0a:	90 e0       	ldi	r25, 0x00	; 0
    1b0c:	9c 83       	std	Y+4, r25	; 0x04
    1b0e:	8b 83       	std	Y+3, r24	; 0x03
    1b10:	8b 81       	ldd	r24, Y+3	; 0x03
    1b12:	9c 81       	ldd	r25, Y+4	; 0x04
    1b14:	01 97       	sbiw	r24, 0x01	; 1
    1b16:	f1 f7       	brne	.-4      	; 0x1b14 <LCD_voidInit4Bit+0x1c2>
    1b18:	9c 83       	std	Y+4, r25	; 0x04
    1b1a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b1c:	8d 81       	ldd	r24, Y+5	; 0x05
    1b1e:	9e 81       	ldd	r25, Y+6	; 0x06
    1b20:	01 97       	sbiw	r24, 0x01	; 1
    1b22:	9e 83       	std	Y+6, r25	; 0x06
    1b24:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b26:	8d 81       	ldd	r24, Y+5	; 0x05
    1b28:	9e 81       	ldd	r25, Y+6	; 0x06
    1b2a:	00 97       	sbiw	r24, 0x00	; 0
    1b2c:	69 f7       	brne	.-38     	; 0x1b08 <LCD_voidInit4Bit+0x1b6>
    1b2e:	14 c0       	rjmp	.+40     	; 0x1b58 <LCD_voidInit4Bit+0x206>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b30:	6f 81       	ldd	r22, Y+7	; 0x07
    1b32:	78 85       	ldd	r23, Y+8	; 0x08
    1b34:	89 85       	ldd	r24, Y+9	; 0x09
    1b36:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b38:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b3c:	dc 01       	movw	r26, r24
    1b3e:	cb 01       	movw	r24, r22
    1b40:	9e 83       	std	Y+6, r25	; 0x06
    1b42:	8d 83       	std	Y+5, r24	; 0x05
    1b44:	8d 81       	ldd	r24, Y+5	; 0x05
    1b46:	9e 81       	ldd	r25, Y+6	; 0x06
    1b48:	9a 83       	std	Y+2, r25	; 0x02
    1b4a:	89 83       	std	Y+1, r24	; 0x01
    1b4c:	89 81       	ldd	r24, Y+1	; 0x01
    1b4e:	9a 81       	ldd	r25, Y+2	; 0x02
    1b50:	01 97       	sbiw	r24, 0x01	; 1
    1b52:	f1 f7       	brne	.-4      	; 0x1b50 <LCD_voidInit4Bit+0x1fe>
    1b54:	9a 83       	std	Y+2, r25	; 0x02
    1b56:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	LCD_voidWriteCmd(0b00000000);
    1b58:	80 e0       	ldi	r24, 0x00	; 0
    1b5a:	0e 94 a5 0e 	call	0x1d4a	; 0x1d4a <LCD_voidWriteCmd>
	LCD_voidWriteCmd(0b01100000);
    1b5e:	80 e6       	ldi	r24, 0x60	; 96
    1b60:	0e 94 a5 0e 	call	0x1d4a	; 0x1d4a <LCD_voidWriteCmd>
}
    1b64:	6c 96       	adiw	r28, 0x1c	; 28
    1b66:	0f b6       	in	r0, 0x3f	; 63
    1b68:	f8 94       	cli
    1b6a:	de bf       	out	0x3e, r29	; 62
    1b6c:	0f be       	out	0x3f, r0	; 63
    1b6e:	cd bf       	out	0x3d, r28	; 61
    1b70:	cf 91       	pop	r28
    1b72:	df 91       	pop	r29
    1b74:	08 95       	ret

00001b76 <LCD_voidWriteChar>:
void LCD_voidWriteChar(u8 Copy_u8Char) {
    1b76:	df 93       	push	r29
    1b78:	cf 93       	push	r28
    1b7a:	cd b7       	in	r28, 0x3d	; 61
    1b7c:	de b7       	in	r29, 0x3e	; 62
    1b7e:	69 97       	sbiw	r28, 0x19	; 25
    1b80:	0f b6       	in	r0, 0x3f	; 63
    1b82:	f8 94       	cli
    1b84:	de bf       	out	0x3e, r29	; 62
    1b86:	0f be       	out	0x3f, r0	; 63
    1b88:	cd bf       	out	0x3d, r28	; 61
    1b8a:	89 8f       	std	Y+25, r24	; 0x19
	/* RS =  1 (Data byte)        */
	DIO_u8SetPinValue(LCD_u8_RS_PORT, LCD_u8_RS_PIN, DIO_u8_HIGH);
    1b8c:	80 e0       	ldi	r24, 0x00	; 0
    1b8e:	60 e0       	ldi	r22, 0x00	; 0
    1b90:	41 e0       	ldi	r20, 0x01	; 1
    1b92:	0e 94 b8 08 	call	0x1170	; 0x1170 <DIO_u8SetPinValue>
	/* R/w = 0 (Write operation) */
	DIO_u8SetPinValue(LCD_u8_RW_PORT, LCD_u8_RW_PIN, DIO_u8_LOW);
    1b96:	80 e0       	ldi	r24, 0x00	; 0
    1b98:	61 e0       	ldi	r22, 0x01	; 1
    1b9a:	40 e0       	ldi	r20, 0x00	; 0
    1b9c:	0e 94 b8 08 	call	0x1170	; 0x1170 <DIO_u8SetPinValue>
	/* Send Data byte to LCD    */
	DIO_u8SetPortValue(LCD_u8_DATA_PORT, Copy_u8Char);
    1ba0:	83 e0       	ldi	r24, 0x03	; 3
    1ba2:	69 8d       	ldd	r22, Y+25	; 0x19
    1ba4:	0e 94 02 0b 	call	0x1604	; 0x1604 <DIO_u8SetPortValue>
	/*Enable pulse             */
	DIO_u8SetPinValue(LCD_u8_EN_PORT, LCD_u8_EN_PIN, DIO_u8_HIGH);
    1ba8:	80 e0       	ldi	r24, 0x00	; 0
    1baa:	62 e0       	ldi	r22, 0x02	; 2
    1bac:	41 e0       	ldi	r20, 0x01	; 1
    1bae:	0e 94 b8 08 	call	0x1170	; 0x1170 <DIO_u8SetPinValue>
    1bb2:	80 e0       	ldi	r24, 0x00	; 0
    1bb4:	90 e0       	ldi	r25, 0x00	; 0
    1bb6:	a0 e0       	ldi	r26, 0x00	; 0
    1bb8:	b0 e4       	ldi	r27, 0x40	; 64
    1bba:	8d 8b       	std	Y+21, r24	; 0x15
    1bbc:	9e 8b       	std	Y+22, r25	; 0x16
    1bbe:	af 8b       	std	Y+23, r26	; 0x17
    1bc0:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1bc2:	6d 89       	ldd	r22, Y+21	; 0x15
    1bc4:	7e 89       	ldd	r23, Y+22	; 0x16
    1bc6:	8f 89       	ldd	r24, Y+23	; 0x17
    1bc8:	98 8d       	ldd	r25, Y+24	; 0x18
    1bca:	2b ea       	ldi	r18, 0xAB	; 171
    1bcc:	3a ea       	ldi	r19, 0xAA	; 170
    1bce:	4a e2       	ldi	r20, 0x2A	; 42
    1bd0:	50 e4       	ldi	r21, 0x40	; 64
    1bd2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1bd6:	dc 01       	movw	r26, r24
    1bd8:	cb 01       	movw	r24, r22
    1bda:	89 8b       	std	Y+17, r24	; 0x11
    1bdc:	9a 8b       	std	Y+18, r25	; 0x12
    1bde:	ab 8b       	std	Y+19, r26	; 0x13
    1be0:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    1be2:	69 89       	ldd	r22, Y+17	; 0x11
    1be4:	7a 89       	ldd	r23, Y+18	; 0x12
    1be6:	8b 89       	ldd	r24, Y+19	; 0x13
    1be8:	9c 89       	ldd	r25, Y+20	; 0x14
    1bea:	20 e0       	ldi	r18, 0x00	; 0
    1bec:	30 e0       	ldi	r19, 0x00	; 0
    1bee:	40 e8       	ldi	r20, 0x80	; 128
    1bf0:	5f e3       	ldi	r21, 0x3F	; 63
    1bf2:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1bf6:	88 23       	and	r24, r24
    1bf8:	1c f4       	brge	.+6      	; 0x1c00 <LCD_voidWriteChar+0x8a>
		__ticks = 1;
    1bfa:	81 e0       	ldi	r24, 0x01	; 1
    1bfc:	88 8b       	std	Y+16, r24	; 0x10
    1bfe:	91 c0       	rjmp	.+290    	; 0x1d22 <LCD_voidWriteChar+0x1ac>
	else if (__tmp > 255)
    1c00:	69 89       	ldd	r22, Y+17	; 0x11
    1c02:	7a 89       	ldd	r23, Y+18	; 0x12
    1c04:	8b 89       	ldd	r24, Y+19	; 0x13
    1c06:	9c 89       	ldd	r25, Y+20	; 0x14
    1c08:	20 e0       	ldi	r18, 0x00	; 0
    1c0a:	30 e0       	ldi	r19, 0x00	; 0
    1c0c:	4f e7       	ldi	r20, 0x7F	; 127
    1c0e:	53 e4       	ldi	r21, 0x43	; 67
    1c10:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1c14:	18 16       	cp	r1, r24
    1c16:	0c f0       	brlt	.+2      	; 0x1c1a <LCD_voidWriteChar+0xa4>
    1c18:	7b c0       	rjmp	.+246    	; 0x1d10 <LCD_voidWriteChar+0x19a>
	{
		_delay_ms(__us / 1000.0);
    1c1a:	6d 89       	ldd	r22, Y+21	; 0x15
    1c1c:	7e 89       	ldd	r23, Y+22	; 0x16
    1c1e:	8f 89       	ldd	r24, Y+23	; 0x17
    1c20:	98 8d       	ldd	r25, Y+24	; 0x18
    1c22:	20 e0       	ldi	r18, 0x00	; 0
    1c24:	30 e0       	ldi	r19, 0x00	; 0
    1c26:	4a e7       	ldi	r20, 0x7A	; 122
    1c28:	54 e4       	ldi	r21, 0x44	; 68
    1c2a:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1c2e:	dc 01       	movw	r26, r24
    1c30:	cb 01       	movw	r24, r22
    1c32:	8c 87       	std	Y+12, r24	; 0x0c
    1c34:	9d 87       	std	Y+13, r25	; 0x0d
    1c36:	ae 87       	std	Y+14, r26	; 0x0e
    1c38:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c3a:	6c 85       	ldd	r22, Y+12	; 0x0c
    1c3c:	7d 85       	ldd	r23, Y+13	; 0x0d
    1c3e:	8e 85       	ldd	r24, Y+14	; 0x0e
    1c40:	9f 85       	ldd	r25, Y+15	; 0x0f
    1c42:	20 e0       	ldi	r18, 0x00	; 0
    1c44:	30 e0       	ldi	r19, 0x00	; 0
    1c46:	4a ef       	ldi	r20, 0xFA	; 250
    1c48:	54 e4       	ldi	r21, 0x44	; 68
    1c4a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c4e:	dc 01       	movw	r26, r24
    1c50:	cb 01       	movw	r24, r22
    1c52:	88 87       	std	Y+8, r24	; 0x08
    1c54:	99 87       	std	Y+9, r25	; 0x09
    1c56:	aa 87       	std	Y+10, r26	; 0x0a
    1c58:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    1c5a:	68 85       	ldd	r22, Y+8	; 0x08
    1c5c:	79 85       	ldd	r23, Y+9	; 0x09
    1c5e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1c60:	9b 85       	ldd	r25, Y+11	; 0x0b
    1c62:	20 e0       	ldi	r18, 0x00	; 0
    1c64:	30 e0       	ldi	r19, 0x00	; 0
    1c66:	40 e8       	ldi	r20, 0x80	; 128
    1c68:	5f e3       	ldi	r21, 0x3F	; 63
    1c6a:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1c6e:	88 23       	and	r24, r24
    1c70:	2c f4       	brge	.+10     	; 0x1c7c <LCD_voidWriteChar+0x106>
		__ticks = 1;
    1c72:	81 e0       	ldi	r24, 0x01	; 1
    1c74:	90 e0       	ldi	r25, 0x00	; 0
    1c76:	9f 83       	std	Y+7, r25	; 0x07
    1c78:	8e 83       	std	Y+6, r24	; 0x06
    1c7a:	3f c0       	rjmp	.+126    	; 0x1cfa <LCD_voidWriteChar+0x184>
	else if (__tmp > 65535)
    1c7c:	68 85       	ldd	r22, Y+8	; 0x08
    1c7e:	79 85       	ldd	r23, Y+9	; 0x09
    1c80:	8a 85       	ldd	r24, Y+10	; 0x0a
    1c82:	9b 85       	ldd	r25, Y+11	; 0x0b
    1c84:	20 e0       	ldi	r18, 0x00	; 0
    1c86:	3f ef       	ldi	r19, 0xFF	; 255
    1c88:	4f e7       	ldi	r20, 0x7F	; 127
    1c8a:	57 e4       	ldi	r21, 0x47	; 71
    1c8c:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1c90:	18 16       	cp	r1, r24
    1c92:	4c f5       	brge	.+82     	; 0x1ce6 <LCD_voidWriteChar+0x170>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c94:	6c 85       	ldd	r22, Y+12	; 0x0c
    1c96:	7d 85       	ldd	r23, Y+13	; 0x0d
    1c98:	8e 85       	ldd	r24, Y+14	; 0x0e
    1c9a:	9f 85       	ldd	r25, Y+15	; 0x0f
    1c9c:	20 e0       	ldi	r18, 0x00	; 0
    1c9e:	30 e0       	ldi	r19, 0x00	; 0
    1ca0:	40 e2       	ldi	r20, 0x20	; 32
    1ca2:	51 e4       	ldi	r21, 0x41	; 65
    1ca4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ca8:	dc 01       	movw	r26, r24
    1caa:	cb 01       	movw	r24, r22
    1cac:	bc 01       	movw	r22, r24
    1cae:	cd 01       	movw	r24, r26
    1cb0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1cb4:	dc 01       	movw	r26, r24
    1cb6:	cb 01       	movw	r24, r22
    1cb8:	9f 83       	std	Y+7, r25	; 0x07
    1cba:	8e 83       	std	Y+6, r24	; 0x06
    1cbc:	0f c0       	rjmp	.+30     	; 0x1cdc <LCD_voidWriteChar+0x166>
    1cbe:	88 ec       	ldi	r24, 0xC8	; 200
    1cc0:	90 e0       	ldi	r25, 0x00	; 0
    1cc2:	9d 83       	std	Y+5, r25	; 0x05
    1cc4:	8c 83       	std	Y+4, r24	; 0x04
    1cc6:	8c 81       	ldd	r24, Y+4	; 0x04
    1cc8:	9d 81       	ldd	r25, Y+5	; 0x05
    1cca:	01 97       	sbiw	r24, 0x01	; 1
    1ccc:	f1 f7       	brne	.-4      	; 0x1cca <LCD_voidWriteChar+0x154>
    1cce:	9d 83       	std	Y+5, r25	; 0x05
    1cd0:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1cd2:	8e 81       	ldd	r24, Y+6	; 0x06
    1cd4:	9f 81       	ldd	r25, Y+7	; 0x07
    1cd6:	01 97       	sbiw	r24, 0x01	; 1
    1cd8:	9f 83       	std	Y+7, r25	; 0x07
    1cda:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1cdc:	8e 81       	ldd	r24, Y+6	; 0x06
    1cde:	9f 81       	ldd	r25, Y+7	; 0x07
    1ce0:	00 97       	sbiw	r24, 0x00	; 0
    1ce2:	69 f7       	brne	.-38     	; 0x1cbe <LCD_voidWriteChar+0x148>
    1ce4:	24 c0       	rjmp	.+72     	; 0x1d2e <LCD_voidWriteChar+0x1b8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ce6:	68 85       	ldd	r22, Y+8	; 0x08
    1ce8:	79 85       	ldd	r23, Y+9	; 0x09
    1cea:	8a 85       	ldd	r24, Y+10	; 0x0a
    1cec:	9b 85       	ldd	r25, Y+11	; 0x0b
    1cee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1cf2:	dc 01       	movw	r26, r24
    1cf4:	cb 01       	movw	r24, r22
    1cf6:	9f 83       	std	Y+7, r25	; 0x07
    1cf8:	8e 83       	std	Y+6, r24	; 0x06
    1cfa:	8e 81       	ldd	r24, Y+6	; 0x06
    1cfc:	9f 81       	ldd	r25, Y+7	; 0x07
    1cfe:	9b 83       	std	Y+3, r25	; 0x03
    1d00:	8a 83       	std	Y+2, r24	; 0x02
    1d02:	8a 81       	ldd	r24, Y+2	; 0x02
    1d04:	9b 81       	ldd	r25, Y+3	; 0x03
    1d06:	01 97       	sbiw	r24, 0x01	; 1
    1d08:	f1 f7       	brne	.-4      	; 0x1d06 <LCD_voidWriteChar+0x190>
    1d0a:	9b 83       	std	Y+3, r25	; 0x03
    1d0c:	8a 83       	std	Y+2, r24	; 0x02
    1d0e:	0f c0       	rjmp	.+30     	; 0x1d2e <LCD_voidWriteChar+0x1b8>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1d10:	69 89       	ldd	r22, Y+17	; 0x11
    1d12:	7a 89       	ldd	r23, Y+18	; 0x12
    1d14:	8b 89       	ldd	r24, Y+19	; 0x13
    1d16:	9c 89       	ldd	r25, Y+20	; 0x14
    1d18:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d1c:	dc 01       	movw	r26, r24
    1d1e:	cb 01       	movw	r24, r22
    1d20:	88 8b       	std	Y+16, r24	; 0x10
    1d22:	88 89       	ldd	r24, Y+16	; 0x10
    1d24:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1d26:	89 81       	ldd	r24, Y+1	; 0x01
    1d28:	8a 95       	dec	r24
    1d2a:	f1 f7       	brne	.-4      	; 0x1d28 <LCD_voidWriteChar+0x1b2>
    1d2c:	89 83       	std	Y+1, r24	; 0x01
	_delay_us(2);
	DIO_u8SetPinValue(LCD_u8_EN_PORT, LCD_u8_EN_PIN, DIO_u8_LOW);
    1d2e:	80 e0       	ldi	r24, 0x00	; 0
    1d30:	62 e0       	ldi	r22, 0x02	; 2
    1d32:	40 e0       	ldi	r20, 0x00	; 0
    1d34:	0e 94 b8 08 	call	0x1170	; 0x1170 <DIO_u8SetPinValue>
}
    1d38:	69 96       	adiw	r28, 0x19	; 25
    1d3a:	0f b6       	in	r0, 0x3f	; 63
    1d3c:	f8 94       	cli
    1d3e:	de bf       	out	0x3e, r29	; 62
    1d40:	0f be       	out	0x3f, r0	; 63
    1d42:	cd bf       	out	0x3d, r28	; 61
    1d44:	cf 91       	pop	r28
    1d46:	df 91       	pop	r29
    1d48:	08 95       	ret

00001d4a <LCD_voidWriteCmd>:
void LCD_voidWriteCmd(u8 Copy_u8Cmd) {
    1d4a:	df 93       	push	r29
    1d4c:	cf 93       	push	r28
    1d4e:	cd b7       	in	r28, 0x3d	; 61
    1d50:	de b7       	in	r29, 0x3e	; 62
    1d52:	69 97       	sbiw	r28, 0x19	; 25
    1d54:	0f b6       	in	r0, 0x3f	; 63
    1d56:	f8 94       	cli
    1d58:	de bf       	out	0x3e, r29	; 62
    1d5a:	0f be       	out	0x3f, r0	; 63
    1d5c:	cd bf       	out	0x3d, r28	; 61
    1d5e:	89 8f       	std	Y+25, r24	; 0x19
	/* RS =  0 (command byte)        */
	DIO_u8SetPinValue(LCD_u8_RS_PORT, LCD_u8_RS_PIN, DIO_u8_LOW);
    1d60:	80 e0       	ldi	r24, 0x00	; 0
    1d62:	60 e0       	ldi	r22, 0x00	; 0
    1d64:	40 e0       	ldi	r20, 0x00	; 0
    1d66:	0e 94 b8 08 	call	0x1170	; 0x1170 <DIO_u8SetPinValue>
	/* R/w = 0 (Write operation) */
	DIO_u8SetPinValue(LCD_u8_RW_PORT, LCD_u8_RW_PIN, DIO_u8_LOW);
    1d6a:	80 e0       	ldi	r24, 0x00	; 0
    1d6c:	61 e0       	ldi	r22, 0x01	; 1
    1d6e:	40 e0       	ldi	r20, 0x00	; 0
    1d70:	0e 94 b8 08 	call	0x1170	; 0x1170 <DIO_u8SetPinValue>
	/* Send Data byte to LCD    */
	DIO_u8SetPortValue(LCD_u8_DATA_PORT, Copy_u8Cmd);
    1d74:	83 e0       	ldi	r24, 0x03	; 3
    1d76:	69 8d       	ldd	r22, Y+25	; 0x19
    1d78:	0e 94 02 0b 	call	0x1604	; 0x1604 <DIO_u8SetPortValue>
	/*Enable pulse             */
	DIO_u8SetPinValue(LCD_u8_EN_PORT, LCD_u8_EN_PIN, DIO_u8_HIGH);
    1d7c:	80 e0       	ldi	r24, 0x00	; 0
    1d7e:	62 e0       	ldi	r22, 0x02	; 2
    1d80:	41 e0       	ldi	r20, 0x01	; 1
    1d82:	0e 94 b8 08 	call	0x1170	; 0x1170 <DIO_u8SetPinValue>
    1d86:	80 e0       	ldi	r24, 0x00	; 0
    1d88:	90 e0       	ldi	r25, 0x00	; 0
    1d8a:	a0 e0       	ldi	r26, 0x00	; 0
    1d8c:	b0 e4       	ldi	r27, 0x40	; 64
    1d8e:	8d 8b       	std	Y+21, r24	; 0x15
    1d90:	9e 8b       	std	Y+22, r25	; 0x16
    1d92:	af 8b       	std	Y+23, r26	; 0x17
    1d94:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1d96:	6d 89       	ldd	r22, Y+21	; 0x15
    1d98:	7e 89       	ldd	r23, Y+22	; 0x16
    1d9a:	8f 89       	ldd	r24, Y+23	; 0x17
    1d9c:	98 8d       	ldd	r25, Y+24	; 0x18
    1d9e:	2b ea       	ldi	r18, 0xAB	; 171
    1da0:	3a ea       	ldi	r19, 0xAA	; 170
    1da2:	4a e2       	ldi	r20, 0x2A	; 42
    1da4:	50 e4       	ldi	r21, 0x40	; 64
    1da6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1daa:	dc 01       	movw	r26, r24
    1dac:	cb 01       	movw	r24, r22
    1dae:	89 8b       	std	Y+17, r24	; 0x11
    1db0:	9a 8b       	std	Y+18, r25	; 0x12
    1db2:	ab 8b       	std	Y+19, r26	; 0x13
    1db4:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    1db6:	69 89       	ldd	r22, Y+17	; 0x11
    1db8:	7a 89       	ldd	r23, Y+18	; 0x12
    1dba:	8b 89       	ldd	r24, Y+19	; 0x13
    1dbc:	9c 89       	ldd	r25, Y+20	; 0x14
    1dbe:	20 e0       	ldi	r18, 0x00	; 0
    1dc0:	30 e0       	ldi	r19, 0x00	; 0
    1dc2:	40 e8       	ldi	r20, 0x80	; 128
    1dc4:	5f e3       	ldi	r21, 0x3F	; 63
    1dc6:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1dca:	88 23       	and	r24, r24
    1dcc:	1c f4       	brge	.+6      	; 0x1dd4 <LCD_voidWriteCmd+0x8a>
		__ticks = 1;
    1dce:	81 e0       	ldi	r24, 0x01	; 1
    1dd0:	88 8b       	std	Y+16, r24	; 0x10
    1dd2:	91 c0       	rjmp	.+290    	; 0x1ef6 <LCD_voidWriteCmd+0x1ac>
	else if (__tmp > 255)
    1dd4:	69 89       	ldd	r22, Y+17	; 0x11
    1dd6:	7a 89       	ldd	r23, Y+18	; 0x12
    1dd8:	8b 89       	ldd	r24, Y+19	; 0x13
    1dda:	9c 89       	ldd	r25, Y+20	; 0x14
    1ddc:	20 e0       	ldi	r18, 0x00	; 0
    1dde:	30 e0       	ldi	r19, 0x00	; 0
    1de0:	4f e7       	ldi	r20, 0x7F	; 127
    1de2:	53 e4       	ldi	r21, 0x43	; 67
    1de4:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1de8:	18 16       	cp	r1, r24
    1dea:	0c f0       	brlt	.+2      	; 0x1dee <LCD_voidWriteCmd+0xa4>
    1dec:	7b c0       	rjmp	.+246    	; 0x1ee4 <LCD_voidWriteCmd+0x19a>
	{
		_delay_ms(__us / 1000.0);
    1dee:	6d 89       	ldd	r22, Y+21	; 0x15
    1df0:	7e 89       	ldd	r23, Y+22	; 0x16
    1df2:	8f 89       	ldd	r24, Y+23	; 0x17
    1df4:	98 8d       	ldd	r25, Y+24	; 0x18
    1df6:	20 e0       	ldi	r18, 0x00	; 0
    1df8:	30 e0       	ldi	r19, 0x00	; 0
    1dfa:	4a e7       	ldi	r20, 0x7A	; 122
    1dfc:	54 e4       	ldi	r21, 0x44	; 68
    1dfe:	0e 94 11 03 	call	0x622	; 0x622 <__divsf3>
    1e02:	dc 01       	movw	r26, r24
    1e04:	cb 01       	movw	r24, r22
    1e06:	8c 87       	std	Y+12, r24	; 0x0c
    1e08:	9d 87       	std	Y+13, r25	; 0x0d
    1e0a:	ae 87       	std	Y+14, r26	; 0x0e
    1e0c:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e0e:	6c 85       	ldd	r22, Y+12	; 0x0c
    1e10:	7d 85       	ldd	r23, Y+13	; 0x0d
    1e12:	8e 85       	ldd	r24, Y+14	; 0x0e
    1e14:	9f 85       	ldd	r25, Y+15	; 0x0f
    1e16:	20 e0       	ldi	r18, 0x00	; 0
    1e18:	30 e0       	ldi	r19, 0x00	; 0
    1e1a:	4a ef       	ldi	r20, 0xFA	; 250
    1e1c:	54 e4       	ldi	r21, 0x44	; 68
    1e1e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e22:	dc 01       	movw	r26, r24
    1e24:	cb 01       	movw	r24, r22
    1e26:	88 87       	std	Y+8, r24	; 0x08
    1e28:	99 87       	std	Y+9, r25	; 0x09
    1e2a:	aa 87       	std	Y+10, r26	; 0x0a
    1e2c:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    1e2e:	68 85       	ldd	r22, Y+8	; 0x08
    1e30:	79 85       	ldd	r23, Y+9	; 0x09
    1e32:	8a 85       	ldd	r24, Y+10	; 0x0a
    1e34:	9b 85       	ldd	r25, Y+11	; 0x0b
    1e36:	20 e0       	ldi	r18, 0x00	; 0
    1e38:	30 e0       	ldi	r19, 0x00	; 0
    1e3a:	40 e8       	ldi	r20, 0x80	; 128
    1e3c:	5f e3       	ldi	r21, 0x3F	; 63
    1e3e:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    1e42:	88 23       	and	r24, r24
    1e44:	2c f4       	brge	.+10     	; 0x1e50 <LCD_voidWriteCmd+0x106>
		__ticks = 1;
    1e46:	81 e0       	ldi	r24, 0x01	; 1
    1e48:	90 e0       	ldi	r25, 0x00	; 0
    1e4a:	9f 83       	std	Y+7, r25	; 0x07
    1e4c:	8e 83       	std	Y+6, r24	; 0x06
    1e4e:	3f c0       	rjmp	.+126    	; 0x1ece <LCD_voidWriteCmd+0x184>
	else if (__tmp > 65535)
    1e50:	68 85       	ldd	r22, Y+8	; 0x08
    1e52:	79 85       	ldd	r23, Y+9	; 0x09
    1e54:	8a 85       	ldd	r24, Y+10	; 0x0a
    1e56:	9b 85       	ldd	r25, Y+11	; 0x0b
    1e58:	20 e0       	ldi	r18, 0x00	; 0
    1e5a:	3f ef       	ldi	r19, 0xFF	; 255
    1e5c:	4f e7       	ldi	r20, 0x7F	; 127
    1e5e:	57 e4       	ldi	r21, 0x47	; 71
    1e60:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    1e64:	18 16       	cp	r1, r24
    1e66:	4c f5       	brge	.+82     	; 0x1eba <LCD_voidWriteCmd+0x170>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e68:	6c 85       	ldd	r22, Y+12	; 0x0c
    1e6a:	7d 85       	ldd	r23, Y+13	; 0x0d
    1e6c:	8e 85       	ldd	r24, Y+14	; 0x0e
    1e6e:	9f 85       	ldd	r25, Y+15	; 0x0f
    1e70:	20 e0       	ldi	r18, 0x00	; 0
    1e72:	30 e0       	ldi	r19, 0x00	; 0
    1e74:	40 e2       	ldi	r20, 0x20	; 32
    1e76:	51 e4       	ldi	r21, 0x41	; 65
    1e78:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e7c:	dc 01       	movw	r26, r24
    1e7e:	cb 01       	movw	r24, r22
    1e80:	bc 01       	movw	r22, r24
    1e82:	cd 01       	movw	r24, r26
    1e84:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e88:	dc 01       	movw	r26, r24
    1e8a:	cb 01       	movw	r24, r22
    1e8c:	9f 83       	std	Y+7, r25	; 0x07
    1e8e:	8e 83       	std	Y+6, r24	; 0x06
    1e90:	0f c0       	rjmp	.+30     	; 0x1eb0 <LCD_voidWriteCmd+0x166>
    1e92:	88 ec       	ldi	r24, 0xC8	; 200
    1e94:	90 e0       	ldi	r25, 0x00	; 0
    1e96:	9d 83       	std	Y+5, r25	; 0x05
    1e98:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1e9a:	8c 81       	ldd	r24, Y+4	; 0x04
    1e9c:	9d 81       	ldd	r25, Y+5	; 0x05
    1e9e:	01 97       	sbiw	r24, 0x01	; 1
    1ea0:	f1 f7       	brne	.-4      	; 0x1e9e <LCD_voidWriteCmd+0x154>
    1ea2:	9d 83       	std	Y+5, r25	; 0x05
    1ea4:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ea6:	8e 81       	ldd	r24, Y+6	; 0x06
    1ea8:	9f 81       	ldd	r25, Y+7	; 0x07
    1eaa:	01 97       	sbiw	r24, 0x01	; 1
    1eac:	9f 83       	std	Y+7, r25	; 0x07
    1eae:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1eb0:	8e 81       	ldd	r24, Y+6	; 0x06
    1eb2:	9f 81       	ldd	r25, Y+7	; 0x07
    1eb4:	00 97       	sbiw	r24, 0x00	; 0
    1eb6:	69 f7       	brne	.-38     	; 0x1e92 <LCD_voidWriteCmd+0x148>
    1eb8:	24 c0       	rjmp	.+72     	; 0x1f02 <LCD_voidWriteCmd+0x1b8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1eba:	68 85       	ldd	r22, Y+8	; 0x08
    1ebc:	79 85       	ldd	r23, Y+9	; 0x09
    1ebe:	8a 85       	ldd	r24, Y+10	; 0x0a
    1ec0:	9b 85       	ldd	r25, Y+11	; 0x0b
    1ec2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ec6:	dc 01       	movw	r26, r24
    1ec8:	cb 01       	movw	r24, r22
    1eca:	9f 83       	std	Y+7, r25	; 0x07
    1ecc:	8e 83       	std	Y+6, r24	; 0x06
    1ece:	8e 81       	ldd	r24, Y+6	; 0x06
    1ed0:	9f 81       	ldd	r25, Y+7	; 0x07
    1ed2:	9b 83       	std	Y+3, r25	; 0x03
    1ed4:	8a 83       	std	Y+2, r24	; 0x02
    1ed6:	8a 81       	ldd	r24, Y+2	; 0x02
    1ed8:	9b 81       	ldd	r25, Y+3	; 0x03
    1eda:	01 97       	sbiw	r24, 0x01	; 1
    1edc:	f1 f7       	brne	.-4      	; 0x1eda <LCD_voidWriteCmd+0x190>
    1ede:	9b 83       	std	Y+3, r25	; 0x03
    1ee0:	8a 83       	std	Y+2, r24	; 0x02
    1ee2:	0f c0       	rjmp	.+30     	; 0x1f02 <LCD_voidWriteCmd+0x1b8>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1ee4:	69 89       	ldd	r22, Y+17	; 0x11
    1ee6:	7a 89       	ldd	r23, Y+18	; 0x12
    1ee8:	8b 89       	ldd	r24, Y+19	; 0x13
    1eea:	9c 89       	ldd	r25, Y+20	; 0x14
    1eec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ef0:	dc 01       	movw	r26, r24
    1ef2:	cb 01       	movw	r24, r22
    1ef4:	88 8b       	std	Y+16, r24	; 0x10
    1ef6:	88 89       	ldd	r24, Y+16	; 0x10
    1ef8:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1efa:	89 81       	ldd	r24, Y+1	; 0x01
    1efc:	8a 95       	dec	r24
    1efe:	f1 f7       	brne	.-4      	; 0x1efc <LCD_voidWriteCmd+0x1b2>
    1f00:	89 83       	std	Y+1, r24	; 0x01
	_delay_us(2);
	DIO_u8SetPinValue(LCD_u8_EN_PORT, LCD_u8_EN_PIN, DIO_u8_LOW);
    1f02:	80 e0       	ldi	r24, 0x00	; 0
    1f04:	62 e0       	ldi	r22, 0x02	; 2
    1f06:	40 e0       	ldi	r20, 0x00	; 0
    1f08:	0e 94 b8 08 	call	0x1170	; 0x1170 <DIO_u8SetPinValue>
}
    1f0c:	69 96       	adiw	r28, 0x19	; 25
    1f0e:	0f b6       	in	r0, 0x3f	; 63
    1f10:	f8 94       	cli
    1f12:	de bf       	out	0x3e, r29	; 62
    1f14:	0f be       	out	0x3f, r0	; 63
    1f16:	cd bf       	out	0x3d, r28	; 61
    1f18:	cf 91       	pop	r28
    1f1a:	df 91       	pop	r29
    1f1c:	08 95       	ret

00001f1e <LCD_voidWriteString>:
void LCD_voidWriteString(u8 *Copy_Pu8String) {
    1f1e:	df 93       	push	r29
    1f20:	cf 93       	push	r28
    1f22:	00 d0       	rcall	.+0      	; 0x1f24 <LCD_voidWriteString+0x6>
    1f24:	0f 92       	push	r0
    1f26:	cd b7       	in	r28, 0x3d	; 61
    1f28:	de b7       	in	r29, 0x3e	; 62
    1f2a:	9b 83       	std	Y+3, r25	; 0x03
    1f2c:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8_stringcounter = 0;
    1f2e:	19 82       	std	Y+1, r1	; 0x01
    1f30:	0e c0       	rjmp	.+28     	; 0x1f4e <LCD_voidWriteString+0x30>
	/* Send Data byte to LCD */
	while (Copy_Pu8String[Local_u8_stringcounter] != '\0') {
		LCD_voidWriteChar(Copy_Pu8String[Local_u8_stringcounter]);
    1f32:	89 81       	ldd	r24, Y+1	; 0x01
    1f34:	28 2f       	mov	r18, r24
    1f36:	30 e0       	ldi	r19, 0x00	; 0
    1f38:	8a 81       	ldd	r24, Y+2	; 0x02
    1f3a:	9b 81       	ldd	r25, Y+3	; 0x03
    1f3c:	fc 01       	movw	r30, r24
    1f3e:	e2 0f       	add	r30, r18
    1f40:	f3 1f       	adc	r31, r19
    1f42:	80 81       	ld	r24, Z
    1f44:	0e 94 bb 0d 	call	0x1b76	; 0x1b76 <LCD_voidWriteChar>
		Local_u8_stringcounter++;
    1f48:	89 81       	ldd	r24, Y+1	; 0x01
    1f4a:	8f 5f       	subi	r24, 0xFF	; 255
    1f4c:	89 83       	std	Y+1, r24	; 0x01
	DIO_u8SetPinValue(LCD_u8_EN_PORT, LCD_u8_EN_PIN, DIO_u8_LOW);
}
void LCD_voidWriteString(u8 *Copy_Pu8String) {
	u8 Local_u8_stringcounter = 0;
	/* Send Data byte to LCD */
	while (Copy_Pu8String[Local_u8_stringcounter] != '\0') {
    1f4e:	89 81       	ldd	r24, Y+1	; 0x01
    1f50:	28 2f       	mov	r18, r24
    1f52:	30 e0       	ldi	r19, 0x00	; 0
    1f54:	8a 81       	ldd	r24, Y+2	; 0x02
    1f56:	9b 81       	ldd	r25, Y+3	; 0x03
    1f58:	fc 01       	movw	r30, r24
    1f5a:	e2 0f       	add	r30, r18
    1f5c:	f3 1f       	adc	r31, r19
    1f5e:	80 81       	ld	r24, Z
    1f60:	88 23       	and	r24, r24
    1f62:	39 f7       	brne	.-50     	; 0x1f32 <LCD_voidWriteString+0x14>
		LCD_voidWriteChar(Copy_Pu8String[Local_u8_stringcounter]);
		Local_u8_stringcounter++;
	}
}
    1f64:	0f 90       	pop	r0
    1f66:	0f 90       	pop	r0
    1f68:	0f 90       	pop	r0
    1f6a:	cf 91       	pop	r28
    1f6c:	df 91       	pop	r29
    1f6e:	08 95       	ret

00001f70 <LCD_u8GoToXY>:
u8 LCD_u8GoToXY(u8 Copy_u8LineNum, u8 Copy_u8CharLocation) {
    1f70:	df 93       	push	r29
    1f72:	cf 93       	push	r28
    1f74:	00 d0       	rcall	.+0      	; 0x1f76 <LCD_u8GoToXY+0x6>
    1f76:	00 d0       	rcall	.+0      	; 0x1f78 <LCD_u8GoToXY+0x8>
    1f78:	0f 92       	push	r0
    1f7a:	cd b7       	in	r28, 0x3d	; 61
    1f7c:	de b7       	in	r29, 0x3e	; 62
    1f7e:	8a 83       	std	Y+2, r24	; 0x02
    1f80:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState = STD_TYPES_OK;
    1f82:	81 e0       	ldi	r24, 0x01	; 1
    1f84:	89 83       	std	Y+1, r24	; 0x01
	switch (Copy_u8LineNum) {
    1f86:	8a 81       	ldd	r24, Y+2	; 0x02
    1f88:	28 2f       	mov	r18, r24
    1f8a:	30 e0       	ldi	r19, 0x00	; 0
    1f8c:	3d 83       	std	Y+5, r19	; 0x05
    1f8e:	2c 83       	std	Y+4, r18	; 0x04
    1f90:	8c 81       	ldd	r24, Y+4	; 0x04
    1f92:	9d 81       	ldd	r25, Y+5	; 0x05
    1f94:	81 30       	cpi	r24, 0x01	; 1
    1f96:	91 05       	cpc	r25, r1
    1f98:	31 f0       	breq	.+12     	; 0x1fa6 <LCD_u8GoToXY+0x36>
    1f9a:	2c 81       	ldd	r18, Y+4	; 0x04
    1f9c:	3d 81       	ldd	r19, Y+5	; 0x05
    1f9e:	22 30       	cpi	r18, 0x02	; 2
    1fa0:	31 05       	cpc	r19, r1
    1fa2:	31 f0       	breq	.+12     	; 0x1fb0 <LCD_u8GoToXY+0x40>
    1fa4:	0a c0       	rjmp	.+20     	; 0x1fba <LCD_u8GoToXY+0x4a>
	case LCD_u8_LINE_1:
		LCD_voidWriteCmd(0x80 + Copy_u8CharLocation);
    1fa6:	8b 81       	ldd	r24, Y+3	; 0x03
    1fa8:	80 58       	subi	r24, 0x80	; 128
    1faa:	0e 94 a5 0e 	call	0x1d4a	; 0x1d4a <LCD_voidWriteCmd>
    1fae:	06 c0       	rjmp	.+12     	; 0x1fbc <LCD_u8GoToXY+0x4c>
		break;
	case LCD_u8_LINE_2:
		LCD_voidWriteCmd(0xC0 + Copy_u8CharLocation);
    1fb0:	8b 81       	ldd	r24, Y+3	; 0x03
    1fb2:	80 54       	subi	r24, 0x40	; 64
    1fb4:	0e 94 a5 0e 	call	0x1d4a	; 0x1d4a <LCD_voidWriteCmd>
    1fb8:	01 c0       	rjmp	.+2      	; 0x1fbc <LCD_u8GoToXY+0x4c>
		break;
	default:
		Local_u8ErrorState = STD_TYPES_NOK;
    1fba:	19 82       	std	Y+1, r1	; 0x01
	}

	return Local_u8ErrorState;
    1fbc:	89 81       	ldd	r24, Y+1	; 0x01
}
    1fbe:	0f 90       	pop	r0
    1fc0:	0f 90       	pop	r0
    1fc2:	0f 90       	pop	r0
    1fc4:	0f 90       	pop	r0
    1fc6:	0f 90       	pop	r0
    1fc8:	cf 91       	pop	r28
    1fca:	df 91       	pop	r29
    1fcc:	08 95       	ret

00001fce <LCD_voidWriteNumber>:

void LCD_voidWriteNumber(u16 Copy_u16Number) {
    1fce:	df 93       	push	r29
    1fd0:	cf 93       	push	r28
    1fd2:	cd b7       	in	r28, 0x3d	; 61
    1fd4:	de b7       	in	r29, 0x3e	; 62
    1fd6:	27 97       	sbiw	r28, 0x07	; 7
    1fd8:	0f b6       	in	r0, 0x3f	; 63
    1fda:	f8 94       	cli
    1fdc:	de bf       	out	0x3e, r29	; 62
    1fde:	0f be       	out	0x3f, r0	; 63
    1fe0:	cd bf       	out	0x3d, r28	; 61
    1fe2:	9f 83       	std	Y+7, r25	; 0x07
    1fe4:	8e 83       	std	Y+6, r24	; 0x06
	u16 Local_u16_Remaining;
	u16 Local_u16_Reverse = 1;
    1fe6:	81 e0       	ldi	r24, 0x01	; 1
    1fe8:	90 e0       	ldi	r25, 0x00	; 0
    1fea:	9b 83       	std	Y+3, r25	; 0x03
    1fec:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8_FinalReverse;

	if (Copy_u16Number == 0) {
    1fee:	8e 81       	ldd	r24, Y+6	; 0x06
    1ff0:	9f 81       	ldd	r25, Y+7	; 0x07
    1ff2:	00 97       	sbiw	r24, 0x00	; 0
    1ff4:	51 f5       	brne	.+84     	; 0x204a <LCD_voidWriteNumber+0x7c>
		LCD_voidWriteChar(Copy_u16Number + '0');
    1ff6:	8e 81       	ldd	r24, Y+6	; 0x06
    1ff8:	80 5d       	subi	r24, 0xD0	; 208
    1ffa:	0e 94 bb 0d 	call	0x1b76	; 0x1b76 <LCD_voidWriteChar>
    1ffe:	45 c0       	rjmp	.+138    	; 0x208a <LCD_voidWriteNumber+0xbc>
	} else {
		while (Copy_u16Number != 0) {
			Local_u16_Remaining = Copy_u16Number % 10;
    2000:	8e 81       	ldd	r24, Y+6	; 0x06
    2002:	9f 81       	ldd	r25, Y+7	; 0x07
    2004:	2a e0       	ldi	r18, 0x0A	; 10
    2006:	30 e0       	ldi	r19, 0x00	; 0
    2008:	b9 01       	movw	r22, r18
    200a:	0e 94 73 19 	call	0x32e6	; 0x32e6 <__udivmodhi4>
    200e:	9d 83       	std	Y+5, r25	; 0x05
    2010:	8c 83       	std	Y+4, r24	; 0x04
			Local_u16_Reverse = Local_u16_Reverse * 10 + Local_u16_Remaining;
    2012:	8a 81       	ldd	r24, Y+2	; 0x02
    2014:	9b 81       	ldd	r25, Y+3	; 0x03
    2016:	9c 01       	movw	r18, r24
    2018:	22 0f       	add	r18, r18
    201a:	33 1f       	adc	r19, r19
    201c:	c9 01       	movw	r24, r18
    201e:	88 0f       	add	r24, r24
    2020:	99 1f       	adc	r25, r25
    2022:	88 0f       	add	r24, r24
    2024:	99 1f       	adc	r25, r25
    2026:	28 0f       	add	r18, r24
    2028:	39 1f       	adc	r19, r25
    202a:	8c 81       	ldd	r24, Y+4	; 0x04
    202c:	9d 81       	ldd	r25, Y+5	; 0x05
    202e:	82 0f       	add	r24, r18
    2030:	93 1f       	adc	r25, r19
    2032:	9b 83       	std	Y+3, r25	; 0x03
    2034:	8a 83       	std	Y+2, r24	; 0x02
			Copy_u16Number /= 10;
    2036:	8e 81       	ldd	r24, Y+6	; 0x06
    2038:	9f 81       	ldd	r25, Y+7	; 0x07
    203a:	2a e0       	ldi	r18, 0x0A	; 10
    203c:	30 e0       	ldi	r19, 0x00	; 0
    203e:	b9 01       	movw	r22, r18
    2040:	0e 94 73 19 	call	0x32e6	; 0x32e6 <__udivmodhi4>
    2044:	cb 01       	movw	r24, r22
    2046:	9f 83       	std	Y+7, r25	; 0x07
    2048:	8e 83       	std	Y+6, r24	; 0x06
	u8 Local_u8_FinalReverse;

	if (Copy_u16Number == 0) {
		LCD_voidWriteChar(Copy_u16Number + '0');
	} else {
		while (Copy_u16Number != 0) {
    204a:	8e 81       	ldd	r24, Y+6	; 0x06
    204c:	9f 81       	ldd	r25, Y+7	; 0x07
    204e:	00 97       	sbiw	r24, 0x00	; 0
    2050:	b9 f6       	brne	.-82     	; 0x2000 <LCD_voidWriteNumber+0x32>
    2052:	16 c0       	rjmp	.+44     	; 0x2080 <LCD_voidWriteNumber+0xb2>
			Local_u16_Remaining = Copy_u16Number % 10;
			Local_u16_Reverse = Local_u16_Reverse * 10 + Local_u16_Remaining;
			Copy_u16Number /= 10;
		}
		while (Local_u16_Reverse != 1) {
			Local_u8_FinalReverse = Local_u16_Reverse % 10;
    2054:	8a 81       	ldd	r24, Y+2	; 0x02
    2056:	9b 81       	ldd	r25, Y+3	; 0x03
    2058:	2a e0       	ldi	r18, 0x0A	; 10
    205a:	30 e0       	ldi	r19, 0x00	; 0
    205c:	b9 01       	movw	r22, r18
    205e:	0e 94 73 19 	call	0x32e6	; 0x32e6 <__udivmodhi4>
    2062:	89 83       	std	Y+1, r24	; 0x01
			LCD_voidWriteChar(Local_u8_FinalReverse + '0');
    2064:	89 81       	ldd	r24, Y+1	; 0x01
    2066:	80 5d       	subi	r24, 0xD0	; 208
    2068:	0e 94 bb 0d 	call	0x1b76	; 0x1b76 <LCD_voidWriteChar>
			Local_u16_Reverse /= 10;
    206c:	8a 81       	ldd	r24, Y+2	; 0x02
    206e:	9b 81       	ldd	r25, Y+3	; 0x03
    2070:	2a e0       	ldi	r18, 0x0A	; 10
    2072:	30 e0       	ldi	r19, 0x00	; 0
    2074:	b9 01       	movw	r22, r18
    2076:	0e 94 73 19 	call	0x32e6	; 0x32e6 <__udivmodhi4>
    207a:	cb 01       	movw	r24, r22
    207c:	9b 83       	std	Y+3, r25	; 0x03
    207e:	8a 83       	std	Y+2, r24	; 0x02
		while (Copy_u16Number != 0) {
			Local_u16_Remaining = Copy_u16Number % 10;
			Local_u16_Reverse = Local_u16_Reverse * 10 + Local_u16_Remaining;
			Copy_u16Number /= 10;
		}
		while (Local_u16_Reverse != 1) {
    2080:	8a 81       	ldd	r24, Y+2	; 0x02
    2082:	9b 81       	ldd	r25, Y+3	; 0x03
    2084:	81 30       	cpi	r24, 0x01	; 1
    2086:	91 05       	cpc	r25, r1
    2088:	29 f7       	brne	.-54     	; 0x2054 <LCD_voidWriteNumber+0x86>
			Local_u8_FinalReverse = Local_u16_Reverse % 10;
			LCD_voidWriteChar(Local_u8_FinalReverse + '0');
			Local_u16_Reverse /= 10;
		}
	}
}
    208a:	27 96       	adiw	r28, 0x07	; 7
    208c:	0f b6       	in	r0, 0x3f	; 63
    208e:	f8 94       	cli
    2090:	de bf       	out	0x3e, r29	; 62
    2092:	0f be       	out	0x3f, r0	; 63
    2094:	cd bf       	out	0x3d, r28	; 61
    2096:	cf 91       	pop	r28
    2098:	df 91       	pop	r29
    209a:	08 95       	ret

0000209c <LCD_voidWriteSpecialChar>:
void LCD_voidWriteSpecialChar(u8* Copy_Au8Pattern, u8 Copy_u8PatternNumber,
		u8 Copy_u8XPos, u8 Copy_u8YPos) {
    209c:	df 93       	push	r29
    209e:	cf 93       	push	r28
    20a0:	cd b7       	in	r28, 0x3d	; 61
    20a2:	de b7       	in	r29, 0x3e	; 62
    20a4:	27 97       	sbiw	r28, 0x07	; 7
    20a6:	0f b6       	in	r0, 0x3f	; 63
    20a8:	f8 94       	cli
    20aa:	de bf       	out	0x3e, r29	; 62
    20ac:	0f be       	out	0x3f, r0	; 63
    20ae:	cd bf       	out	0x3d, r28	; 61
    20b0:	9c 83       	std	Y+4, r25	; 0x04
    20b2:	8b 83       	std	Y+3, r24	; 0x03
    20b4:	6d 83       	std	Y+5, r22	; 0x05
    20b6:	4e 83       	std	Y+6, r20	; 0x06
    20b8:	2f 83       	std	Y+7, r18	; 0x07
	u8 Local_u8CGRAMAddress = 0, Local_u8Counter;
    20ba:	1a 82       	std	Y+2, r1	; 0x02
	/*Calculate CGRAM Address*/
	Local_u8CGRAMAddress = Copy_u8PatternNumber * 8;
    20bc:	8d 81       	ldd	r24, Y+5	; 0x05
    20be:	88 2f       	mov	r24, r24
    20c0:	90 e0       	ldi	r25, 0x00	; 0
    20c2:	88 0f       	add	r24, r24
    20c4:	99 1f       	adc	r25, r25
    20c6:	88 0f       	add	r24, r24
    20c8:	99 1f       	adc	r25, r25
    20ca:	88 0f       	add	r24, r24
    20cc:	99 1f       	adc	r25, r25
    20ce:	8a 83       	std	Y+2, r24	; 0x02
	/* Send CG Ram address command to LCD, with setting bit 6 , and clearing bit 7*/
	LCD_voidWriteCmd(Local_u8CGRAMAddress + 64);
    20d0:	8a 81       	ldd	r24, Y+2	; 0x02
    20d2:	80 5c       	subi	r24, 0xC0	; 192
    20d4:	0e 94 a5 0e 	call	0x1d4a	; 0x1d4a <LCD_voidWriteCmd>
	/*Write the pattern into CG Ram*/
	for (Local_u8Counter = 0; Local_u8Counter < 8; Local_u8Counter++)
    20d8:	19 82       	std	Y+1, r1	; 0x01
    20da:	0e c0       	rjmp	.+28     	; 0x20f8 <LCD_voidWriteSpecialChar+0x5c>
		LCD_voidWriteChar(Copy_Au8Pattern[Local_u8Counter]);
    20dc:	89 81       	ldd	r24, Y+1	; 0x01
    20de:	28 2f       	mov	r18, r24
    20e0:	30 e0       	ldi	r19, 0x00	; 0
    20e2:	8b 81       	ldd	r24, Y+3	; 0x03
    20e4:	9c 81       	ldd	r25, Y+4	; 0x04
    20e6:	fc 01       	movw	r30, r24
    20e8:	e2 0f       	add	r30, r18
    20ea:	f3 1f       	adc	r31, r19
    20ec:	80 81       	ld	r24, Z
    20ee:	0e 94 bb 0d 	call	0x1b76	; 0x1b76 <LCD_voidWriteChar>
	/*Calculate CGRAM Address*/
	Local_u8CGRAMAddress = Copy_u8PatternNumber * 8;
	/* Send CG Ram address command to LCD, with setting bit 6 , and clearing bit 7*/
	LCD_voidWriteCmd(Local_u8CGRAMAddress + 64);
	/*Write the pattern into CG Ram*/
	for (Local_u8Counter = 0; Local_u8Counter < 8; Local_u8Counter++)
    20f2:	89 81       	ldd	r24, Y+1	; 0x01
    20f4:	8f 5f       	subi	r24, 0xFF	; 255
    20f6:	89 83       	std	Y+1, r24	; 0x01
    20f8:	89 81       	ldd	r24, Y+1	; 0x01
    20fa:	88 30       	cpi	r24, 0x08	; 8
    20fc:	78 f3       	brcs	.-34     	; 0x20dc <LCD_voidWriteSpecialChar+0x40>
		LCD_voidWriteChar(Copy_Au8Pattern[Local_u8Counter]);
	/*Going Back to DD Ram to display Pattern*/
	LCD_u8GoToXY(Copy_u8XPos, Copy_u8YPos);
    20fe:	8e 81       	ldd	r24, Y+6	; 0x06
    2100:	6f 81       	ldd	r22, Y+7	; 0x07
    2102:	0e 94 b8 0f 	call	0x1f70	; 0x1f70 <LCD_u8GoToXY>
	/*Display Pattern written in CG Ram*/
	LCD_voidWriteChar(Copy_u8PatternNumber);
    2106:	8d 81       	ldd	r24, Y+5	; 0x05
    2108:	0e 94 bb 0d 	call	0x1b76	; 0x1b76 <LCD_voidWriteChar>
}
    210c:	27 96       	adiw	r28, 0x07	; 7
    210e:	0f b6       	in	r0, 0x3f	; 63
    2110:	f8 94       	cli
    2112:	de bf       	out	0x3e, r29	; 62
    2114:	0f be       	out	0x3f, r0	; 63
    2116:	cd bf       	out	0x3d, r28	; 61
    2118:	cf 91       	pop	r28
    211a:	df 91       	pop	r29
    211c:	08 95       	ret

0000211e <main>:
#include "BIT_MATH.h"
#include "DIO_interface.h"
#include "LCD_interface.h"
#include<avr/delay.h>

int main() {
    211e:	0f 93       	push	r16
    2120:	1f 93       	push	r17
    2122:	df 93       	push	r29
    2124:	cf 93       	push	r28
    2126:	cd b7       	in	r28, 0x3d	; 61
    2128:	de b7       	in	r29, 0x3e	; 62
    212a:	cd 50       	subi	r28, 0x0D	; 13
    212c:	d1 40       	sbci	r29, 0x01	; 1
    212e:	0f b6       	in	r0, 0x3f	; 63
    2130:	f8 94       	cli
    2132:	de bf       	out	0x3e, r29	; 62
    2134:	0f be       	out	0x3f, r0	; 63
    2136:	cd bf       	out	0x3d, r28	; 61

	DIO_u8Init();
    2138:	0e 94 47 06 	call	0xc8e	; 0xc8e <DIO_u8Init>
	LCD_voidInit8Bit();
    213c:	0e 94 a6 0b 	call	0x174c	; 0x174c <LCD_voidInit8Bit>
	u8 Local_u8Frame=1;
    2140:	fe 01       	movw	r30, r28
    2142:	ec 59       	subi	r30, 0x9C	; 156
    2144:	ff 4f       	sbci	r31, 0xFF	; 255
    2146:	81 e0       	ldi	r24, 0x01	; 1
    2148:	80 83       	st	Z, r24
	u8 Local_u8FrameNum=0;
    214a:	fe 01       	movw	r30, r28
    214c:	ed 59       	subi	r30, 0x9D	; 157
    214e:	ff 4f       	sbci	r31, 0xFF	; 255
    2150:	10 82       	st	Z, r1

	u8 Arr1[8] = { 0b11000, 0b01000, 0b11000, 0b10000, 0b10000, 0b11000,
			0b10100, 0b10000 };
    2152:	ce 01       	movw	r24, r28
    2154:	8b 59       	subi	r24, 0x9B	; 155
    2156:	9f 4f       	sbci	r25, 0xFF	; 255
    2158:	c3 53       	subi	r28, 0x33	; 51
    215a:	df 4f       	sbci	r29, 0xFF	; 255
    215c:	99 83       	std	Y+1, r25	; 0x01
    215e:	88 83       	st	Y, r24
    2160:	cd 5c       	subi	r28, 0xCD	; 205
    2162:	d0 40       	sbci	r29, 0x00	; 0
    2164:	81 e0       	ldi	r24, 0x01	; 1
    2166:	91 e0       	ldi	r25, 0x01	; 1
    2168:	c1 53       	subi	r28, 0x31	; 49
    216a:	df 4f       	sbci	r29, 0xFF	; 255
    216c:	99 83       	std	Y+1, r25	; 0x01
    216e:	88 83       	st	Y, r24
    2170:	cf 5c       	subi	r28, 0xCF	; 207
    2172:	d0 40       	sbci	r29, 0x00	; 0
    2174:	98 e0       	ldi	r25, 0x08	; 8
    2176:	cf 52       	subi	r28, 0x2F	; 47
    2178:	df 4f       	sbci	r29, 0xFF	; 255
    217a:	98 83       	st	Y, r25
    217c:	c1 5d       	subi	r28, 0xD1	; 209
    217e:	d0 40       	sbci	r29, 0x00	; 0
    2180:	c1 53       	subi	r28, 0x31	; 49
    2182:	df 4f       	sbci	r29, 0xFF	; 255
    2184:	e8 81       	ld	r30, Y
    2186:	f9 81       	ldd	r31, Y+1	; 0x01
    2188:	cf 5c       	subi	r28, 0xCF	; 207
    218a:	d0 40       	sbci	r29, 0x00	; 0
    218c:	00 80       	ld	r0, Z
    218e:	c1 53       	subi	r28, 0x31	; 49
    2190:	df 4f       	sbci	r29, 0xFF	; 255
    2192:	88 81       	ld	r24, Y
    2194:	99 81       	ldd	r25, Y+1	; 0x01
    2196:	cf 5c       	subi	r28, 0xCF	; 207
    2198:	d0 40       	sbci	r29, 0x00	; 0
    219a:	01 96       	adiw	r24, 0x01	; 1
    219c:	c1 53       	subi	r28, 0x31	; 49
    219e:	df 4f       	sbci	r29, 0xFF	; 255
    21a0:	99 83       	std	Y+1, r25	; 0x01
    21a2:	88 83       	st	Y, r24
    21a4:	cf 5c       	subi	r28, 0xCF	; 207
    21a6:	d0 40       	sbci	r29, 0x00	; 0
    21a8:	c3 53       	subi	r28, 0x33	; 51
    21aa:	df 4f       	sbci	r29, 0xFF	; 255
    21ac:	e8 81       	ld	r30, Y
    21ae:	f9 81       	ldd	r31, Y+1	; 0x01
    21b0:	cd 5c       	subi	r28, 0xCD	; 205
    21b2:	d0 40       	sbci	r29, 0x00	; 0
    21b4:	00 82       	st	Z, r0
    21b6:	c3 53       	subi	r28, 0x33	; 51
    21b8:	df 4f       	sbci	r29, 0xFF	; 255
    21ba:	88 81       	ld	r24, Y
    21bc:	99 81       	ldd	r25, Y+1	; 0x01
    21be:	cd 5c       	subi	r28, 0xCD	; 205
    21c0:	d0 40       	sbci	r29, 0x00	; 0
    21c2:	01 96       	adiw	r24, 0x01	; 1
    21c4:	c3 53       	subi	r28, 0x33	; 51
    21c6:	df 4f       	sbci	r29, 0xFF	; 255
    21c8:	99 83       	std	Y+1, r25	; 0x01
    21ca:	88 83       	st	Y, r24
    21cc:	cd 5c       	subi	r28, 0xCD	; 205
    21ce:	d0 40       	sbci	r29, 0x00	; 0
    21d0:	cf 52       	subi	r28, 0x2F	; 47
    21d2:	df 4f       	sbci	r29, 0xFF	; 255
    21d4:	98 81       	ld	r25, Y
    21d6:	c1 5d       	subi	r28, 0xD1	; 209
    21d8:	d0 40       	sbci	r29, 0x00	; 0
    21da:	91 50       	subi	r25, 0x01	; 1
    21dc:	cf 52       	subi	r28, 0x2F	; 47
    21de:	df 4f       	sbci	r29, 0xFF	; 255
    21e0:	98 83       	st	Y, r25
    21e2:	c1 5d       	subi	r28, 0xD1	; 209
    21e4:	d0 40       	sbci	r29, 0x00	; 0
    21e6:	cf 52       	subi	r28, 0x2F	; 47
    21e8:	df 4f       	sbci	r29, 0xFF	; 255
    21ea:	e8 81       	ld	r30, Y
    21ec:	c1 5d       	subi	r28, 0xD1	; 209
    21ee:	d0 40       	sbci	r29, 0x00	; 0
    21f0:	ee 23       	and	r30, r30
    21f2:	31 f6       	brne	.-116    	; 0x2180 <main+0x62>
	u8 Arr2[8] = { 0b00011, 0b00010, 0b00011, 0b01001, 0b00101, 0b00011,
			0b00001, 0b00001 };
    21f4:	ce 01       	movw	r24, r28
    21f6:	83 59       	subi	r24, 0x93	; 147
    21f8:	9f 4f       	sbci	r25, 0xFF	; 255
    21fa:	ce 52       	subi	r28, 0x2E	; 46
    21fc:	df 4f       	sbci	r29, 0xFF	; 255
    21fe:	99 83       	std	Y+1, r25	; 0x01
    2200:	88 83       	st	Y, r24
    2202:	c2 5d       	subi	r28, 0xD2	; 210
    2204:	d0 40       	sbci	r29, 0x00	; 0
    2206:	89 ef       	ldi	r24, 0xF9	; 249
    2208:	90 e0       	ldi	r25, 0x00	; 0
    220a:	cc 52       	subi	r28, 0x2C	; 44
    220c:	df 4f       	sbci	r29, 0xFF	; 255
    220e:	99 83       	std	Y+1, r25	; 0x01
    2210:	88 83       	st	Y, r24
    2212:	c4 5d       	subi	r28, 0xD4	; 212
    2214:	d0 40       	sbci	r29, 0x00	; 0
    2216:	98 e0       	ldi	r25, 0x08	; 8
    2218:	ca 52       	subi	r28, 0x2A	; 42
    221a:	df 4f       	sbci	r29, 0xFF	; 255
    221c:	98 83       	st	Y, r25
    221e:	c6 5d       	subi	r28, 0xD6	; 214
    2220:	d0 40       	sbci	r29, 0x00	; 0
    2222:	cc 52       	subi	r28, 0x2C	; 44
    2224:	df 4f       	sbci	r29, 0xFF	; 255
    2226:	e8 81       	ld	r30, Y
    2228:	f9 81       	ldd	r31, Y+1	; 0x01
    222a:	c4 5d       	subi	r28, 0xD4	; 212
    222c:	d0 40       	sbci	r29, 0x00	; 0
    222e:	00 80       	ld	r0, Z
    2230:	cc 52       	subi	r28, 0x2C	; 44
    2232:	df 4f       	sbci	r29, 0xFF	; 255
    2234:	88 81       	ld	r24, Y
    2236:	99 81       	ldd	r25, Y+1	; 0x01
    2238:	c4 5d       	subi	r28, 0xD4	; 212
    223a:	d0 40       	sbci	r29, 0x00	; 0
    223c:	01 96       	adiw	r24, 0x01	; 1
    223e:	cc 52       	subi	r28, 0x2C	; 44
    2240:	df 4f       	sbci	r29, 0xFF	; 255
    2242:	99 83       	std	Y+1, r25	; 0x01
    2244:	88 83       	st	Y, r24
    2246:	c4 5d       	subi	r28, 0xD4	; 212
    2248:	d0 40       	sbci	r29, 0x00	; 0
    224a:	ce 52       	subi	r28, 0x2E	; 46
    224c:	df 4f       	sbci	r29, 0xFF	; 255
    224e:	e8 81       	ld	r30, Y
    2250:	f9 81       	ldd	r31, Y+1	; 0x01
    2252:	c2 5d       	subi	r28, 0xD2	; 210
    2254:	d0 40       	sbci	r29, 0x00	; 0
    2256:	00 82       	st	Z, r0
    2258:	ce 52       	subi	r28, 0x2E	; 46
    225a:	df 4f       	sbci	r29, 0xFF	; 255
    225c:	88 81       	ld	r24, Y
    225e:	99 81       	ldd	r25, Y+1	; 0x01
    2260:	c2 5d       	subi	r28, 0xD2	; 210
    2262:	d0 40       	sbci	r29, 0x00	; 0
    2264:	01 96       	adiw	r24, 0x01	; 1
    2266:	ce 52       	subi	r28, 0x2E	; 46
    2268:	df 4f       	sbci	r29, 0xFF	; 255
    226a:	99 83       	std	Y+1, r25	; 0x01
    226c:	88 83       	st	Y, r24
    226e:	c2 5d       	subi	r28, 0xD2	; 210
    2270:	d0 40       	sbci	r29, 0x00	; 0
    2272:	ca 52       	subi	r28, 0x2A	; 42
    2274:	df 4f       	sbci	r29, 0xFF	; 255
    2276:	98 81       	ld	r25, Y
    2278:	c6 5d       	subi	r28, 0xD6	; 214
    227a:	d0 40       	sbci	r29, 0x00	; 0
    227c:	91 50       	subi	r25, 0x01	; 1
    227e:	ca 52       	subi	r28, 0x2A	; 42
    2280:	df 4f       	sbci	r29, 0xFF	; 255
    2282:	98 83       	st	Y, r25
    2284:	c6 5d       	subi	r28, 0xD6	; 214
    2286:	d0 40       	sbci	r29, 0x00	; 0
    2288:	ca 52       	subi	r28, 0x2A	; 42
    228a:	df 4f       	sbci	r29, 0xFF	; 255
    228c:	e8 81       	ld	r30, Y
    228e:	c6 5d       	subi	r28, 0xD6	; 214
    2290:	d0 40       	sbci	r29, 0x00	; 0
    2292:	ee 23       	and	r30, r30
    2294:	31 f6       	brne	.-116    	; 0x2222 <main+0x104>
	u8 Arr3[8] = { 0b00011, 0b00010, 0b00011, 0b00001, 0b00001, 0b01111,
			0b00001, 0b00001 };
    2296:	ce 01       	movw	r24, r28
    2298:	8b 58       	subi	r24, 0x8B	; 139
    229a:	9f 4f       	sbci	r25, 0xFF	; 255
    229c:	c9 52       	subi	r28, 0x29	; 41
    229e:	df 4f       	sbci	r29, 0xFF	; 255
    22a0:	99 83       	std	Y+1, r25	; 0x01
    22a2:	88 83       	st	Y, r24
    22a4:	c7 5d       	subi	r28, 0xD7	; 215
    22a6:	d0 40       	sbci	r29, 0x00	; 0
    22a8:	81 ef       	ldi	r24, 0xF1	; 241
    22aa:	90 e0       	ldi	r25, 0x00	; 0
    22ac:	c7 52       	subi	r28, 0x27	; 39
    22ae:	df 4f       	sbci	r29, 0xFF	; 255
    22b0:	99 83       	std	Y+1, r25	; 0x01
    22b2:	88 83       	st	Y, r24
    22b4:	c9 5d       	subi	r28, 0xD9	; 217
    22b6:	d0 40       	sbci	r29, 0x00	; 0
    22b8:	98 e0       	ldi	r25, 0x08	; 8
    22ba:	c5 52       	subi	r28, 0x25	; 37
    22bc:	df 4f       	sbci	r29, 0xFF	; 255
    22be:	98 83       	st	Y, r25
    22c0:	cb 5d       	subi	r28, 0xDB	; 219
    22c2:	d0 40       	sbci	r29, 0x00	; 0
    22c4:	c7 52       	subi	r28, 0x27	; 39
    22c6:	df 4f       	sbci	r29, 0xFF	; 255
    22c8:	e8 81       	ld	r30, Y
    22ca:	f9 81       	ldd	r31, Y+1	; 0x01
    22cc:	c9 5d       	subi	r28, 0xD9	; 217
    22ce:	d0 40       	sbci	r29, 0x00	; 0
    22d0:	00 80       	ld	r0, Z
    22d2:	c7 52       	subi	r28, 0x27	; 39
    22d4:	df 4f       	sbci	r29, 0xFF	; 255
    22d6:	88 81       	ld	r24, Y
    22d8:	99 81       	ldd	r25, Y+1	; 0x01
    22da:	c9 5d       	subi	r28, 0xD9	; 217
    22dc:	d0 40       	sbci	r29, 0x00	; 0
    22de:	01 96       	adiw	r24, 0x01	; 1
    22e0:	c7 52       	subi	r28, 0x27	; 39
    22e2:	df 4f       	sbci	r29, 0xFF	; 255
    22e4:	99 83       	std	Y+1, r25	; 0x01
    22e6:	88 83       	st	Y, r24
    22e8:	c9 5d       	subi	r28, 0xD9	; 217
    22ea:	d0 40       	sbci	r29, 0x00	; 0
    22ec:	c9 52       	subi	r28, 0x29	; 41
    22ee:	df 4f       	sbci	r29, 0xFF	; 255
    22f0:	e8 81       	ld	r30, Y
    22f2:	f9 81       	ldd	r31, Y+1	; 0x01
    22f4:	c7 5d       	subi	r28, 0xD7	; 215
    22f6:	d0 40       	sbci	r29, 0x00	; 0
    22f8:	00 82       	st	Z, r0
    22fa:	c9 52       	subi	r28, 0x29	; 41
    22fc:	df 4f       	sbci	r29, 0xFF	; 255
    22fe:	88 81       	ld	r24, Y
    2300:	99 81       	ldd	r25, Y+1	; 0x01
    2302:	c7 5d       	subi	r28, 0xD7	; 215
    2304:	d0 40       	sbci	r29, 0x00	; 0
    2306:	01 96       	adiw	r24, 0x01	; 1
    2308:	c9 52       	subi	r28, 0x29	; 41
    230a:	df 4f       	sbci	r29, 0xFF	; 255
    230c:	99 83       	std	Y+1, r25	; 0x01
    230e:	88 83       	st	Y, r24
    2310:	c7 5d       	subi	r28, 0xD7	; 215
    2312:	d0 40       	sbci	r29, 0x00	; 0
    2314:	c5 52       	subi	r28, 0x25	; 37
    2316:	df 4f       	sbci	r29, 0xFF	; 255
    2318:	98 81       	ld	r25, Y
    231a:	cb 5d       	subi	r28, 0xDB	; 219
    231c:	d0 40       	sbci	r29, 0x00	; 0
    231e:	91 50       	subi	r25, 0x01	; 1
    2320:	c5 52       	subi	r28, 0x25	; 37
    2322:	df 4f       	sbci	r29, 0xFF	; 255
    2324:	98 83       	st	Y, r25
    2326:	cb 5d       	subi	r28, 0xDB	; 219
    2328:	d0 40       	sbci	r29, 0x00	; 0
    232a:	c5 52       	subi	r28, 0x25	; 37
    232c:	df 4f       	sbci	r29, 0xFF	; 255
    232e:	e8 81       	ld	r30, Y
    2330:	cb 5d       	subi	r28, 0xDB	; 219
    2332:	d0 40       	sbci	r29, 0x00	; 0
    2334:	ee 23       	and	r30, r30
    2336:	31 f6       	brne	.-116    	; 0x22c4 <main+0x1a6>
	u8 Arr4[8] = { 0b00001, 0b00001, 0b00001, 0b00110, 0b00000, 0b00000,
			0b00000, 0b00000 };
    2338:	ce 01       	movw	r24, r28
    233a:	83 58       	subi	r24, 0x83	; 131
    233c:	9f 4f       	sbci	r25, 0xFF	; 255
    233e:	c4 52       	subi	r28, 0x24	; 36
    2340:	df 4f       	sbci	r29, 0xFF	; 255
    2342:	99 83       	std	Y+1, r25	; 0x01
    2344:	88 83       	st	Y, r24
    2346:	cc 5d       	subi	r28, 0xDC	; 220
    2348:	d0 40       	sbci	r29, 0x00	; 0
    234a:	89 ee       	ldi	r24, 0xE9	; 233
    234c:	90 e0       	ldi	r25, 0x00	; 0
    234e:	c2 52       	subi	r28, 0x22	; 34
    2350:	df 4f       	sbci	r29, 0xFF	; 255
    2352:	99 83       	std	Y+1, r25	; 0x01
    2354:	88 83       	st	Y, r24
    2356:	ce 5d       	subi	r28, 0xDE	; 222
    2358:	d0 40       	sbci	r29, 0x00	; 0
    235a:	98 e0       	ldi	r25, 0x08	; 8
    235c:	c0 52       	subi	r28, 0x20	; 32
    235e:	df 4f       	sbci	r29, 0xFF	; 255
    2360:	98 83       	st	Y, r25
    2362:	c0 5e       	subi	r28, 0xE0	; 224
    2364:	d0 40       	sbci	r29, 0x00	; 0
    2366:	c2 52       	subi	r28, 0x22	; 34
    2368:	df 4f       	sbci	r29, 0xFF	; 255
    236a:	e8 81       	ld	r30, Y
    236c:	f9 81       	ldd	r31, Y+1	; 0x01
    236e:	ce 5d       	subi	r28, 0xDE	; 222
    2370:	d0 40       	sbci	r29, 0x00	; 0
    2372:	00 80       	ld	r0, Z
    2374:	c2 52       	subi	r28, 0x22	; 34
    2376:	df 4f       	sbci	r29, 0xFF	; 255
    2378:	88 81       	ld	r24, Y
    237a:	99 81       	ldd	r25, Y+1	; 0x01
    237c:	ce 5d       	subi	r28, 0xDE	; 222
    237e:	d0 40       	sbci	r29, 0x00	; 0
    2380:	01 96       	adiw	r24, 0x01	; 1
    2382:	c2 52       	subi	r28, 0x22	; 34
    2384:	df 4f       	sbci	r29, 0xFF	; 255
    2386:	99 83       	std	Y+1, r25	; 0x01
    2388:	88 83       	st	Y, r24
    238a:	ce 5d       	subi	r28, 0xDE	; 222
    238c:	d0 40       	sbci	r29, 0x00	; 0
    238e:	c4 52       	subi	r28, 0x24	; 36
    2390:	df 4f       	sbci	r29, 0xFF	; 255
    2392:	e8 81       	ld	r30, Y
    2394:	f9 81       	ldd	r31, Y+1	; 0x01
    2396:	cc 5d       	subi	r28, 0xDC	; 220
    2398:	d0 40       	sbci	r29, 0x00	; 0
    239a:	00 82       	st	Z, r0
    239c:	c4 52       	subi	r28, 0x24	; 36
    239e:	df 4f       	sbci	r29, 0xFF	; 255
    23a0:	88 81       	ld	r24, Y
    23a2:	99 81       	ldd	r25, Y+1	; 0x01
    23a4:	cc 5d       	subi	r28, 0xDC	; 220
    23a6:	d0 40       	sbci	r29, 0x00	; 0
    23a8:	01 96       	adiw	r24, 0x01	; 1
    23aa:	c4 52       	subi	r28, 0x24	; 36
    23ac:	df 4f       	sbci	r29, 0xFF	; 255
    23ae:	99 83       	std	Y+1, r25	; 0x01
    23b0:	88 83       	st	Y, r24
    23b2:	cc 5d       	subi	r28, 0xDC	; 220
    23b4:	d0 40       	sbci	r29, 0x00	; 0
    23b6:	c0 52       	subi	r28, 0x20	; 32
    23b8:	df 4f       	sbci	r29, 0xFF	; 255
    23ba:	98 81       	ld	r25, Y
    23bc:	c0 5e       	subi	r28, 0xE0	; 224
    23be:	d0 40       	sbci	r29, 0x00	; 0
    23c0:	91 50       	subi	r25, 0x01	; 1
    23c2:	c0 52       	subi	r28, 0x20	; 32
    23c4:	df 4f       	sbci	r29, 0xFF	; 255
    23c6:	98 83       	st	Y, r25
    23c8:	c0 5e       	subi	r28, 0xE0	; 224
    23ca:	d0 40       	sbci	r29, 0x00	; 0
    23cc:	c0 52       	subi	r28, 0x20	; 32
    23ce:	df 4f       	sbci	r29, 0xFF	; 255
    23d0:	e8 81       	ld	r30, Y
    23d2:	c0 5e       	subi	r28, 0xE0	; 224
    23d4:	d0 40       	sbci	r29, 0x00	; 0
    23d6:	ee 23       	and	r30, r30
    23d8:	31 f6       	brne	.-116    	; 0x2366 <main+0x248>
	u8 Arr5[8] = { 0b10000, 0b10000, 0b10000, 0b01100, 0b00000, 0b00000,
			0b00000, 0b00000 };
    23da:	ce 01       	movw	r24, r28
    23dc:	8b 57       	subi	r24, 0x7B	; 123
    23de:	9f 4f       	sbci	r25, 0xFF	; 255
    23e0:	cf 51       	subi	r28, 0x1F	; 31
    23e2:	df 4f       	sbci	r29, 0xFF	; 255
    23e4:	99 83       	std	Y+1, r25	; 0x01
    23e6:	88 83       	st	Y, r24
    23e8:	c1 5e       	subi	r28, 0xE1	; 225
    23ea:	d0 40       	sbci	r29, 0x00	; 0
    23ec:	81 ee       	ldi	r24, 0xE1	; 225
    23ee:	90 e0       	ldi	r25, 0x00	; 0
    23f0:	cd 51       	subi	r28, 0x1D	; 29
    23f2:	df 4f       	sbci	r29, 0xFF	; 255
    23f4:	99 83       	std	Y+1, r25	; 0x01
    23f6:	88 83       	st	Y, r24
    23f8:	c3 5e       	subi	r28, 0xE3	; 227
    23fa:	d0 40       	sbci	r29, 0x00	; 0
    23fc:	98 e0       	ldi	r25, 0x08	; 8
    23fe:	cb 51       	subi	r28, 0x1B	; 27
    2400:	df 4f       	sbci	r29, 0xFF	; 255
    2402:	98 83       	st	Y, r25
    2404:	c5 5e       	subi	r28, 0xE5	; 229
    2406:	d0 40       	sbci	r29, 0x00	; 0
    2408:	cd 51       	subi	r28, 0x1D	; 29
    240a:	df 4f       	sbci	r29, 0xFF	; 255
    240c:	e8 81       	ld	r30, Y
    240e:	f9 81       	ldd	r31, Y+1	; 0x01
    2410:	c3 5e       	subi	r28, 0xE3	; 227
    2412:	d0 40       	sbci	r29, 0x00	; 0
    2414:	00 80       	ld	r0, Z
    2416:	cd 51       	subi	r28, 0x1D	; 29
    2418:	df 4f       	sbci	r29, 0xFF	; 255
    241a:	88 81       	ld	r24, Y
    241c:	99 81       	ldd	r25, Y+1	; 0x01
    241e:	c3 5e       	subi	r28, 0xE3	; 227
    2420:	d0 40       	sbci	r29, 0x00	; 0
    2422:	01 96       	adiw	r24, 0x01	; 1
    2424:	cd 51       	subi	r28, 0x1D	; 29
    2426:	df 4f       	sbci	r29, 0xFF	; 255
    2428:	99 83       	std	Y+1, r25	; 0x01
    242a:	88 83       	st	Y, r24
    242c:	c3 5e       	subi	r28, 0xE3	; 227
    242e:	d0 40       	sbci	r29, 0x00	; 0
    2430:	cf 51       	subi	r28, 0x1F	; 31
    2432:	df 4f       	sbci	r29, 0xFF	; 255
    2434:	e8 81       	ld	r30, Y
    2436:	f9 81       	ldd	r31, Y+1	; 0x01
    2438:	c1 5e       	subi	r28, 0xE1	; 225
    243a:	d0 40       	sbci	r29, 0x00	; 0
    243c:	00 82       	st	Z, r0
    243e:	cf 51       	subi	r28, 0x1F	; 31
    2440:	df 4f       	sbci	r29, 0xFF	; 255
    2442:	88 81       	ld	r24, Y
    2444:	99 81       	ldd	r25, Y+1	; 0x01
    2446:	c1 5e       	subi	r28, 0xE1	; 225
    2448:	d0 40       	sbci	r29, 0x00	; 0
    244a:	01 96       	adiw	r24, 0x01	; 1
    244c:	cf 51       	subi	r28, 0x1F	; 31
    244e:	df 4f       	sbci	r29, 0xFF	; 255
    2450:	99 83       	std	Y+1, r25	; 0x01
    2452:	88 83       	st	Y, r24
    2454:	c1 5e       	subi	r28, 0xE1	; 225
    2456:	d0 40       	sbci	r29, 0x00	; 0
    2458:	cb 51       	subi	r28, 0x1B	; 27
    245a:	df 4f       	sbci	r29, 0xFF	; 255
    245c:	98 81       	ld	r25, Y
    245e:	c5 5e       	subi	r28, 0xE5	; 229
    2460:	d0 40       	sbci	r29, 0x00	; 0
    2462:	91 50       	subi	r25, 0x01	; 1
    2464:	cb 51       	subi	r28, 0x1B	; 27
    2466:	df 4f       	sbci	r29, 0xFF	; 255
    2468:	98 83       	st	Y, r25
    246a:	c5 5e       	subi	r28, 0xE5	; 229
    246c:	d0 40       	sbci	r29, 0x00	; 0
    246e:	cb 51       	subi	r28, 0x1B	; 27
    2470:	df 4f       	sbci	r29, 0xFF	; 255
    2472:	e8 81       	ld	r30, Y
    2474:	c5 5e       	subi	r28, 0xE5	; 229
    2476:	d0 40       	sbci	r29, 0x00	; 0
    2478:	ee 23       	and	r30, r30
    247a:	31 f6       	brne	.-116    	; 0x2408 <main+0x2ea>
	u8 Arr6[8] = { 0b00011, 0b00010, 0b00011, 0b00001, 0b00001, 0b00011,
			0b00101, 0b00001 };
    247c:	ce 01       	movw	r24, r28
    247e:	83 57       	subi	r24, 0x73	; 115
    2480:	9f 4f       	sbci	r25, 0xFF	; 255
    2482:	ca 51       	subi	r28, 0x1A	; 26
    2484:	df 4f       	sbci	r29, 0xFF	; 255
    2486:	99 83       	std	Y+1, r25	; 0x01
    2488:	88 83       	st	Y, r24
    248a:	c6 5e       	subi	r28, 0xE6	; 230
    248c:	d0 40       	sbci	r29, 0x00	; 0
    248e:	89 ed       	ldi	r24, 0xD9	; 217
    2490:	90 e0       	ldi	r25, 0x00	; 0
    2492:	c8 51       	subi	r28, 0x18	; 24
    2494:	df 4f       	sbci	r29, 0xFF	; 255
    2496:	99 83       	std	Y+1, r25	; 0x01
    2498:	88 83       	st	Y, r24
    249a:	c8 5e       	subi	r28, 0xE8	; 232
    249c:	d0 40       	sbci	r29, 0x00	; 0
    249e:	98 e0       	ldi	r25, 0x08	; 8
    24a0:	c6 51       	subi	r28, 0x16	; 22
    24a2:	df 4f       	sbci	r29, 0xFF	; 255
    24a4:	98 83       	st	Y, r25
    24a6:	ca 5e       	subi	r28, 0xEA	; 234
    24a8:	d0 40       	sbci	r29, 0x00	; 0
    24aa:	c8 51       	subi	r28, 0x18	; 24
    24ac:	df 4f       	sbci	r29, 0xFF	; 255
    24ae:	e8 81       	ld	r30, Y
    24b0:	f9 81       	ldd	r31, Y+1	; 0x01
    24b2:	c8 5e       	subi	r28, 0xE8	; 232
    24b4:	d0 40       	sbci	r29, 0x00	; 0
    24b6:	00 80       	ld	r0, Z
    24b8:	c8 51       	subi	r28, 0x18	; 24
    24ba:	df 4f       	sbci	r29, 0xFF	; 255
    24bc:	88 81       	ld	r24, Y
    24be:	99 81       	ldd	r25, Y+1	; 0x01
    24c0:	c8 5e       	subi	r28, 0xE8	; 232
    24c2:	d0 40       	sbci	r29, 0x00	; 0
    24c4:	01 96       	adiw	r24, 0x01	; 1
    24c6:	c8 51       	subi	r28, 0x18	; 24
    24c8:	df 4f       	sbci	r29, 0xFF	; 255
    24ca:	99 83       	std	Y+1, r25	; 0x01
    24cc:	88 83       	st	Y, r24
    24ce:	c8 5e       	subi	r28, 0xE8	; 232
    24d0:	d0 40       	sbci	r29, 0x00	; 0
    24d2:	ca 51       	subi	r28, 0x1A	; 26
    24d4:	df 4f       	sbci	r29, 0xFF	; 255
    24d6:	e8 81       	ld	r30, Y
    24d8:	f9 81       	ldd	r31, Y+1	; 0x01
    24da:	c6 5e       	subi	r28, 0xE6	; 230
    24dc:	d0 40       	sbci	r29, 0x00	; 0
    24de:	00 82       	st	Z, r0
    24e0:	ca 51       	subi	r28, 0x1A	; 26
    24e2:	df 4f       	sbci	r29, 0xFF	; 255
    24e4:	88 81       	ld	r24, Y
    24e6:	99 81       	ldd	r25, Y+1	; 0x01
    24e8:	c6 5e       	subi	r28, 0xE6	; 230
    24ea:	d0 40       	sbci	r29, 0x00	; 0
    24ec:	01 96       	adiw	r24, 0x01	; 1
    24ee:	ca 51       	subi	r28, 0x1A	; 26
    24f0:	df 4f       	sbci	r29, 0xFF	; 255
    24f2:	99 83       	std	Y+1, r25	; 0x01
    24f4:	88 83       	st	Y, r24
    24f6:	c6 5e       	subi	r28, 0xE6	; 230
    24f8:	d0 40       	sbci	r29, 0x00	; 0
    24fa:	c6 51       	subi	r28, 0x16	; 22
    24fc:	df 4f       	sbci	r29, 0xFF	; 255
    24fe:	98 81       	ld	r25, Y
    2500:	ca 5e       	subi	r28, 0xEA	; 234
    2502:	d0 40       	sbci	r29, 0x00	; 0
    2504:	91 50       	subi	r25, 0x01	; 1
    2506:	c6 51       	subi	r28, 0x16	; 22
    2508:	df 4f       	sbci	r29, 0xFF	; 255
    250a:	98 83       	st	Y, r25
    250c:	ca 5e       	subi	r28, 0xEA	; 234
    250e:	d0 40       	sbci	r29, 0x00	; 0
    2510:	c6 51       	subi	r28, 0x16	; 22
    2512:	df 4f       	sbci	r29, 0xFF	; 255
    2514:	e8 81       	ld	r30, Y
    2516:	ca 5e       	subi	r28, 0xEA	; 234
    2518:	d0 40       	sbci	r29, 0x00	; 0
    251a:	ee 23       	and	r30, r30
    251c:	31 f6       	brne	.-116    	; 0x24aa <main+0x38c>
	u8 Arr7[8] = { 0b01101, 0b01101, 0b00001, 0b00110, 0b00000, 0b00000,
			0b00000, 0b00000 };
    251e:	ce 01       	movw	r24, r28
    2520:	8b 56       	subi	r24, 0x6B	; 107
    2522:	9f 4f       	sbci	r25, 0xFF	; 255
    2524:	c5 51       	subi	r28, 0x15	; 21
    2526:	df 4f       	sbci	r29, 0xFF	; 255
    2528:	99 83       	std	Y+1, r25	; 0x01
    252a:	88 83       	st	Y, r24
    252c:	cb 5e       	subi	r28, 0xEB	; 235
    252e:	d0 40       	sbci	r29, 0x00	; 0
    2530:	81 ed       	ldi	r24, 0xD1	; 209
    2532:	90 e0       	ldi	r25, 0x00	; 0
    2534:	c3 51       	subi	r28, 0x13	; 19
    2536:	df 4f       	sbci	r29, 0xFF	; 255
    2538:	99 83       	std	Y+1, r25	; 0x01
    253a:	88 83       	st	Y, r24
    253c:	cd 5e       	subi	r28, 0xED	; 237
    253e:	d0 40       	sbci	r29, 0x00	; 0
    2540:	98 e0       	ldi	r25, 0x08	; 8
    2542:	c1 51       	subi	r28, 0x11	; 17
    2544:	df 4f       	sbci	r29, 0xFF	; 255
    2546:	98 83       	st	Y, r25
    2548:	cf 5e       	subi	r28, 0xEF	; 239
    254a:	d0 40       	sbci	r29, 0x00	; 0
    254c:	c3 51       	subi	r28, 0x13	; 19
    254e:	df 4f       	sbci	r29, 0xFF	; 255
    2550:	e8 81       	ld	r30, Y
    2552:	f9 81       	ldd	r31, Y+1	; 0x01
    2554:	cd 5e       	subi	r28, 0xED	; 237
    2556:	d0 40       	sbci	r29, 0x00	; 0
    2558:	00 80       	ld	r0, Z
    255a:	c3 51       	subi	r28, 0x13	; 19
    255c:	df 4f       	sbci	r29, 0xFF	; 255
    255e:	88 81       	ld	r24, Y
    2560:	99 81       	ldd	r25, Y+1	; 0x01
    2562:	cd 5e       	subi	r28, 0xED	; 237
    2564:	d0 40       	sbci	r29, 0x00	; 0
    2566:	01 96       	adiw	r24, 0x01	; 1
    2568:	c3 51       	subi	r28, 0x13	; 19
    256a:	df 4f       	sbci	r29, 0xFF	; 255
    256c:	99 83       	std	Y+1, r25	; 0x01
    256e:	88 83       	st	Y, r24
    2570:	cd 5e       	subi	r28, 0xED	; 237
    2572:	d0 40       	sbci	r29, 0x00	; 0
    2574:	c5 51       	subi	r28, 0x15	; 21
    2576:	df 4f       	sbci	r29, 0xFF	; 255
    2578:	e8 81       	ld	r30, Y
    257a:	f9 81       	ldd	r31, Y+1	; 0x01
    257c:	cb 5e       	subi	r28, 0xEB	; 235
    257e:	d0 40       	sbci	r29, 0x00	; 0
    2580:	00 82       	st	Z, r0
    2582:	c5 51       	subi	r28, 0x15	; 21
    2584:	df 4f       	sbci	r29, 0xFF	; 255
    2586:	88 81       	ld	r24, Y
    2588:	99 81       	ldd	r25, Y+1	; 0x01
    258a:	cb 5e       	subi	r28, 0xEB	; 235
    258c:	d0 40       	sbci	r29, 0x00	; 0
    258e:	01 96       	adiw	r24, 0x01	; 1
    2590:	c5 51       	subi	r28, 0x15	; 21
    2592:	df 4f       	sbci	r29, 0xFF	; 255
    2594:	99 83       	std	Y+1, r25	; 0x01
    2596:	88 83       	st	Y, r24
    2598:	cb 5e       	subi	r28, 0xEB	; 235
    259a:	d0 40       	sbci	r29, 0x00	; 0
    259c:	c1 51       	subi	r28, 0x11	; 17
    259e:	df 4f       	sbci	r29, 0xFF	; 255
    25a0:	98 81       	ld	r25, Y
    25a2:	cf 5e       	subi	r28, 0xEF	; 239
    25a4:	d0 40       	sbci	r29, 0x00	; 0
    25a6:	91 50       	subi	r25, 0x01	; 1
    25a8:	c1 51       	subi	r28, 0x11	; 17
    25aa:	df 4f       	sbci	r29, 0xFF	; 255
    25ac:	98 83       	st	Y, r25
    25ae:	cf 5e       	subi	r28, 0xEF	; 239
    25b0:	d0 40       	sbci	r29, 0x00	; 0
    25b2:	c1 51       	subi	r28, 0x11	; 17
    25b4:	df 4f       	sbci	r29, 0xFF	; 255
    25b6:	e8 81       	ld	r30, Y
    25b8:	cf 5e       	subi	r28, 0xEF	; 239
    25ba:	d0 40       	sbci	r29, 0x00	; 0
    25bc:	ee 23       	and	r30, r30
    25be:	31 f6       	brne	.-116    	; 0x254c <main+0x42e>
	u8 Arr8[8] = { 0b00001, 0b00111, 0b01000, 0b00000, 0b00000, 0b00000,
			0b00000, 0b00000 };
    25c0:	ce 01       	movw	r24, r28
    25c2:	83 56       	subi	r24, 0x63	; 99
    25c4:	9f 4f       	sbci	r25, 0xFF	; 255
    25c6:	c0 51       	subi	r28, 0x10	; 16
    25c8:	df 4f       	sbci	r29, 0xFF	; 255
    25ca:	99 83       	std	Y+1, r25	; 0x01
    25cc:	88 83       	st	Y, r24
    25ce:	c0 5f       	subi	r28, 0xF0	; 240
    25d0:	d0 40       	sbci	r29, 0x00	; 0
    25d2:	89 ec       	ldi	r24, 0xC9	; 201
    25d4:	90 e0       	ldi	r25, 0x00	; 0
    25d6:	ce 50       	subi	r28, 0x0E	; 14
    25d8:	df 4f       	sbci	r29, 0xFF	; 255
    25da:	99 83       	std	Y+1, r25	; 0x01
    25dc:	88 83       	st	Y, r24
    25de:	c2 5f       	subi	r28, 0xF2	; 242
    25e0:	d0 40       	sbci	r29, 0x00	; 0
    25e2:	98 e0       	ldi	r25, 0x08	; 8
    25e4:	cc 50       	subi	r28, 0x0C	; 12
    25e6:	df 4f       	sbci	r29, 0xFF	; 255
    25e8:	98 83       	st	Y, r25
    25ea:	c4 5f       	subi	r28, 0xF4	; 244
    25ec:	d0 40       	sbci	r29, 0x00	; 0
    25ee:	ce 50       	subi	r28, 0x0E	; 14
    25f0:	df 4f       	sbci	r29, 0xFF	; 255
    25f2:	e8 81       	ld	r30, Y
    25f4:	f9 81       	ldd	r31, Y+1	; 0x01
    25f6:	c2 5f       	subi	r28, 0xF2	; 242
    25f8:	d0 40       	sbci	r29, 0x00	; 0
    25fa:	00 80       	ld	r0, Z
    25fc:	ce 50       	subi	r28, 0x0E	; 14
    25fe:	df 4f       	sbci	r29, 0xFF	; 255
    2600:	88 81       	ld	r24, Y
    2602:	99 81       	ldd	r25, Y+1	; 0x01
    2604:	c2 5f       	subi	r28, 0xF2	; 242
    2606:	d0 40       	sbci	r29, 0x00	; 0
    2608:	01 96       	adiw	r24, 0x01	; 1
    260a:	ce 50       	subi	r28, 0x0E	; 14
    260c:	df 4f       	sbci	r29, 0xFF	; 255
    260e:	99 83       	std	Y+1, r25	; 0x01
    2610:	88 83       	st	Y, r24
    2612:	c2 5f       	subi	r28, 0xF2	; 242
    2614:	d0 40       	sbci	r29, 0x00	; 0
    2616:	c0 51       	subi	r28, 0x10	; 16
    2618:	df 4f       	sbci	r29, 0xFF	; 255
    261a:	e8 81       	ld	r30, Y
    261c:	f9 81       	ldd	r31, Y+1	; 0x01
    261e:	c0 5f       	subi	r28, 0xF0	; 240
    2620:	d0 40       	sbci	r29, 0x00	; 0
    2622:	00 82       	st	Z, r0
    2624:	c0 51       	subi	r28, 0x10	; 16
    2626:	df 4f       	sbci	r29, 0xFF	; 255
    2628:	88 81       	ld	r24, Y
    262a:	99 81       	ldd	r25, Y+1	; 0x01
    262c:	c0 5f       	subi	r28, 0xF0	; 240
    262e:	d0 40       	sbci	r29, 0x00	; 0
    2630:	01 96       	adiw	r24, 0x01	; 1
    2632:	c0 51       	subi	r28, 0x10	; 16
    2634:	df 4f       	sbci	r29, 0xFF	; 255
    2636:	99 83       	std	Y+1, r25	; 0x01
    2638:	88 83       	st	Y, r24
    263a:	c0 5f       	subi	r28, 0xF0	; 240
    263c:	d0 40       	sbci	r29, 0x00	; 0
    263e:	cc 50       	subi	r28, 0x0C	; 12
    2640:	df 4f       	sbci	r29, 0xFF	; 255
    2642:	98 81       	ld	r25, Y
    2644:	c4 5f       	subi	r28, 0xF4	; 244
    2646:	d0 40       	sbci	r29, 0x00	; 0
    2648:	91 50       	subi	r25, 0x01	; 1
    264a:	cc 50       	subi	r28, 0x0C	; 12
    264c:	df 4f       	sbci	r29, 0xFF	; 255
    264e:	98 83       	st	Y, r25
    2650:	c4 5f       	subi	r28, 0xF4	; 244
    2652:	d0 40       	sbci	r29, 0x00	; 0
    2654:	cc 50       	subi	r28, 0x0C	; 12
    2656:	df 4f       	sbci	r29, 0xFF	; 255
    2658:	e8 81       	ld	r30, Y
    265a:	c4 5f       	subi	r28, 0xF4	; 244
    265c:	d0 40       	sbci	r29, 0x00	; 0
    265e:	ee 23       	and	r30, r30
    2660:	31 f6       	brne	.-116    	; 0x25ee <main+0x4d0>
	u8 Arr9[8] = { 0b00011, 0b00010, 0b00011, 0b00001, 0b00001, 0b00011,
			0b01101, 0b01101 };
    2662:	ce 01       	movw	r24, r28
    2664:	8b 55       	subi	r24, 0x5B	; 91
    2666:	9f 4f       	sbci	r25, 0xFF	; 255
    2668:	cb 50       	subi	r28, 0x0B	; 11
    266a:	df 4f       	sbci	r29, 0xFF	; 255
    266c:	99 83       	std	Y+1, r25	; 0x01
    266e:	88 83       	st	Y, r24
    2670:	c5 5f       	subi	r28, 0xF5	; 245
    2672:	d0 40       	sbci	r29, 0x00	; 0
    2674:	81 ec       	ldi	r24, 0xC1	; 193
    2676:	90 e0       	ldi	r25, 0x00	; 0
    2678:	c9 50       	subi	r28, 0x09	; 9
    267a:	df 4f       	sbci	r29, 0xFF	; 255
    267c:	99 83       	std	Y+1, r25	; 0x01
    267e:	88 83       	st	Y, r24
    2680:	c7 5f       	subi	r28, 0xF7	; 247
    2682:	d0 40       	sbci	r29, 0x00	; 0
    2684:	98 e0       	ldi	r25, 0x08	; 8
    2686:	c7 50       	subi	r28, 0x07	; 7
    2688:	df 4f       	sbci	r29, 0xFF	; 255
    268a:	98 83       	st	Y, r25
    268c:	c9 5f       	subi	r28, 0xF9	; 249
    268e:	d0 40       	sbci	r29, 0x00	; 0
    2690:	c9 50       	subi	r28, 0x09	; 9
    2692:	df 4f       	sbci	r29, 0xFF	; 255
    2694:	e8 81       	ld	r30, Y
    2696:	f9 81       	ldd	r31, Y+1	; 0x01
    2698:	c7 5f       	subi	r28, 0xF7	; 247
    269a:	d0 40       	sbci	r29, 0x00	; 0
    269c:	00 80       	ld	r0, Z
    269e:	c9 50       	subi	r28, 0x09	; 9
    26a0:	df 4f       	sbci	r29, 0xFF	; 255
    26a2:	88 81       	ld	r24, Y
    26a4:	99 81       	ldd	r25, Y+1	; 0x01
    26a6:	c7 5f       	subi	r28, 0xF7	; 247
    26a8:	d0 40       	sbci	r29, 0x00	; 0
    26aa:	01 96       	adiw	r24, 0x01	; 1
    26ac:	c9 50       	subi	r28, 0x09	; 9
    26ae:	df 4f       	sbci	r29, 0xFF	; 255
    26b0:	99 83       	std	Y+1, r25	; 0x01
    26b2:	88 83       	st	Y, r24
    26b4:	c7 5f       	subi	r28, 0xF7	; 247
    26b6:	d0 40       	sbci	r29, 0x00	; 0
    26b8:	cb 50       	subi	r28, 0x0B	; 11
    26ba:	df 4f       	sbci	r29, 0xFF	; 255
    26bc:	e8 81       	ld	r30, Y
    26be:	f9 81       	ldd	r31, Y+1	; 0x01
    26c0:	c5 5f       	subi	r28, 0xF5	; 245
    26c2:	d0 40       	sbci	r29, 0x00	; 0
    26c4:	00 82       	st	Z, r0
    26c6:	cb 50       	subi	r28, 0x0B	; 11
    26c8:	df 4f       	sbci	r29, 0xFF	; 255
    26ca:	88 81       	ld	r24, Y
    26cc:	99 81       	ldd	r25, Y+1	; 0x01
    26ce:	c5 5f       	subi	r28, 0xF5	; 245
    26d0:	d0 40       	sbci	r29, 0x00	; 0
    26d2:	01 96       	adiw	r24, 0x01	; 1
    26d4:	cb 50       	subi	r28, 0x0B	; 11
    26d6:	df 4f       	sbci	r29, 0xFF	; 255
    26d8:	99 83       	std	Y+1, r25	; 0x01
    26da:	88 83       	st	Y, r24
    26dc:	c5 5f       	subi	r28, 0xF5	; 245
    26de:	d0 40       	sbci	r29, 0x00	; 0
    26e0:	c7 50       	subi	r28, 0x07	; 7
    26e2:	df 4f       	sbci	r29, 0xFF	; 255
    26e4:	98 81       	ld	r25, Y
    26e6:	c9 5f       	subi	r28, 0xF9	; 249
    26e8:	d0 40       	sbci	r29, 0x00	; 0
    26ea:	91 50       	subi	r25, 0x01	; 1
    26ec:	c7 50       	subi	r28, 0x07	; 7
    26ee:	df 4f       	sbci	r29, 0xFF	; 255
    26f0:	98 83       	st	Y, r25
    26f2:	c9 5f       	subi	r28, 0xF9	; 249
    26f4:	d0 40       	sbci	r29, 0x00	; 0
    26f6:	c7 50       	subi	r28, 0x07	; 7
    26f8:	df 4f       	sbci	r29, 0xFF	; 255
    26fa:	e8 81       	ld	r30, Y
    26fc:	c9 5f       	subi	r28, 0xF9	; 249
    26fe:	d0 40       	sbci	r29, 0x00	; 0
    2700:	ee 23       	and	r30, r30
    2702:	31 f6       	brne	.-116    	; 0x2690 <main+0x572>
	u8 Arr10[8] = { 0b10000, 0b01010, 0b00100, 0b00000, 0b00000, 0b00000,
			0b00000, 0b00000 };
    2704:	ce 01       	movw	r24, r28
    2706:	83 55       	subi	r24, 0x53	; 83
    2708:	9f 4f       	sbci	r25, 0xFF	; 255
    270a:	c6 50       	subi	r28, 0x06	; 6
    270c:	df 4f       	sbci	r29, 0xFF	; 255
    270e:	99 83       	std	Y+1, r25	; 0x01
    2710:	88 83       	st	Y, r24
    2712:	ca 5f       	subi	r28, 0xFA	; 250
    2714:	d0 40       	sbci	r29, 0x00	; 0
    2716:	89 eb       	ldi	r24, 0xB9	; 185
    2718:	90 e0       	ldi	r25, 0x00	; 0
    271a:	c4 50       	subi	r28, 0x04	; 4
    271c:	df 4f       	sbci	r29, 0xFF	; 255
    271e:	99 83       	std	Y+1, r25	; 0x01
    2720:	88 83       	st	Y, r24
    2722:	cc 5f       	subi	r28, 0xFC	; 252
    2724:	d0 40       	sbci	r29, 0x00	; 0
    2726:	98 e0       	ldi	r25, 0x08	; 8
    2728:	c2 50       	subi	r28, 0x02	; 2
    272a:	df 4f       	sbci	r29, 0xFF	; 255
    272c:	98 83       	st	Y, r25
    272e:	ce 5f       	subi	r28, 0xFE	; 254
    2730:	d0 40       	sbci	r29, 0x00	; 0
    2732:	c4 50       	subi	r28, 0x04	; 4
    2734:	df 4f       	sbci	r29, 0xFF	; 255
    2736:	e8 81       	ld	r30, Y
    2738:	f9 81       	ldd	r31, Y+1	; 0x01
    273a:	cc 5f       	subi	r28, 0xFC	; 252
    273c:	d0 40       	sbci	r29, 0x00	; 0
    273e:	00 80       	ld	r0, Z
    2740:	c4 50       	subi	r28, 0x04	; 4
    2742:	df 4f       	sbci	r29, 0xFF	; 255
    2744:	88 81       	ld	r24, Y
    2746:	99 81       	ldd	r25, Y+1	; 0x01
    2748:	cc 5f       	subi	r28, 0xFC	; 252
    274a:	d0 40       	sbci	r29, 0x00	; 0
    274c:	01 96       	adiw	r24, 0x01	; 1
    274e:	c4 50       	subi	r28, 0x04	; 4
    2750:	df 4f       	sbci	r29, 0xFF	; 255
    2752:	99 83       	std	Y+1, r25	; 0x01
    2754:	88 83       	st	Y, r24
    2756:	cc 5f       	subi	r28, 0xFC	; 252
    2758:	d0 40       	sbci	r29, 0x00	; 0
    275a:	c6 50       	subi	r28, 0x06	; 6
    275c:	df 4f       	sbci	r29, 0xFF	; 255
    275e:	e8 81       	ld	r30, Y
    2760:	f9 81       	ldd	r31, Y+1	; 0x01
    2762:	ca 5f       	subi	r28, 0xFA	; 250
    2764:	d0 40       	sbci	r29, 0x00	; 0
    2766:	00 82       	st	Z, r0
    2768:	c6 50       	subi	r28, 0x06	; 6
    276a:	df 4f       	sbci	r29, 0xFF	; 255
    276c:	88 81       	ld	r24, Y
    276e:	99 81       	ldd	r25, Y+1	; 0x01
    2770:	ca 5f       	subi	r28, 0xFA	; 250
    2772:	d0 40       	sbci	r29, 0x00	; 0
    2774:	01 96       	adiw	r24, 0x01	; 1
    2776:	c6 50       	subi	r28, 0x06	; 6
    2778:	df 4f       	sbci	r29, 0xFF	; 255
    277a:	99 83       	std	Y+1, r25	; 0x01
    277c:	88 83       	st	Y, r24
    277e:	ca 5f       	subi	r28, 0xFA	; 250
    2780:	d0 40       	sbci	r29, 0x00	; 0
    2782:	c2 50       	subi	r28, 0x02	; 2
    2784:	df 4f       	sbci	r29, 0xFF	; 255
    2786:	98 81       	ld	r25, Y
    2788:	ce 5f       	subi	r28, 0xFE	; 254
    278a:	d0 40       	sbci	r29, 0x00	; 0
    278c:	91 50       	subi	r25, 0x01	; 1
    278e:	c2 50       	subi	r28, 0x02	; 2
    2790:	df 4f       	sbci	r29, 0xFF	; 255
    2792:	98 83       	st	Y, r25
    2794:	ce 5f       	subi	r28, 0xFE	; 254
    2796:	d0 40       	sbci	r29, 0x00	; 0
    2798:	c2 50       	subi	r28, 0x02	; 2
    279a:	df 4f       	sbci	r29, 0xFF	; 255
    279c:	e8 81       	ld	r30, Y
    279e:	ce 5f       	subi	r28, 0xFE	; 254
    27a0:	d0 40       	sbci	r29, 0x00	; 0
    27a2:	ee 23       	and	r30, r30
    27a4:	31 f6       	brne	.-116    	; 0x2732 <main+0x614>
	u8 Arr11[8] = { 0b00011, 0b00010, 0b00011, 0b01001, 0b00101, 0b00011,
			0b00001, 0b00001 };
    27a6:	ce 01       	movw	r24, r28
    27a8:	8b 54       	subi	r24, 0x4B	; 75
    27aa:	9f 4f       	sbci	r25, 0xFF	; 255
    27ac:	c1 50       	subi	r28, 0x01	; 1
    27ae:	df 4f       	sbci	r29, 0xFF	; 255
    27b0:	99 83       	std	Y+1, r25	; 0x01
    27b2:	88 83       	st	Y, r24
    27b4:	cf 5f       	subi	r28, 0xFF	; 255
    27b6:	d0 40       	sbci	r29, 0x00	; 0
    27b8:	81 eb       	ldi	r24, 0xB1	; 177
    27ba:	90 e0       	ldi	r25, 0x00	; 0
    27bc:	cf 5f       	subi	r28, 0xFF	; 255
    27be:	de 4f       	sbci	r29, 0xFE	; 254
    27c0:	99 83       	std	Y+1, r25	; 0x01
    27c2:	88 83       	st	Y, r24
    27c4:	c1 50       	subi	r28, 0x01	; 1
    27c6:	d1 40       	sbci	r29, 0x01	; 1
    27c8:	98 e0       	ldi	r25, 0x08	; 8
    27ca:	cd 5f       	subi	r28, 0xFD	; 253
    27cc:	de 4f       	sbci	r29, 0xFE	; 254
    27ce:	98 83       	st	Y, r25
    27d0:	c3 50       	subi	r28, 0x03	; 3
    27d2:	d1 40       	sbci	r29, 0x01	; 1
    27d4:	cf 5f       	subi	r28, 0xFF	; 255
    27d6:	de 4f       	sbci	r29, 0xFE	; 254
    27d8:	e8 81       	ld	r30, Y
    27da:	f9 81       	ldd	r31, Y+1	; 0x01
    27dc:	c1 50       	subi	r28, 0x01	; 1
    27de:	d1 40       	sbci	r29, 0x01	; 1
    27e0:	00 80       	ld	r0, Z
    27e2:	cf 5f       	subi	r28, 0xFF	; 255
    27e4:	de 4f       	sbci	r29, 0xFE	; 254
    27e6:	88 81       	ld	r24, Y
    27e8:	99 81       	ldd	r25, Y+1	; 0x01
    27ea:	c1 50       	subi	r28, 0x01	; 1
    27ec:	d1 40       	sbci	r29, 0x01	; 1
    27ee:	01 96       	adiw	r24, 0x01	; 1
    27f0:	cf 5f       	subi	r28, 0xFF	; 255
    27f2:	de 4f       	sbci	r29, 0xFE	; 254
    27f4:	99 83       	std	Y+1, r25	; 0x01
    27f6:	88 83       	st	Y, r24
    27f8:	c1 50       	subi	r28, 0x01	; 1
    27fa:	d1 40       	sbci	r29, 0x01	; 1
    27fc:	c1 50       	subi	r28, 0x01	; 1
    27fe:	df 4f       	sbci	r29, 0xFF	; 255
    2800:	e8 81       	ld	r30, Y
    2802:	f9 81       	ldd	r31, Y+1	; 0x01
    2804:	cf 5f       	subi	r28, 0xFF	; 255
    2806:	d0 40       	sbci	r29, 0x00	; 0
    2808:	00 82       	st	Z, r0
    280a:	c1 50       	subi	r28, 0x01	; 1
    280c:	df 4f       	sbci	r29, 0xFF	; 255
    280e:	88 81       	ld	r24, Y
    2810:	99 81       	ldd	r25, Y+1	; 0x01
    2812:	cf 5f       	subi	r28, 0xFF	; 255
    2814:	d0 40       	sbci	r29, 0x00	; 0
    2816:	01 96       	adiw	r24, 0x01	; 1
    2818:	c1 50       	subi	r28, 0x01	; 1
    281a:	df 4f       	sbci	r29, 0xFF	; 255
    281c:	99 83       	std	Y+1, r25	; 0x01
    281e:	88 83       	st	Y, r24
    2820:	cf 5f       	subi	r28, 0xFF	; 255
    2822:	d0 40       	sbci	r29, 0x00	; 0
    2824:	cd 5f       	subi	r28, 0xFD	; 253
    2826:	de 4f       	sbci	r29, 0xFE	; 254
    2828:	98 81       	ld	r25, Y
    282a:	c3 50       	subi	r28, 0x03	; 3
    282c:	d1 40       	sbci	r29, 0x01	; 1
    282e:	91 50       	subi	r25, 0x01	; 1
    2830:	cd 5f       	subi	r28, 0xFD	; 253
    2832:	de 4f       	sbci	r29, 0xFE	; 254
    2834:	98 83       	st	Y, r25
    2836:	c3 50       	subi	r28, 0x03	; 3
    2838:	d1 40       	sbci	r29, 0x01	; 1
    283a:	cd 5f       	subi	r28, 0xFD	; 253
    283c:	de 4f       	sbci	r29, 0xFE	; 254
    283e:	e8 81       	ld	r30, Y
    2840:	c3 50       	subi	r28, 0x03	; 3
    2842:	d1 40       	sbci	r29, 0x01	; 1
    2844:	ee 23       	and	r30, r30
    2846:	31 f6       	brne	.-116    	; 0x27d4 <main+0x6b6>
	u8 Arr12[8] = { 0b00001, 0b01010, 0b00100, 0b00000, 0b00000, 0b00000,
			0b00000, 0b00000 };
    2848:	ce 01       	movw	r24, r28
    284a:	83 54       	subi	r24, 0x43	; 67
    284c:	9f 4f       	sbci	r25, 0xFF	; 255
    284e:	cc 5f       	subi	r28, 0xFC	; 252
    2850:	de 4f       	sbci	r29, 0xFE	; 254
    2852:	99 83       	std	Y+1, r25	; 0x01
    2854:	88 83       	st	Y, r24
    2856:	c4 50       	subi	r28, 0x04	; 4
    2858:	d1 40       	sbci	r29, 0x01	; 1
    285a:	89 ea       	ldi	r24, 0xA9	; 169
    285c:	90 e0       	ldi	r25, 0x00	; 0
    285e:	ca 5f       	subi	r28, 0xFA	; 250
    2860:	de 4f       	sbci	r29, 0xFE	; 254
    2862:	99 83       	std	Y+1, r25	; 0x01
    2864:	88 83       	st	Y, r24
    2866:	c6 50       	subi	r28, 0x06	; 6
    2868:	d1 40       	sbci	r29, 0x01	; 1
    286a:	98 e0       	ldi	r25, 0x08	; 8
    286c:	c8 5f       	subi	r28, 0xF8	; 248
    286e:	de 4f       	sbci	r29, 0xFE	; 254
    2870:	98 83       	st	Y, r25
    2872:	c8 50       	subi	r28, 0x08	; 8
    2874:	d1 40       	sbci	r29, 0x01	; 1
    2876:	ca 5f       	subi	r28, 0xFA	; 250
    2878:	de 4f       	sbci	r29, 0xFE	; 254
    287a:	e8 81       	ld	r30, Y
    287c:	f9 81       	ldd	r31, Y+1	; 0x01
    287e:	c6 50       	subi	r28, 0x06	; 6
    2880:	d1 40       	sbci	r29, 0x01	; 1
    2882:	00 80       	ld	r0, Z
    2884:	ca 5f       	subi	r28, 0xFA	; 250
    2886:	de 4f       	sbci	r29, 0xFE	; 254
    2888:	88 81       	ld	r24, Y
    288a:	99 81       	ldd	r25, Y+1	; 0x01
    288c:	c6 50       	subi	r28, 0x06	; 6
    288e:	d1 40       	sbci	r29, 0x01	; 1
    2890:	01 96       	adiw	r24, 0x01	; 1
    2892:	ca 5f       	subi	r28, 0xFA	; 250
    2894:	de 4f       	sbci	r29, 0xFE	; 254
    2896:	99 83       	std	Y+1, r25	; 0x01
    2898:	88 83       	st	Y, r24
    289a:	c6 50       	subi	r28, 0x06	; 6
    289c:	d1 40       	sbci	r29, 0x01	; 1
    289e:	cc 5f       	subi	r28, 0xFC	; 252
    28a0:	de 4f       	sbci	r29, 0xFE	; 254
    28a2:	e8 81       	ld	r30, Y
    28a4:	f9 81       	ldd	r31, Y+1	; 0x01
    28a6:	c4 50       	subi	r28, 0x04	; 4
    28a8:	d1 40       	sbci	r29, 0x01	; 1
    28aa:	00 82       	st	Z, r0
    28ac:	cc 5f       	subi	r28, 0xFC	; 252
    28ae:	de 4f       	sbci	r29, 0xFE	; 254
    28b0:	88 81       	ld	r24, Y
    28b2:	99 81       	ldd	r25, Y+1	; 0x01
    28b4:	c4 50       	subi	r28, 0x04	; 4
    28b6:	d1 40       	sbci	r29, 0x01	; 1
    28b8:	01 96       	adiw	r24, 0x01	; 1
    28ba:	cc 5f       	subi	r28, 0xFC	; 252
    28bc:	de 4f       	sbci	r29, 0xFE	; 254
    28be:	99 83       	std	Y+1, r25	; 0x01
    28c0:	88 83       	st	Y, r24
    28c2:	c4 50       	subi	r28, 0x04	; 4
    28c4:	d1 40       	sbci	r29, 0x01	; 1
    28c6:	c8 5f       	subi	r28, 0xF8	; 248
    28c8:	de 4f       	sbci	r29, 0xFE	; 254
    28ca:	98 81       	ld	r25, Y
    28cc:	c8 50       	subi	r28, 0x08	; 8
    28ce:	d1 40       	sbci	r29, 0x01	; 1
    28d0:	91 50       	subi	r25, 0x01	; 1
    28d2:	c8 5f       	subi	r28, 0xF8	; 248
    28d4:	de 4f       	sbci	r29, 0xFE	; 254
    28d6:	98 83       	st	Y, r25
    28d8:	c8 50       	subi	r28, 0x08	; 8
    28da:	d1 40       	sbci	r29, 0x01	; 1
    28dc:	c8 5f       	subi	r28, 0xF8	; 248
    28de:	de 4f       	sbci	r29, 0xFE	; 254
    28e0:	e8 81       	ld	r30, Y
    28e2:	c8 50       	subi	r28, 0x08	; 8
    28e4:	d1 40       	sbci	r29, 0x01	; 1
    28e6:	ee 23       	and	r30, r30
    28e8:	31 f6       	brne	.-116    	; 0x2876 <main+0x758>
	u8 Arr13[8] = { 0b11000, 0b01000, 0b11000, 0b10010, 0b10100, 0b11000,
			0b10000, 0b10000 };
    28ea:	ce 01       	movw	r24, r28
    28ec:	8b 53       	subi	r24, 0x3B	; 59
    28ee:	9f 4f       	sbci	r25, 0xFF	; 255
    28f0:	c7 5f       	subi	r28, 0xF7	; 247
    28f2:	de 4f       	sbci	r29, 0xFE	; 254
    28f4:	99 83       	std	Y+1, r25	; 0x01
    28f6:	88 83       	st	Y, r24
    28f8:	c9 50       	subi	r28, 0x09	; 9
    28fa:	d1 40       	sbci	r29, 0x01	; 1
    28fc:	81 ea       	ldi	r24, 0xA1	; 161
    28fe:	90 e0       	ldi	r25, 0x00	; 0
    2900:	c5 5f       	subi	r28, 0xF5	; 245
    2902:	de 4f       	sbci	r29, 0xFE	; 254
    2904:	99 83       	std	Y+1, r25	; 0x01
    2906:	88 83       	st	Y, r24
    2908:	cb 50       	subi	r28, 0x0B	; 11
    290a:	d1 40       	sbci	r29, 0x01	; 1
    290c:	98 e0       	ldi	r25, 0x08	; 8
    290e:	c3 5f       	subi	r28, 0xF3	; 243
    2910:	de 4f       	sbci	r29, 0xFE	; 254
    2912:	98 83       	st	Y, r25
    2914:	cd 50       	subi	r28, 0x0D	; 13
    2916:	d1 40       	sbci	r29, 0x01	; 1
    2918:	c5 5f       	subi	r28, 0xF5	; 245
    291a:	de 4f       	sbci	r29, 0xFE	; 254
    291c:	e8 81       	ld	r30, Y
    291e:	f9 81       	ldd	r31, Y+1	; 0x01
    2920:	cb 50       	subi	r28, 0x0B	; 11
    2922:	d1 40       	sbci	r29, 0x01	; 1
    2924:	00 80       	ld	r0, Z
    2926:	c5 5f       	subi	r28, 0xF5	; 245
    2928:	de 4f       	sbci	r29, 0xFE	; 254
    292a:	88 81       	ld	r24, Y
    292c:	99 81       	ldd	r25, Y+1	; 0x01
    292e:	cb 50       	subi	r28, 0x0B	; 11
    2930:	d1 40       	sbci	r29, 0x01	; 1
    2932:	01 96       	adiw	r24, 0x01	; 1
    2934:	c5 5f       	subi	r28, 0xF5	; 245
    2936:	de 4f       	sbci	r29, 0xFE	; 254
    2938:	99 83       	std	Y+1, r25	; 0x01
    293a:	88 83       	st	Y, r24
    293c:	cb 50       	subi	r28, 0x0B	; 11
    293e:	d1 40       	sbci	r29, 0x01	; 1
    2940:	c7 5f       	subi	r28, 0xF7	; 247
    2942:	de 4f       	sbci	r29, 0xFE	; 254
    2944:	e8 81       	ld	r30, Y
    2946:	f9 81       	ldd	r31, Y+1	; 0x01
    2948:	c9 50       	subi	r28, 0x09	; 9
    294a:	d1 40       	sbci	r29, 0x01	; 1
    294c:	00 82       	st	Z, r0
    294e:	c7 5f       	subi	r28, 0xF7	; 247
    2950:	de 4f       	sbci	r29, 0xFE	; 254
    2952:	88 81       	ld	r24, Y
    2954:	99 81       	ldd	r25, Y+1	; 0x01
    2956:	c9 50       	subi	r28, 0x09	; 9
    2958:	d1 40       	sbci	r29, 0x01	; 1
    295a:	01 96       	adiw	r24, 0x01	; 1
    295c:	c7 5f       	subi	r28, 0xF7	; 247
    295e:	de 4f       	sbci	r29, 0xFE	; 254
    2960:	99 83       	std	Y+1, r25	; 0x01
    2962:	88 83       	st	Y, r24
    2964:	c9 50       	subi	r28, 0x09	; 9
    2966:	d1 40       	sbci	r29, 0x01	; 1
    2968:	c3 5f       	subi	r28, 0xF3	; 243
    296a:	de 4f       	sbci	r29, 0xFE	; 254
    296c:	98 81       	ld	r25, Y
    296e:	cd 50       	subi	r28, 0x0D	; 13
    2970:	d1 40       	sbci	r29, 0x01	; 1
    2972:	91 50       	subi	r25, 0x01	; 1
    2974:	c3 5f       	subi	r28, 0xF3	; 243
    2976:	de 4f       	sbci	r29, 0xFE	; 254
    2978:	98 83       	st	Y, r25
    297a:	cd 50       	subi	r28, 0x0D	; 13
    297c:	d1 40       	sbci	r29, 0x01	; 1
    297e:	c3 5f       	subi	r28, 0xF3	; 243
    2980:	de 4f       	sbci	r29, 0xFE	; 254
    2982:	e8 81       	ld	r30, Y
    2984:	cd 50       	subi	r28, 0x0D	; 13
    2986:	d1 40       	sbci	r29, 0x01	; 1
    2988:	ee 23       	and	r30, r30
    298a:	31 f6       	brne	.-116    	; 0x2918 <main+0x7fa>
	while (1) {
		DIO_u8GetPinValue(DIO_u8_PORTB,DIO_u8_PIN0,&Local_u8Frame);
    298c:	9e 01       	movw	r18, r28
    298e:	2c 59       	subi	r18, 0x9C	; 156
    2990:	3f 4f       	sbci	r19, 0xFF	; 255
    2992:	81 e0       	ldi	r24, 0x01	; 1
    2994:	60 e0       	ldi	r22, 0x00	; 0
    2996:	a9 01       	movw	r20, r18
    2998:	0e 94 e0 09 	call	0x13c0	; 0x13c0 <DIO_u8GetPinValue>
		if(Local_u8Frame==0){
    299c:	fe 01       	movw	r30, r28
    299e:	ec 59       	subi	r30, 0x9C	; 156
    29a0:	ff 4f       	sbci	r31, 0xFF	; 255
    29a2:	80 81       	ld	r24, Z
    29a4:	88 23       	and	r24, r24
    29a6:	09 f0       	breq	.+2      	; 0x29aa <main+0x88c>
    29a8:	bd c0       	rjmp	.+378    	; 0x2b24 <main+0xa06>
			Local_u8FrameNum++;
    29aa:	de 01       	movw	r26, r28
    29ac:	ad 59       	subi	r26, 0x9D	; 157
    29ae:	bf 4f       	sbci	r27, 0xFF	; 255
    29b0:	fe 01       	movw	r30, r28
    29b2:	ed 59       	subi	r30, 0x9D	; 157
    29b4:	ff 4f       	sbci	r31, 0xFF	; 255
    29b6:	80 81       	ld	r24, Z
    29b8:	8f 5f       	subi	r24, 0xFF	; 255
    29ba:	8c 93       	st	X, r24
    29bc:	fe 01       	movw	r30, r28
    29be:	e1 5a       	subi	r30, 0xA1	; 161
    29c0:	ff 4f       	sbci	r31, 0xFF	; 255
    29c2:	80 e0       	ldi	r24, 0x00	; 0
    29c4:	90 e0       	ldi	r25, 0x00	; 0
    29c6:	a8 ec       	ldi	r26, 0xC8	; 200
    29c8:	b3 e4       	ldi	r27, 0x43	; 67
    29ca:	80 83       	st	Z, r24
    29cc:	91 83       	std	Z+1, r25	; 0x01
    29ce:	a2 83       	std	Z+2, r26	; 0x02
    29d0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    29d2:	8e 01       	movw	r16, r28
    29d4:	05 5a       	subi	r16, 0xA5	; 165
    29d6:	1f 4f       	sbci	r17, 0xFF	; 255
    29d8:	fe 01       	movw	r30, r28
    29da:	e1 5a       	subi	r30, 0xA1	; 161
    29dc:	ff 4f       	sbci	r31, 0xFF	; 255
    29de:	60 81       	ld	r22, Z
    29e0:	71 81       	ldd	r23, Z+1	; 0x01
    29e2:	82 81       	ldd	r24, Z+2	; 0x02
    29e4:	93 81       	ldd	r25, Z+3	; 0x03
    29e6:	20 e0       	ldi	r18, 0x00	; 0
    29e8:	30 e8       	ldi	r19, 0x80	; 128
    29ea:	4b e3       	ldi	r20, 0x3B	; 59
    29ec:	55 e4       	ldi	r21, 0x45	; 69
    29ee:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    29f2:	dc 01       	movw	r26, r24
    29f4:	cb 01       	movw	r24, r22
    29f6:	f8 01       	movw	r30, r16
    29f8:	80 83       	st	Z, r24
    29fa:	91 83       	std	Z+1, r25	; 0x01
    29fc:	a2 83       	std	Z+2, r26	; 0x02
    29fe:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2a00:	fe 01       	movw	r30, r28
    2a02:	e5 5a       	subi	r30, 0xA5	; 165
    2a04:	ff 4f       	sbci	r31, 0xFF	; 255
    2a06:	60 81       	ld	r22, Z
    2a08:	71 81       	ldd	r23, Z+1	; 0x01
    2a0a:	82 81       	ldd	r24, Z+2	; 0x02
    2a0c:	93 81       	ldd	r25, Z+3	; 0x03
    2a0e:	20 e0       	ldi	r18, 0x00	; 0
    2a10:	30 e0       	ldi	r19, 0x00	; 0
    2a12:	40 e8       	ldi	r20, 0x80	; 128
    2a14:	5f e3       	ldi	r21, 0x3F	; 63
    2a16:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2a1a:	88 23       	and	r24, r24
    2a1c:	44 f4       	brge	.+16     	; 0x2a2e <main+0x910>
		__ticks = 1;
    2a1e:	fe 01       	movw	r30, r28
    2a20:	e7 5a       	subi	r30, 0xA7	; 167
    2a22:	ff 4f       	sbci	r31, 0xFF	; 255
    2a24:	81 e0       	ldi	r24, 0x01	; 1
    2a26:	90 e0       	ldi	r25, 0x00	; 0
    2a28:	91 83       	std	Z+1, r25	; 0x01
    2a2a:	80 83       	st	Z, r24
    2a2c:	64 c0       	rjmp	.+200    	; 0x2af6 <main+0x9d8>
	else if (__tmp > 65535)
    2a2e:	fe 01       	movw	r30, r28
    2a30:	e5 5a       	subi	r30, 0xA5	; 165
    2a32:	ff 4f       	sbci	r31, 0xFF	; 255
    2a34:	60 81       	ld	r22, Z
    2a36:	71 81       	ldd	r23, Z+1	; 0x01
    2a38:	82 81       	ldd	r24, Z+2	; 0x02
    2a3a:	93 81       	ldd	r25, Z+3	; 0x03
    2a3c:	20 e0       	ldi	r18, 0x00	; 0
    2a3e:	3f ef       	ldi	r19, 0xFF	; 255
    2a40:	4f e7       	ldi	r20, 0x7F	; 127
    2a42:	57 e4       	ldi	r21, 0x47	; 71
    2a44:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2a48:	18 16       	cp	r1, r24
    2a4a:	0c f0       	brlt	.+2      	; 0x2a4e <main+0x930>
    2a4c:	43 c0       	rjmp	.+134    	; 0x2ad4 <main+0x9b6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a4e:	fe 01       	movw	r30, r28
    2a50:	e1 5a       	subi	r30, 0xA1	; 161
    2a52:	ff 4f       	sbci	r31, 0xFF	; 255
    2a54:	60 81       	ld	r22, Z
    2a56:	71 81       	ldd	r23, Z+1	; 0x01
    2a58:	82 81       	ldd	r24, Z+2	; 0x02
    2a5a:	93 81       	ldd	r25, Z+3	; 0x03
    2a5c:	20 e0       	ldi	r18, 0x00	; 0
    2a5e:	30 e0       	ldi	r19, 0x00	; 0
    2a60:	40 e2       	ldi	r20, 0x20	; 32
    2a62:	51 e4       	ldi	r21, 0x41	; 65
    2a64:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a68:	dc 01       	movw	r26, r24
    2a6a:	cb 01       	movw	r24, r22
    2a6c:	8e 01       	movw	r16, r28
    2a6e:	07 5a       	subi	r16, 0xA7	; 167
    2a70:	1f 4f       	sbci	r17, 0xFF	; 255
    2a72:	bc 01       	movw	r22, r24
    2a74:	cd 01       	movw	r24, r26
    2a76:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a7a:	dc 01       	movw	r26, r24
    2a7c:	cb 01       	movw	r24, r22
    2a7e:	f8 01       	movw	r30, r16
    2a80:	91 83       	std	Z+1, r25	; 0x01
    2a82:	80 83       	st	Z, r24
    2a84:	1f c0       	rjmp	.+62     	; 0x2ac4 <main+0x9a6>
    2a86:	fe 01       	movw	r30, r28
    2a88:	e9 5a       	subi	r30, 0xA9	; 169
    2a8a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a8c:	8c e2       	ldi	r24, 0x2C	; 44
    2a8e:	91 e0       	ldi	r25, 0x01	; 1
    2a90:	91 83       	std	Z+1, r25	; 0x01
    2a92:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2a94:	fe 01       	movw	r30, r28
    2a96:	e9 5a       	subi	r30, 0xA9	; 169
    2a98:	ff 4f       	sbci	r31, 0xFF	; 255
    2a9a:	80 81       	ld	r24, Z
    2a9c:	91 81       	ldd	r25, Z+1	; 0x01
    2a9e:	01 97       	sbiw	r24, 0x01	; 1
    2aa0:	f1 f7       	brne	.-4      	; 0x2a9e <main+0x980>
    2aa2:	fe 01       	movw	r30, r28
    2aa4:	e9 5a       	subi	r30, 0xA9	; 169
    2aa6:	ff 4f       	sbci	r31, 0xFF	; 255
    2aa8:	91 83       	std	Z+1, r25	; 0x01
    2aaa:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2aac:	de 01       	movw	r26, r28
    2aae:	a7 5a       	subi	r26, 0xA7	; 167
    2ab0:	bf 4f       	sbci	r27, 0xFF	; 255
    2ab2:	fe 01       	movw	r30, r28
    2ab4:	e7 5a       	subi	r30, 0xA7	; 167
    2ab6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ab8:	80 81       	ld	r24, Z
    2aba:	91 81       	ldd	r25, Z+1	; 0x01
    2abc:	01 97       	sbiw	r24, 0x01	; 1
    2abe:	11 96       	adiw	r26, 0x01	; 1
    2ac0:	9c 93       	st	X, r25
    2ac2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ac4:	fe 01       	movw	r30, r28
    2ac6:	e7 5a       	subi	r30, 0xA7	; 167
    2ac8:	ff 4f       	sbci	r31, 0xFF	; 255
    2aca:	80 81       	ld	r24, Z
    2acc:	91 81       	ldd	r25, Z+1	; 0x01
    2ace:	00 97       	sbiw	r24, 0x00	; 0
    2ad0:	d1 f6       	brne	.-76     	; 0x2a86 <main+0x968>
    2ad2:	28 c0       	rjmp	.+80     	; 0x2b24 <main+0xa06>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2ad4:	8e 01       	movw	r16, r28
    2ad6:	07 5a       	subi	r16, 0xA7	; 167
    2ad8:	1f 4f       	sbci	r17, 0xFF	; 255
    2ada:	fe 01       	movw	r30, r28
    2adc:	e5 5a       	subi	r30, 0xA5	; 165
    2ade:	ff 4f       	sbci	r31, 0xFF	; 255
    2ae0:	60 81       	ld	r22, Z
    2ae2:	71 81       	ldd	r23, Z+1	; 0x01
    2ae4:	82 81       	ldd	r24, Z+2	; 0x02
    2ae6:	93 81       	ldd	r25, Z+3	; 0x03
    2ae8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2aec:	dc 01       	movw	r26, r24
    2aee:	cb 01       	movw	r24, r22
    2af0:	f8 01       	movw	r30, r16
    2af2:	91 83       	std	Z+1, r25	; 0x01
    2af4:	80 83       	st	Z, r24
    2af6:	de 01       	movw	r26, r28
    2af8:	ab 5a       	subi	r26, 0xAB	; 171
    2afa:	bf 4f       	sbci	r27, 0xFF	; 255
    2afc:	fe 01       	movw	r30, r28
    2afe:	e7 5a       	subi	r30, 0xA7	; 167
    2b00:	ff 4f       	sbci	r31, 0xFF	; 255
    2b02:	80 81       	ld	r24, Z
    2b04:	91 81       	ldd	r25, Z+1	; 0x01
    2b06:	11 96       	adiw	r26, 0x01	; 1
    2b08:	9c 93       	st	X, r25
    2b0a:	8e 93       	st	-X, r24
    2b0c:	fe 01       	movw	r30, r28
    2b0e:	eb 5a       	subi	r30, 0xAB	; 171
    2b10:	ff 4f       	sbci	r31, 0xFF	; 255
    2b12:	80 81       	ld	r24, Z
    2b14:	91 81       	ldd	r25, Z+1	; 0x01
    2b16:	01 97       	sbiw	r24, 0x01	; 1
    2b18:	f1 f7       	brne	.-4      	; 0x2b16 <main+0x9f8>
    2b1a:	fe 01       	movw	r30, r28
    2b1c:	eb 5a       	subi	r30, 0xAB	; 171
    2b1e:	ff 4f       	sbci	r31, 0xFF	; 255
    2b20:	91 83       	std	Z+1, r25	; 0x01
    2b22:	80 83       	st	Z, r24
			_delay_ms(400);
		}
		if(Local_u8FrameNum>2)
    2b24:	fe 01       	movw	r30, r28
    2b26:	ed 59       	subi	r30, 0x9D	; 157
    2b28:	ff 4f       	sbci	r31, 0xFF	; 255
    2b2a:	80 81       	ld	r24, Z
    2b2c:	83 30       	cpi	r24, 0x03	; 3
    2b2e:	20 f0       	brcs	.+8      	; 0x2b38 <main+0xa1a>
			Local_u8FrameNum=0;
    2b30:	fe 01       	movw	r30, r28
    2b32:	ed 59       	subi	r30, 0x9D	; 157
    2b34:	ff 4f       	sbci	r31, 0xFF	; 255
    2b36:	10 82       	st	Z, r1
		if(Local_u8FrameNum==0){
    2b38:	fe 01       	movw	r30, r28
    2b3a:	ed 59       	subi	r30, 0x9D	; 157
    2b3c:	ff 4f       	sbci	r31, 0xFF	; 255
    2b3e:	80 81       	ld	r24, Z
    2b40:	88 23       	and	r24, r24
    2b42:	09 f0       	breq	.+2      	; 0x2b46 <main+0xa28>
    2b44:	73 c1       	rjmp	.+742    	; 0x2e2c <main+0xd0e>
		 LCD_voidWriteCmd(1);
    2b46:	81 e0       	ldi	r24, 0x01	; 1
    2b48:	0e 94 a5 0e 	call	0x1d4a	; 0x1d4a <LCD_voidWriteCmd>
		 LCD_u8GoToXY(1, 0);
    2b4c:	81 e0       	ldi	r24, 0x01	; 1
    2b4e:	60 e0       	ldi	r22, 0x00	; 0
    2b50:	0e 94 b8 0f 	call	0x1f70	; 0x1f70 <LCD_u8GoToXY>
		 LCD_voidWriteString(" Hello ");
    2b54:	80 e6       	ldi	r24, 0x60	; 96
    2b56:	90 e0       	ldi	r25, 0x00	; 0
    2b58:	0e 94 8f 0f 	call	0x1f1e	; 0x1f1e <LCD_voidWriteString>
		 LCD_u8GoToXY(2, 0);
    2b5c:	82 e0       	ldi	r24, 0x02	; 2
    2b5e:	60 e0       	ldi	r22, 0x00	; 0
    2b60:	0e 94 b8 0f 	call	0x1f70	; 0x1f70 <LCD_u8GoToXY>
		 LCD_voidWriteString("I'm Tarek");
    2b64:	88 e6       	ldi	r24, 0x68	; 104
    2b66:	90 e0       	ldi	r25, 0x00	; 0
    2b68:	0e 94 8f 0f 	call	0x1f1e	; 0x1f1e <LCD_voidWriteString>
		 LCD_voidWriteSpecialChar(Arr1, 0, 1, 13);
    2b6c:	ce 01       	movw	r24, r28
    2b6e:	8b 59       	subi	r24, 0x9B	; 155
    2b70:	9f 4f       	sbci	r25, 0xFF	; 255
    2b72:	60 e0       	ldi	r22, 0x00	; 0
    2b74:	41 e0       	ldi	r20, 0x01	; 1
    2b76:	2d e0       	ldi	r18, 0x0D	; 13
    2b78:	0e 94 4e 10 	call	0x209c	; 0x209c <LCD_voidWriteSpecialChar>
		 LCD_voidWriteSpecialChar(Arr4, 2, 2, 12);
    2b7c:	ce 01       	movw	r24, r28
    2b7e:	83 58       	subi	r24, 0x83	; 131
    2b80:	9f 4f       	sbci	r25, 0xFF	; 255
    2b82:	62 e0       	ldi	r22, 0x02	; 2
    2b84:	42 e0       	ldi	r20, 0x02	; 2
    2b86:	2c e0       	ldi	r18, 0x0C	; 12
    2b88:	0e 94 4e 10 	call	0x209c	; 0x209c <LCD_voidWriteSpecialChar>
		 LCD_voidWriteSpecialChar(Arr5, 3, 2, 13);
    2b8c:	ce 01       	movw	r24, r28
    2b8e:	8b 57       	subi	r24, 0x7B	; 123
    2b90:	9f 4f       	sbci	r25, 0xFF	; 255
    2b92:	63 e0       	ldi	r22, 0x03	; 3
    2b94:	42 e0       	ldi	r20, 0x02	; 2
    2b96:	2d e0       	ldi	r18, 0x0D	; 13
    2b98:	0e 94 4e 10 	call	0x209c	; 0x209c <LCD_voidWriteSpecialChar>
		 LCD_voidWriteSpecialChar(Arr2, 1, 1, 12);
    2b9c:	ce 01       	movw	r24, r28
    2b9e:	83 59       	subi	r24, 0x93	; 147
    2ba0:	9f 4f       	sbci	r25, 0xFF	; 255
    2ba2:	61 e0       	ldi	r22, 0x01	; 1
    2ba4:	41 e0       	ldi	r20, 0x01	; 1
    2ba6:	2c e0       	ldi	r18, 0x0C	; 12
    2ba8:	0e 94 4e 10 	call	0x209c	; 0x209c <LCD_voidWriteSpecialChar>
    2bac:	fe 01       	movw	r30, r28
    2bae:	ef 5a       	subi	r30, 0xAF	; 175
    2bb0:	ff 4f       	sbci	r31, 0xFF	; 255
    2bb2:	80 e0       	ldi	r24, 0x00	; 0
    2bb4:	90 e0       	ldi	r25, 0x00	; 0
    2bb6:	a6 e9       	ldi	r26, 0x96	; 150
    2bb8:	b3 e4       	ldi	r27, 0x43	; 67
    2bba:	80 83       	st	Z, r24
    2bbc:	91 83       	std	Z+1, r25	; 0x01
    2bbe:	a2 83       	std	Z+2, r26	; 0x02
    2bc0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2bc2:	8e 01       	movw	r16, r28
    2bc4:	03 5b       	subi	r16, 0xB3	; 179
    2bc6:	1f 4f       	sbci	r17, 0xFF	; 255
    2bc8:	fe 01       	movw	r30, r28
    2bca:	ef 5a       	subi	r30, 0xAF	; 175
    2bcc:	ff 4f       	sbci	r31, 0xFF	; 255
    2bce:	60 81       	ld	r22, Z
    2bd0:	71 81       	ldd	r23, Z+1	; 0x01
    2bd2:	82 81       	ldd	r24, Z+2	; 0x02
    2bd4:	93 81       	ldd	r25, Z+3	; 0x03
    2bd6:	20 e0       	ldi	r18, 0x00	; 0
    2bd8:	30 e8       	ldi	r19, 0x80	; 128
    2bda:	4b e3       	ldi	r20, 0x3B	; 59
    2bdc:	55 e4       	ldi	r21, 0x45	; 69
    2bde:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2be2:	dc 01       	movw	r26, r24
    2be4:	cb 01       	movw	r24, r22
    2be6:	f8 01       	movw	r30, r16
    2be8:	80 83       	st	Z, r24
    2bea:	91 83       	std	Z+1, r25	; 0x01
    2bec:	a2 83       	std	Z+2, r26	; 0x02
    2bee:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2bf0:	fe 01       	movw	r30, r28
    2bf2:	e3 5b       	subi	r30, 0xB3	; 179
    2bf4:	ff 4f       	sbci	r31, 0xFF	; 255
    2bf6:	60 81       	ld	r22, Z
    2bf8:	71 81       	ldd	r23, Z+1	; 0x01
    2bfa:	82 81       	ldd	r24, Z+2	; 0x02
    2bfc:	93 81       	ldd	r25, Z+3	; 0x03
    2bfe:	20 e0       	ldi	r18, 0x00	; 0
    2c00:	30 e0       	ldi	r19, 0x00	; 0
    2c02:	40 e8       	ldi	r20, 0x80	; 128
    2c04:	5f e3       	ldi	r21, 0x3F	; 63
    2c06:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2c0a:	88 23       	and	r24, r24
    2c0c:	44 f4       	brge	.+16     	; 0x2c1e <main+0xb00>
		__ticks = 1;
    2c0e:	fe 01       	movw	r30, r28
    2c10:	e5 5b       	subi	r30, 0xB5	; 181
    2c12:	ff 4f       	sbci	r31, 0xFF	; 255
    2c14:	81 e0       	ldi	r24, 0x01	; 1
    2c16:	90 e0       	ldi	r25, 0x00	; 0
    2c18:	91 83       	std	Z+1, r25	; 0x01
    2c1a:	80 83       	st	Z, r24
    2c1c:	64 c0       	rjmp	.+200    	; 0x2ce6 <main+0xbc8>
	else if (__tmp > 65535)
    2c1e:	fe 01       	movw	r30, r28
    2c20:	e3 5b       	subi	r30, 0xB3	; 179
    2c22:	ff 4f       	sbci	r31, 0xFF	; 255
    2c24:	60 81       	ld	r22, Z
    2c26:	71 81       	ldd	r23, Z+1	; 0x01
    2c28:	82 81       	ldd	r24, Z+2	; 0x02
    2c2a:	93 81       	ldd	r25, Z+3	; 0x03
    2c2c:	20 e0       	ldi	r18, 0x00	; 0
    2c2e:	3f ef       	ldi	r19, 0xFF	; 255
    2c30:	4f e7       	ldi	r20, 0x7F	; 127
    2c32:	57 e4       	ldi	r21, 0x47	; 71
    2c34:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2c38:	18 16       	cp	r1, r24
    2c3a:	0c f0       	brlt	.+2      	; 0x2c3e <main+0xb20>
    2c3c:	43 c0       	rjmp	.+134    	; 0x2cc4 <main+0xba6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2c3e:	fe 01       	movw	r30, r28
    2c40:	ef 5a       	subi	r30, 0xAF	; 175
    2c42:	ff 4f       	sbci	r31, 0xFF	; 255
    2c44:	60 81       	ld	r22, Z
    2c46:	71 81       	ldd	r23, Z+1	; 0x01
    2c48:	82 81       	ldd	r24, Z+2	; 0x02
    2c4a:	93 81       	ldd	r25, Z+3	; 0x03
    2c4c:	20 e0       	ldi	r18, 0x00	; 0
    2c4e:	30 e0       	ldi	r19, 0x00	; 0
    2c50:	40 e2       	ldi	r20, 0x20	; 32
    2c52:	51 e4       	ldi	r21, 0x41	; 65
    2c54:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c58:	dc 01       	movw	r26, r24
    2c5a:	cb 01       	movw	r24, r22
    2c5c:	8e 01       	movw	r16, r28
    2c5e:	05 5b       	subi	r16, 0xB5	; 181
    2c60:	1f 4f       	sbci	r17, 0xFF	; 255
    2c62:	bc 01       	movw	r22, r24
    2c64:	cd 01       	movw	r24, r26
    2c66:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c6a:	dc 01       	movw	r26, r24
    2c6c:	cb 01       	movw	r24, r22
    2c6e:	f8 01       	movw	r30, r16
    2c70:	91 83       	std	Z+1, r25	; 0x01
    2c72:	80 83       	st	Z, r24
    2c74:	1f c0       	rjmp	.+62     	; 0x2cb4 <main+0xb96>
    2c76:	fe 01       	movw	r30, r28
    2c78:	e7 5b       	subi	r30, 0xB7	; 183
    2c7a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c7c:	8c e2       	ldi	r24, 0x2C	; 44
    2c7e:	91 e0       	ldi	r25, 0x01	; 1
    2c80:	91 83       	std	Z+1, r25	; 0x01
    2c82:	80 83       	st	Z, r24
    2c84:	fe 01       	movw	r30, r28
    2c86:	e7 5b       	subi	r30, 0xB7	; 183
    2c88:	ff 4f       	sbci	r31, 0xFF	; 255
    2c8a:	80 81       	ld	r24, Z
    2c8c:	91 81       	ldd	r25, Z+1	; 0x01
    2c8e:	01 97       	sbiw	r24, 0x01	; 1
    2c90:	f1 f7       	brne	.-4      	; 0x2c8e <main+0xb70>
    2c92:	fe 01       	movw	r30, r28
    2c94:	e7 5b       	subi	r30, 0xB7	; 183
    2c96:	ff 4f       	sbci	r31, 0xFF	; 255
    2c98:	91 83       	std	Z+1, r25	; 0x01
    2c9a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c9c:	de 01       	movw	r26, r28
    2c9e:	a5 5b       	subi	r26, 0xB5	; 181
    2ca0:	bf 4f       	sbci	r27, 0xFF	; 255
    2ca2:	fe 01       	movw	r30, r28
    2ca4:	e5 5b       	subi	r30, 0xB5	; 181
    2ca6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ca8:	80 81       	ld	r24, Z
    2caa:	91 81       	ldd	r25, Z+1	; 0x01
    2cac:	01 97       	sbiw	r24, 0x01	; 1
    2cae:	11 96       	adiw	r26, 0x01	; 1
    2cb0:	9c 93       	st	X, r25
    2cb2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2cb4:	fe 01       	movw	r30, r28
    2cb6:	e5 5b       	subi	r30, 0xB5	; 181
    2cb8:	ff 4f       	sbci	r31, 0xFF	; 255
    2cba:	80 81       	ld	r24, Z
    2cbc:	91 81       	ldd	r25, Z+1	; 0x01
    2cbe:	00 97       	sbiw	r24, 0x00	; 0
    2cc0:	d1 f6       	brne	.-76     	; 0x2c76 <main+0xb58>
    2cc2:	27 c0       	rjmp	.+78     	; 0x2d12 <main+0xbf4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2cc4:	8e 01       	movw	r16, r28
    2cc6:	05 5b       	subi	r16, 0xB5	; 181
    2cc8:	1f 4f       	sbci	r17, 0xFF	; 255
    2cca:	fe 01       	movw	r30, r28
    2ccc:	e3 5b       	subi	r30, 0xB3	; 179
    2cce:	ff 4f       	sbci	r31, 0xFF	; 255
    2cd0:	60 81       	ld	r22, Z
    2cd2:	71 81       	ldd	r23, Z+1	; 0x01
    2cd4:	82 81       	ldd	r24, Z+2	; 0x02
    2cd6:	93 81       	ldd	r25, Z+3	; 0x03
    2cd8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2cdc:	dc 01       	movw	r26, r24
    2cde:	cb 01       	movw	r24, r22
    2ce0:	f8 01       	movw	r30, r16
    2ce2:	91 83       	std	Z+1, r25	; 0x01
    2ce4:	80 83       	st	Z, r24
    2ce6:	de 01       	movw	r26, r28
    2ce8:	a9 5b       	subi	r26, 0xB9	; 185
    2cea:	bf 4f       	sbci	r27, 0xFF	; 255
    2cec:	fe 01       	movw	r30, r28
    2cee:	e5 5b       	subi	r30, 0xB5	; 181
    2cf0:	ff 4f       	sbci	r31, 0xFF	; 255
    2cf2:	80 81       	ld	r24, Z
    2cf4:	91 81       	ldd	r25, Z+1	; 0x01
    2cf6:	8d 93       	st	X+, r24
    2cf8:	9c 93       	st	X, r25
    2cfa:	fe 01       	movw	r30, r28
    2cfc:	e9 5b       	subi	r30, 0xB9	; 185
    2cfe:	ff 4f       	sbci	r31, 0xFF	; 255
    2d00:	80 81       	ld	r24, Z
    2d02:	91 81       	ldd	r25, Z+1	; 0x01
    2d04:	01 97       	sbiw	r24, 0x01	; 1
    2d06:	f1 f7       	brne	.-4      	; 0x2d04 <main+0xbe6>
    2d08:	fe 01       	movw	r30, r28
    2d0a:	e9 5b       	subi	r30, 0xB9	; 185
    2d0c:	ff 4f       	sbci	r31, 0xFF	; 255
    2d0e:	91 83       	std	Z+1, r25	; 0x01
    2d10:	80 83       	st	Z, r24
		 _delay_ms(300);
		 LCD_voidWriteSpecialChar(Arr3, 1, 1, 12);
    2d12:	ce 01       	movw	r24, r28
    2d14:	8b 58       	subi	r24, 0x8B	; 139
    2d16:	9f 4f       	sbci	r25, 0xFF	; 255
    2d18:	61 e0       	ldi	r22, 0x01	; 1
    2d1a:	41 e0       	ldi	r20, 0x01	; 1
    2d1c:	2c e0       	ldi	r18, 0x0C	; 12
    2d1e:	0e 94 4e 10 	call	0x209c	; 0x209c <LCD_voidWriteSpecialChar>
    2d22:	fe 01       	movw	r30, r28
    2d24:	ed 5b       	subi	r30, 0xBD	; 189
    2d26:	ff 4f       	sbci	r31, 0xFF	; 255
    2d28:	80 e0       	ldi	r24, 0x00	; 0
    2d2a:	90 e0       	ldi	r25, 0x00	; 0
    2d2c:	a6 e9       	ldi	r26, 0x96	; 150
    2d2e:	b3 e4       	ldi	r27, 0x43	; 67
    2d30:	80 83       	st	Z, r24
    2d32:	91 83       	std	Z+1, r25	; 0x01
    2d34:	a2 83       	std	Z+2, r26	; 0x02
    2d36:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d38:	8e 01       	movw	r16, r28
    2d3a:	01 5c       	subi	r16, 0xC1	; 193
    2d3c:	1f 4f       	sbci	r17, 0xFF	; 255
    2d3e:	fe 01       	movw	r30, r28
    2d40:	ed 5b       	subi	r30, 0xBD	; 189
    2d42:	ff 4f       	sbci	r31, 0xFF	; 255
    2d44:	60 81       	ld	r22, Z
    2d46:	71 81       	ldd	r23, Z+1	; 0x01
    2d48:	82 81       	ldd	r24, Z+2	; 0x02
    2d4a:	93 81       	ldd	r25, Z+3	; 0x03
    2d4c:	20 e0       	ldi	r18, 0x00	; 0
    2d4e:	30 e8       	ldi	r19, 0x80	; 128
    2d50:	4b e3       	ldi	r20, 0x3B	; 59
    2d52:	55 e4       	ldi	r21, 0x45	; 69
    2d54:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d58:	dc 01       	movw	r26, r24
    2d5a:	cb 01       	movw	r24, r22
    2d5c:	f8 01       	movw	r30, r16
    2d5e:	80 83       	st	Z, r24
    2d60:	91 83       	std	Z+1, r25	; 0x01
    2d62:	a2 83       	std	Z+2, r26	; 0x02
    2d64:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2d66:	fe 01       	movw	r30, r28
    2d68:	ff 96       	adiw	r30, 0x3f	; 63
    2d6a:	60 81       	ld	r22, Z
    2d6c:	71 81       	ldd	r23, Z+1	; 0x01
    2d6e:	82 81       	ldd	r24, Z+2	; 0x02
    2d70:	93 81       	ldd	r25, Z+3	; 0x03
    2d72:	20 e0       	ldi	r18, 0x00	; 0
    2d74:	30 e0       	ldi	r19, 0x00	; 0
    2d76:	40 e8       	ldi	r20, 0x80	; 128
    2d78:	5f e3       	ldi	r21, 0x3F	; 63
    2d7a:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2d7e:	88 23       	and	r24, r24
    2d80:	2c f4       	brge	.+10     	; 0x2d8c <main+0xc6e>
		__ticks = 1;
    2d82:	81 e0       	ldi	r24, 0x01	; 1
    2d84:	90 e0       	ldi	r25, 0x00	; 0
    2d86:	9e af       	std	Y+62, r25	; 0x3e
    2d88:	8d af       	std	Y+61, r24	; 0x3d
    2d8a:	46 c0       	rjmp	.+140    	; 0x2e18 <main+0xcfa>
	else if (__tmp > 65535)
    2d8c:	fe 01       	movw	r30, r28
    2d8e:	ff 96       	adiw	r30, 0x3f	; 63
    2d90:	60 81       	ld	r22, Z
    2d92:	71 81       	ldd	r23, Z+1	; 0x01
    2d94:	82 81       	ldd	r24, Z+2	; 0x02
    2d96:	93 81       	ldd	r25, Z+3	; 0x03
    2d98:	20 e0       	ldi	r18, 0x00	; 0
    2d9a:	3f ef       	ldi	r19, 0xFF	; 255
    2d9c:	4f e7       	ldi	r20, 0x7F	; 127
    2d9e:	57 e4       	ldi	r21, 0x47	; 71
    2da0:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2da4:	18 16       	cp	r1, r24
    2da6:	64 f5       	brge	.+88     	; 0x2e00 <main+0xce2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2da8:	fe 01       	movw	r30, r28
    2daa:	ed 5b       	subi	r30, 0xBD	; 189
    2dac:	ff 4f       	sbci	r31, 0xFF	; 255
    2dae:	60 81       	ld	r22, Z
    2db0:	71 81       	ldd	r23, Z+1	; 0x01
    2db2:	82 81       	ldd	r24, Z+2	; 0x02
    2db4:	93 81       	ldd	r25, Z+3	; 0x03
    2db6:	20 e0       	ldi	r18, 0x00	; 0
    2db8:	30 e0       	ldi	r19, 0x00	; 0
    2dba:	40 e2       	ldi	r20, 0x20	; 32
    2dbc:	51 e4       	ldi	r21, 0x41	; 65
    2dbe:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2dc2:	dc 01       	movw	r26, r24
    2dc4:	cb 01       	movw	r24, r22
    2dc6:	bc 01       	movw	r22, r24
    2dc8:	cd 01       	movw	r24, r26
    2dca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2dce:	dc 01       	movw	r26, r24
    2dd0:	cb 01       	movw	r24, r22
    2dd2:	9e af       	std	Y+62, r25	; 0x3e
    2dd4:	8d af       	std	Y+61, r24	; 0x3d
    2dd6:	0f c0       	rjmp	.+30     	; 0x2df6 <main+0xcd8>
    2dd8:	8c e2       	ldi	r24, 0x2C	; 44
    2dda:	91 e0       	ldi	r25, 0x01	; 1
    2ddc:	9c af       	std	Y+60, r25	; 0x3c
    2dde:	8b af       	std	Y+59, r24	; 0x3b
    2de0:	8b ad       	ldd	r24, Y+59	; 0x3b
    2de2:	9c ad       	ldd	r25, Y+60	; 0x3c
    2de4:	01 97       	sbiw	r24, 0x01	; 1
    2de6:	f1 f7       	brne	.-4      	; 0x2de4 <main+0xcc6>
    2de8:	9c af       	std	Y+60, r25	; 0x3c
    2dea:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2dec:	8d ad       	ldd	r24, Y+61	; 0x3d
    2dee:	9e ad       	ldd	r25, Y+62	; 0x3e
    2df0:	01 97       	sbiw	r24, 0x01	; 1
    2df2:	9e af       	std	Y+62, r25	; 0x3e
    2df4:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2df6:	8d ad       	ldd	r24, Y+61	; 0x3d
    2df8:	9e ad       	ldd	r25, Y+62	; 0x3e
    2dfa:	00 97       	sbiw	r24, 0x00	; 0
    2dfc:	69 f7       	brne	.-38     	; 0x2dd8 <main+0xcba>
    2dfe:	16 c0       	rjmp	.+44     	; 0x2e2c <main+0xd0e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e00:	fe 01       	movw	r30, r28
    2e02:	ff 96       	adiw	r30, 0x3f	; 63
    2e04:	60 81       	ld	r22, Z
    2e06:	71 81       	ldd	r23, Z+1	; 0x01
    2e08:	82 81       	ldd	r24, Z+2	; 0x02
    2e0a:	93 81       	ldd	r25, Z+3	; 0x03
    2e0c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e10:	dc 01       	movw	r26, r24
    2e12:	cb 01       	movw	r24, r22
    2e14:	9e af       	std	Y+62, r25	; 0x3e
    2e16:	8d af       	std	Y+61, r24	; 0x3d
    2e18:	8d ad       	ldd	r24, Y+61	; 0x3d
    2e1a:	9e ad       	ldd	r25, Y+62	; 0x3e
    2e1c:	9a af       	std	Y+58, r25	; 0x3a
    2e1e:	89 af       	std	Y+57, r24	; 0x39
    2e20:	89 ad       	ldd	r24, Y+57	; 0x39
    2e22:	9a ad       	ldd	r25, Y+58	; 0x3a
    2e24:	01 97       	sbiw	r24, 0x01	; 1
    2e26:	f1 f7       	brne	.-4      	; 0x2e24 <main+0xd06>
    2e28:	9a af       	std	Y+58, r25	; 0x3a
    2e2a:	89 af       	std	Y+57, r24	; 0x39
		 _delay_ms(300);
		 }
		 if(Local_u8FrameNum==1){
    2e2c:	fe 01       	movw	r30, r28
    2e2e:	ed 59       	subi	r30, 0x9D	; 157
    2e30:	ff 4f       	sbci	r31, 0xFF	; 255
    2e32:	80 81       	ld	r24, Z
    2e34:	81 30       	cpi	r24, 0x01	; 1
    2e36:	09 f0       	breq	.+2      	; 0x2e3a <main+0xd1c>
    2e38:	27 c1       	rjmp	.+590    	; 0x3088 <main+0xf6a>
		 LCD_voidWriteCmd(1);
    2e3a:	81 e0       	ldi	r24, 0x01	; 1
    2e3c:	0e 94 a5 0e 	call	0x1d4a	; 0x1d4a <LCD_voidWriteCmd>
		 LCD_u8GoToXY(1, 0);
    2e40:	81 e0       	ldi	r24, 0x01	; 1
    2e42:	60 e0       	ldi	r22, 0x00	; 0
    2e44:	0e 94 b8 0f 	call	0x1f70	; 0x1f70 <LCD_u8GoToXY>
		 LCD_voidWriteString(" I can play");
    2e48:	82 e7       	ldi	r24, 0x72	; 114
    2e4a:	90 e0       	ldi	r25, 0x00	; 0
    2e4c:	0e 94 8f 0f 	call	0x1f1e	; 0x1f1e <LCD_voidWriteString>
		 LCD_u8GoToXY(2, 0);
    2e50:	82 e0       	ldi	r24, 0x02	; 2
    2e52:	60 e0       	ldi	r22, 0x00	; 0
    2e54:	0e 94 b8 0f 	call	0x1f70	; 0x1f70 <LCD_u8GoToXY>
		 LCD_voidWriteString("football");
    2e58:	8e e7       	ldi	r24, 0x7E	; 126
    2e5a:	90 e0       	ldi	r25, 0x00	; 0
    2e5c:	0e 94 8f 0f 	call	0x1f1e	; 0x1f1e <LCD_voidWriteString>
		 LCD_voidWriteSpecialChar(Arr1, 0, 1, 14);
    2e60:	ce 01       	movw	r24, r28
    2e62:	8b 59       	subi	r24, 0x9B	; 155
    2e64:	9f 4f       	sbci	r25, 0xFF	; 255
    2e66:	60 e0       	ldi	r22, 0x00	; 0
    2e68:	41 e0       	ldi	r20, 0x01	; 1
    2e6a:	2e e0       	ldi	r18, 0x0E	; 14
    2e6c:	0e 94 4e 10 	call	0x209c	; 0x209c <LCD_voidWriteSpecialChar>
		 LCD_voidWriteSpecialChar(Arr7, 2, 2, 13);
    2e70:	ce 01       	movw	r24, r28
    2e72:	8b 56       	subi	r24, 0x6B	; 107
    2e74:	9f 4f       	sbci	r25, 0xFF	; 255
    2e76:	62 e0       	ldi	r22, 0x02	; 2
    2e78:	42 e0       	ldi	r20, 0x02	; 2
    2e7a:	2d e0       	ldi	r18, 0x0D	; 13
    2e7c:	0e 94 4e 10 	call	0x209c	; 0x209c <LCD_voidWriteSpecialChar>
		 LCD_voidWriteSpecialChar(Arr5, 3, 2, 14);
    2e80:	ce 01       	movw	r24, r28
    2e82:	8b 57       	subi	r24, 0x7B	; 123
    2e84:	9f 4f       	sbci	r25, 0xFF	; 255
    2e86:	63 e0       	ldi	r22, 0x03	; 3
    2e88:	42 e0       	ldi	r20, 0x02	; 2
    2e8a:	2e e0       	ldi	r18, 0x0E	; 14
    2e8c:	0e 94 4e 10 	call	0x209c	; 0x209c <LCD_voidWriteSpecialChar>
		 LCD_voidWriteSpecialChar(Arr6, 1, 1, 13);
    2e90:	ce 01       	movw	r24, r28
    2e92:	83 57       	subi	r24, 0x73	; 115
    2e94:	9f 4f       	sbci	r25, 0xFF	; 255
    2e96:	61 e0       	ldi	r22, 0x01	; 1
    2e98:	41 e0       	ldi	r20, 0x01	; 1
    2e9a:	2d e0       	ldi	r18, 0x0D	; 13
    2e9c:	0e 94 4e 10 	call	0x209c	; 0x209c <LCD_voidWriteSpecialChar>
    2ea0:	80 e0       	ldi	r24, 0x00	; 0
    2ea2:	90 e0       	ldi	r25, 0x00	; 0
    2ea4:	a6 e9       	ldi	r26, 0x96	; 150
    2ea6:	b3 e4       	ldi	r27, 0x43	; 67
    2ea8:	8d ab       	std	Y+53, r24	; 0x35
    2eaa:	9e ab       	std	Y+54, r25	; 0x36
    2eac:	af ab       	std	Y+55, r26	; 0x37
    2eae:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2eb0:	6d a9       	ldd	r22, Y+53	; 0x35
    2eb2:	7e a9       	ldd	r23, Y+54	; 0x36
    2eb4:	8f a9       	ldd	r24, Y+55	; 0x37
    2eb6:	98 ad       	ldd	r25, Y+56	; 0x38
    2eb8:	20 e0       	ldi	r18, 0x00	; 0
    2eba:	30 e8       	ldi	r19, 0x80	; 128
    2ebc:	4b e3       	ldi	r20, 0x3B	; 59
    2ebe:	55 e4       	ldi	r21, 0x45	; 69
    2ec0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ec4:	dc 01       	movw	r26, r24
    2ec6:	cb 01       	movw	r24, r22
    2ec8:	89 ab       	std	Y+49, r24	; 0x31
    2eca:	9a ab       	std	Y+50, r25	; 0x32
    2ecc:	ab ab       	std	Y+51, r26	; 0x33
    2ece:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2ed0:	69 a9       	ldd	r22, Y+49	; 0x31
    2ed2:	7a a9       	ldd	r23, Y+50	; 0x32
    2ed4:	8b a9       	ldd	r24, Y+51	; 0x33
    2ed6:	9c a9       	ldd	r25, Y+52	; 0x34
    2ed8:	20 e0       	ldi	r18, 0x00	; 0
    2eda:	30 e0       	ldi	r19, 0x00	; 0
    2edc:	40 e8       	ldi	r20, 0x80	; 128
    2ede:	5f e3       	ldi	r21, 0x3F	; 63
    2ee0:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2ee4:	88 23       	and	r24, r24
    2ee6:	2c f4       	brge	.+10     	; 0x2ef2 <main+0xdd4>
		__ticks = 1;
    2ee8:	81 e0       	ldi	r24, 0x01	; 1
    2eea:	90 e0       	ldi	r25, 0x00	; 0
    2eec:	98 ab       	std	Y+48, r25	; 0x30
    2eee:	8f a7       	std	Y+47, r24	; 0x2f
    2ef0:	3f c0       	rjmp	.+126    	; 0x2f70 <main+0xe52>
	else if (__tmp > 65535)
    2ef2:	69 a9       	ldd	r22, Y+49	; 0x31
    2ef4:	7a a9       	ldd	r23, Y+50	; 0x32
    2ef6:	8b a9       	ldd	r24, Y+51	; 0x33
    2ef8:	9c a9       	ldd	r25, Y+52	; 0x34
    2efa:	20 e0       	ldi	r18, 0x00	; 0
    2efc:	3f ef       	ldi	r19, 0xFF	; 255
    2efe:	4f e7       	ldi	r20, 0x7F	; 127
    2f00:	57 e4       	ldi	r21, 0x47	; 71
    2f02:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    2f06:	18 16       	cp	r1, r24
    2f08:	4c f5       	brge	.+82     	; 0x2f5c <main+0xe3e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f0a:	6d a9       	ldd	r22, Y+53	; 0x35
    2f0c:	7e a9       	ldd	r23, Y+54	; 0x36
    2f0e:	8f a9       	ldd	r24, Y+55	; 0x37
    2f10:	98 ad       	ldd	r25, Y+56	; 0x38
    2f12:	20 e0       	ldi	r18, 0x00	; 0
    2f14:	30 e0       	ldi	r19, 0x00	; 0
    2f16:	40 e2       	ldi	r20, 0x20	; 32
    2f18:	51 e4       	ldi	r21, 0x41	; 65
    2f1a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f1e:	dc 01       	movw	r26, r24
    2f20:	cb 01       	movw	r24, r22
    2f22:	bc 01       	movw	r22, r24
    2f24:	cd 01       	movw	r24, r26
    2f26:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f2a:	dc 01       	movw	r26, r24
    2f2c:	cb 01       	movw	r24, r22
    2f2e:	98 ab       	std	Y+48, r25	; 0x30
    2f30:	8f a7       	std	Y+47, r24	; 0x2f
    2f32:	0f c0       	rjmp	.+30     	; 0x2f52 <main+0xe34>
    2f34:	8c e2       	ldi	r24, 0x2C	; 44
    2f36:	91 e0       	ldi	r25, 0x01	; 1
    2f38:	9e a7       	std	Y+46, r25	; 0x2e
    2f3a:	8d a7       	std	Y+45, r24	; 0x2d
    2f3c:	8d a5       	ldd	r24, Y+45	; 0x2d
    2f3e:	9e a5       	ldd	r25, Y+46	; 0x2e
    2f40:	01 97       	sbiw	r24, 0x01	; 1
    2f42:	f1 f7       	brne	.-4      	; 0x2f40 <main+0xe22>
    2f44:	9e a7       	std	Y+46, r25	; 0x2e
    2f46:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2f48:	8f a5       	ldd	r24, Y+47	; 0x2f
    2f4a:	98 a9       	ldd	r25, Y+48	; 0x30
    2f4c:	01 97       	sbiw	r24, 0x01	; 1
    2f4e:	98 ab       	std	Y+48, r25	; 0x30
    2f50:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f52:	8f a5       	ldd	r24, Y+47	; 0x2f
    2f54:	98 a9       	ldd	r25, Y+48	; 0x30
    2f56:	00 97       	sbiw	r24, 0x00	; 0
    2f58:	69 f7       	brne	.-38     	; 0x2f34 <main+0xe16>
    2f5a:	14 c0       	rjmp	.+40     	; 0x2f84 <main+0xe66>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f5c:	69 a9       	ldd	r22, Y+49	; 0x31
    2f5e:	7a a9       	ldd	r23, Y+50	; 0x32
    2f60:	8b a9       	ldd	r24, Y+51	; 0x33
    2f62:	9c a9       	ldd	r25, Y+52	; 0x34
    2f64:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f68:	dc 01       	movw	r26, r24
    2f6a:	cb 01       	movw	r24, r22
    2f6c:	98 ab       	std	Y+48, r25	; 0x30
    2f6e:	8f a7       	std	Y+47, r24	; 0x2f
    2f70:	8f a5       	ldd	r24, Y+47	; 0x2f
    2f72:	98 a9       	ldd	r25, Y+48	; 0x30
    2f74:	9c a7       	std	Y+44, r25	; 0x2c
    2f76:	8b a7       	std	Y+43, r24	; 0x2b
    2f78:	8b a5       	ldd	r24, Y+43	; 0x2b
    2f7a:	9c a5       	ldd	r25, Y+44	; 0x2c
    2f7c:	01 97       	sbiw	r24, 0x01	; 1
    2f7e:	f1 f7       	brne	.-4      	; 0x2f7c <main+0xe5e>
    2f80:	9c a7       	std	Y+44, r25	; 0x2c
    2f82:	8b a7       	std	Y+43, r24	; 0x2b
		 _delay_ms(300);
		 LCD_voidWriteSpecialChar(Arr8, 2, 2, 13);
    2f84:	ce 01       	movw	r24, r28
    2f86:	83 56       	subi	r24, 0x63	; 99
    2f88:	9f 4f       	sbci	r25, 0xFF	; 255
    2f8a:	62 e0       	ldi	r22, 0x02	; 2
    2f8c:	42 e0       	ldi	r20, 0x02	; 2
    2f8e:	2d e0       	ldi	r18, 0x0D	; 13
    2f90:	0e 94 4e 10 	call	0x209c	; 0x209c <LCD_voidWriteSpecialChar>
		 LCD_voidWriteSpecialChar(Arr9, 1, 1, 13);
    2f94:	ce 01       	movw	r24, r28
    2f96:	8b 55       	subi	r24, 0x5B	; 91
    2f98:	9f 4f       	sbci	r25, 0xFF	; 255
    2f9a:	61 e0       	ldi	r22, 0x01	; 1
    2f9c:	41 e0       	ldi	r20, 0x01	; 1
    2f9e:	2d e0       	ldi	r18, 0x0D	; 13
    2fa0:	0e 94 4e 10 	call	0x209c	; 0x209c <LCD_voidWriteSpecialChar>
    2fa4:	80 e0       	ldi	r24, 0x00	; 0
    2fa6:	90 e0       	ldi	r25, 0x00	; 0
    2fa8:	a6 e9       	ldi	r26, 0x96	; 150
    2faa:	b3 e4       	ldi	r27, 0x43	; 67
    2fac:	8f a3       	std	Y+39, r24	; 0x27
    2fae:	98 a7       	std	Y+40, r25	; 0x28
    2fb0:	a9 a7       	std	Y+41, r26	; 0x29
    2fb2:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2fb4:	6f a1       	ldd	r22, Y+39	; 0x27
    2fb6:	78 a5       	ldd	r23, Y+40	; 0x28
    2fb8:	89 a5       	ldd	r24, Y+41	; 0x29
    2fba:	9a a5       	ldd	r25, Y+42	; 0x2a
    2fbc:	20 e0       	ldi	r18, 0x00	; 0
    2fbe:	30 e8       	ldi	r19, 0x80	; 128
    2fc0:	4b e3       	ldi	r20, 0x3B	; 59
    2fc2:	55 e4       	ldi	r21, 0x45	; 69
    2fc4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2fc8:	dc 01       	movw	r26, r24
    2fca:	cb 01       	movw	r24, r22
    2fcc:	8b a3       	std	Y+35, r24	; 0x23
    2fce:	9c a3       	std	Y+36, r25	; 0x24
    2fd0:	ad a3       	std	Y+37, r26	; 0x25
    2fd2:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2fd4:	6b a1       	ldd	r22, Y+35	; 0x23
    2fd6:	7c a1       	ldd	r23, Y+36	; 0x24
    2fd8:	8d a1       	ldd	r24, Y+37	; 0x25
    2fda:	9e a1       	ldd	r25, Y+38	; 0x26
    2fdc:	20 e0       	ldi	r18, 0x00	; 0
    2fde:	30 e0       	ldi	r19, 0x00	; 0
    2fe0:	40 e8       	ldi	r20, 0x80	; 128
    2fe2:	5f e3       	ldi	r21, 0x3F	; 63
    2fe4:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    2fe8:	88 23       	and	r24, r24
    2fea:	2c f4       	brge	.+10     	; 0x2ff6 <main+0xed8>
		__ticks = 1;
    2fec:	81 e0       	ldi	r24, 0x01	; 1
    2fee:	90 e0       	ldi	r25, 0x00	; 0
    2ff0:	9a a3       	std	Y+34, r25	; 0x22
    2ff2:	89 a3       	std	Y+33, r24	; 0x21
    2ff4:	3f c0       	rjmp	.+126    	; 0x3074 <main+0xf56>
	else if (__tmp > 65535)
    2ff6:	6b a1       	ldd	r22, Y+35	; 0x23
    2ff8:	7c a1       	ldd	r23, Y+36	; 0x24
    2ffa:	8d a1       	ldd	r24, Y+37	; 0x25
    2ffc:	9e a1       	ldd	r25, Y+38	; 0x26
    2ffe:	20 e0       	ldi	r18, 0x00	; 0
    3000:	3f ef       	ldi	r19, 0xFF	; 255
    3002:	4f e7       	ldi	r20, 0x7F	; 127
    3004:	57 e4       	ldi	r21, 0x47	; 71
    3006:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    300a:	18 16       	cp	r1, r24
    300c:	4c f5       	brge	.+82     	; 0x3060 <main+0xf42>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    300e:	6f a1       	ldd	r22, Y+39	; 0x27
    3010:	78 a5       	ldd	r23, Y+40	; 0x28
    3012:	89 a5       	ldd	r24, Y+41	; 0x29
    3014:	9a a5       	ldd	r25, Y+42	; 0x2a
    3016:	20 e0       	ldi	r18, 0x00	; 0
    3018:	30 e0       	ldi	r19, 0x00	; 0
    301a:	40 e2       	ldi	r20, 0x20	; 32
    301c:	51 e4       	ldi	r21, 0x41	; 65
    301e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3022:	dc 01       	movw	r26, r24
    3024:	cb 01       	movw	r24, r22
    3026:	bc 01       	movw	r22, r24
    3028:	cd 01       	movw	r24, r26
    302a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    302e:	dc 01       	movw	r26, r24
    3030:	cb 01       	movw	r24, r22
    3032:	9a a3       	std	Y+34, r25	; 0x22
    3034:	89 a3       	std	Y+33, r24	; 0x21
    3036:	0f c0       	rjmp	.+30     	; 0x3056 <main+0xf38>
    3038:	8c e2       	ldi	r24, 0x2C	; 44
    303a:	91 e0       	ldi	r25, 0x01	; 1
    303c:	98 a3       	std	Y+32, r25	; 0x20
    303e:	8f 8f       	std	Y+31, r24	; 0x1f
    3040:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3042:	98 a1       	ldd	r25, Y+32	; 0x20
    3044:	01 97       	sbiw	r24, 0x01	; 1
    3046:	f1 f7       	brne	.-4      	; 0x3044 <main+0xf26>
    3048:	98 a3       	std	Y+32, r25	; 0x20
    304a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    304c:	89 a1       	ldd	r24, Y+33	; 0x21
    304e:	9a a1       	ldd	r25, Y+34	; 0x22
    3050:	01 97       	sbiw	r24, 0x01	; 1
    3052:	9a a3       	std	Y+34, r25	; 0x22
    3054:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3056:	89 a1       	ldd	r24, Y+33	; 0x21
    3058:	9a a1       	ldd	r25, Y+34	; 0x22
    305a:	00 97       	sbiw	r24, 0x00	; 0
    305c:	69 f7       	brne	.-38     	; 0x3038 <main+0xf1a>
    305e:	14 c0       	rjmp	.+40     	; 0x3088 <main+0xf6a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3060:	6b a1       	ldd	r22, Y+35	; 0x23
    3062:	7c a1       	ldd	r23, Y+36	; 0x24
    3064:	8d a1       	ldd	r24, Y+37	; 0x25
    3066:	9e a1       	ldd	r25, Y+38	; 0x26
    3068:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    306c:	dc 01       	movw	r26, r24
    306e:	cb 01       	movw	r24, r22
    3070:	9a a3       	std	Y+34, r25	; 0x22
    3072:	89 a3       	std	Y+33, r24	; 0x21
    3074:	89 a1       	ldd	r24, Y+33	; 0x21
    3076:	9a a1       	ldd	r25, Y+34	; 0x22
    3078:	9e 8f       	std	Y+30, r25	; 0x1e
    307a:	8d 8f       	std	Y+29, r24	; 0x1d
    307c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    307e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3080:	01 97       	sbiw	r24, 0x01	; 1
    3082:	f1 f7       	brne	.-4      	; 0x3080 <main+0xf62>
    3084:	9e 8f       	std	Y+30, r25	; 0x1e
    3086:	8d 8f       	std	Y+29, r24	; 0x1d
		 _delay_ms(300);}
		 if(Local_u8FrameNum==2){
    3088:	fe 01       	movw	r30, r28
    308a:	ed 59       	subi	r30, 0x9D	; 157
    308c:	ff 4f       	sbci	r31, 0xFF	; 255
    308e:	80 81       	ld	r24, Z
    3090:	82 30       	cpi	r24, 0x02	; 2
    3092:	09 f0       	breq	.+2      	; 0x3096 <main+0xf78>
    3094:	7b cc       	rjmp	.-1802   	; 0x298c <main+0x86e>
		LCD_voidWriteCmd(1);
    3096:	81 e0       	ldi	r24, 0x01	; 1
    3098:	0e 94 a5 0e 	call	0x1d4a	; 0x1d4a <LCD_voidWriteCmd>
		LCD_u8GoToXY(1, 0);
    309c:	81 e0       	ldi	r24, 0x01	; 1
    309e:	60 e0       	ldi	r22, 0x00	; 0
    30a0:	0e 94 b8 0f 	call	0x1f70	; 0x1f70 <LCD_u8GoToXY>
		LCD_voidWriteString(" I can ");
    30a4:	87 e8       	ldi	r24, 0x87	; 135
    30a6:	90 e0       	ldi	r25, 0x00	; 0
    30a8:	0e 94 8f 0f 	call	0x1f1e	; 0x1f1e <LCD_voidWriteString>
		LCD_u8GoToXY(2, 0);
    30ac:	82 e0       	ldi	r24, 0x02	; 2
    30ae:	60 e0       	ldi	r22, 0x00	; 0
    30b0:	0e 94 b8 0f 	call	0x1f70	; 0x1f70 <LCD_u8GoToXY>
		LCD_voidWriteString("dance too");
    30b4:	8f e8       	ldi	r24, 0x8F	; 143
    30b6:	90 e0       	ldi	r25, 0x00	; 0
    30b8:	0e 94 8f 0f 	call	0x1f1e	; 0x1f1e <LCD_voidWriteString>
		LCD_voidWriteSpecialChar(Arr13, 0, 1, 14);
    30bc:	ce 01       	movw	r24, r28
    30be:	8b 53       	subi	r24, 0x3B	; 59
    30c0:	9f 4f       	sbci	r25, 0xFF	; 255
    30c2:	60 e0       	ldi	r22, 0x00	; 0
    30c4:	41 e0       	ldi	r20, 0x01	; 1
    30c6:	2e e0       	ldi	r18, 0x0E	; 14
    30c8:	0e 94 4e 10 	call	0x209c	; 0x209c <LCD_voidWriteSpecialChar>
		LCD_voidWriteSpecialChar(Arr12, 2, 2, 13);
    30cc:	ce 01       	movw	r24, r28
    30ce:	83 54       	subi	r24, 0x43	; 67
    30d0:	9f 4f       	sbci	r25, 0xFF	; 255
    30d2:	62 e0       	ldi	r22, 0x02	; 2
    30d4:	42 e0       	ldi	r20, 0x02	; 2
    30d6:	2d e0       	ldi	r18, 0x0D	; 13
    30d8:	0e 94 4e 10 	call	0x209c	; 0x209c <LCD_voidWriteSpecialChar>
		LCD_voidWriteSpecialChar(Arr5, 3, 2, 14);
    30dc:	ce 01       	movw	r24, r28
    30de:	8b 57       	subi	r24, 0x7B	; 123
    30e0:	9f 4f       	sbci	r25, 0xFF	; 255
    30e2:	63 e0       	ldi	r22, 0x03	; 3
    30e4:	42 e0       	ldi	r20, 0x02	; 2
    30e6:	2e e0       	ldi	r18, 0x0E	; 14
    30e8:	0e 94 4e 10 	call	0x209c	; 0x209c <LCD_voidWriteSpecialChar>
		LCD_voidWriteSpecialChar(Arr11, 1, 1, 13);
    30ec:	ce 01       	movw	r24, r28
    30ee:	8b 54       	subi	r24, 0x4B	; 75
    30f0:	9f 4f       	sbci	r25, 0xFF	; 255
    30f2:	61 e0       	ldi	r22, 0x01	; 1
    30f4:	41 e0       	ldi	r20, 0x01	; 1
    30f6:	2d e0       	ldi	r18, 0x0D	; 13
    30f8:	0e 94 4e 10 	call	0x209c	; 0x209c <LCD_voidWriteSpecialChar>
    30fc:	80 e0       	ldi	r24, 0x00	; 0
    30fe:	90 e0       	ldi	r25, 0x00	; 0
    3100:	a6 e9       	ldi	r26, 0x96	; 150
    3102:	b3 e4       	ldi	r27, 0x43	; 67
    3104:	89 8f       	std	Y+25, r24	; 0x19
    3106:	9a 8f       	std	Y+26, r25	; 0x1a
    3108:	ab 8f       	std	Y+27, r26	; 0x1b
    310a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    310c:	69 8d       	ldd	r22, Y+25	; 0x19
    310e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3110:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3112:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3114:	20 e0       	ldi	r18, 0x00	; 0
    3116:	30 e8       	ldi	r19, 0x80	; 128
    3118:	4b e3       	ldi	r20, 0x3B	; 59
    311a:	55 e4       	ldi	r21, 0x45	; 69
    311c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3120:	dc 01       	movw	r26, r24
    3122:	cb 01       	movw	r24, r22
    3124:	8d 8b       	std	Y+21, r24	; 0x15
    3126:	9e 8b       	std	Y+22, r25	; 0x16
    3128:	af 8b       	std	Y+23, r26	; 0x17
    312a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    312c:	6d 89       	ldd	r22, Y+21	; 0x15
    312e:	7e 89       	ldd	r23, Y+22	; 0x16
    3130:	8f 89       	ldd	r24, Y+23	; 0x17
    3132:	98 8d       	ldd	r25, Y+24	; 0x18
    3134:	20 e0       	ldi	r18, 0x00	; 0
    3136:	30 e0       	ldi	r19, 0x00	; 0
    3138:	40 e8       	ldi	r20, 0x80	; 128
    313a:	5f e3       	ldi	r21, 0x3F	; 63
    313c:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    3140:	88 23       	and	r24, r24
    3142:	2c f4       	brge	.+10     	; 0x314e <main+0x1030>
		__ticks = 1;
    3144:	81 e0       	ldi	r24, 0x01	; 1
    3146:	90 e0       	ldi	r25, 0x00	; 0
    3148:	9c 8b       	std	Y+20, r25	; 0x14
    314a:	8b 8b       	std	Y+19, r24	; 0x13
    314c:	3f c0       	rjmp	.+126    	; 0x31cc <main+0x10ae>
	else if (__tmp > 65535)
    314e:	6d 89       	ldd	r22, Y+21	; 0x15
    3150:	7e 89       	ldd	r23, Y+22	; 0x16
    3152:	8f 89       	ldd	r24, Y+23	; 0x17
    3154:	98 8d       	ldd	r25, Y+24	; 0x18
    3156:	20 e0       	ldi	r18, 0x00	; 0
    3158:	3f ef       	ldi	r19, 0xFF	; 255
    315a:	4f e7       	ldi	r20, 0x7F	; 127
    315c:	57 e4       	ldi	r21, 0x47	; 71
    315e:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3162:	18 16       	cp	r1, r24
    3164:	4c f5       	brge	.+82     	; 0x31b8 <main+0x109a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3166:	69 8d       	ldd	r22, Y+25	; 0x19
    3168:	7a 8d       	ldd	r23, Y+26	; 0x1a
    316a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    316c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    316e:	20 e0       	ldi	r18, 0x00	; 0
    3170:	30 e0       	ldi	r19, 0x00	; 0
    3172:	40 e2       	ldi	r20, 0x20	; 32
    3174:	51 e4       	ldi	r21, 0x41	; 65
    3176:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    317a:	dc 01       	movw	r26, r24
    317c:	cb 01       	movw	r24, r22
    317e:	bc 01       	movw	r22, r24
    3180:	cd 01       	movw	r24, r26
    3182:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3186:	dc 01       	movw	r26, r24
    3188:	cb 01       	movw	r24, r22
    318a:	9c 8b       	std	Y+20, r25	; 0x14
    318c:	8b 8b       	std	Y+19, r24	; 0x13
    318e:	0f c0       	rjmp	.+30     	; 0x31ae <main+0x1090>
    3190:	8c e2       	ldi	r24, 0x2C	; 44
    3192:	91 e0       	ldi	r25, 0x01	; 1
    3194:	9a 8b       	std	Y+18, r25	; 0x12
    3196:	89 8b       	std	Y+17, r24	; 0x11
    3198:	89 89       	ldd	r24, Y+17	; 0x11
    319a:	9a 89       	ldd	r25, Y+18	; 0x12
    319c:	01 97       	sbiw	r24, 0x01	; 1
    319e:	f1 f7       	brne	.-4      	; 0x319c <main+0x107e>
    31a0:	9a 8b       	std	Y+18, r25	; 0x12
    31a2:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    31a4:	8b 89       	ldd	r24, Y+19	; 0x13
    31a6:	9c 89       	ldd	r25, Y+20	; 0x14
    31a8:	01 97       	sbiw	r24, 0x01	; 1
    31aa:	9c 8b       	std	Y+20, r25	; 0x14
    31ac:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    31ae:	8b 89       	ldd	r24, Y+19	; 0x13
    31b0:	9c 89       	ldd	r25, Y+20	; 0x14
    31b2:	00 97       	sbiw	r24, 0x00	; 0
    31b4:	69 f7       	brne	.-38     	; 0x3190 <main+0x1072>
    31b6:	14 c0       	rjmp	.+40     	; 0x31e0 <main+0x10c2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    31b8:	6d 89       	ldd	r22, Y+21	; 0x15
    31ba:	7e 89       	ldd	r23, Y+22	; 0x16
    31bc:	8f 89       	ldd	r24, Y+23	; 0x17
    31be:	98 8d       	ldd	r25, Y+24	; 0x18
    31c0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    31c4:	dc 01       	movw	r26, r24
    31c6:	cb 01       	movw	r24, r22
    31c8:	9c 8b       	std	Y+20, r25	; 0x14
    31ca:	8b 8b       	std	Y+19, r24	; 0x13
    31cc:	8b 89       	ldd	r24, Y+19	; 0x13
    31ce:	9c 89       	ldd	r25, Y+20	; 0x14
    31d0:	98 8b       	std	Y+16, r25	; 0x10
    31d2:	8f 87       	std	Y+15, r24	; 0x0f
    31d4:	8f 85       	ldd	r24, Y+15	; 0x0f
    31d6:	98 89       	ldd	r25, Y+16	; 0x10
    31d8:	01 97       	sbiw	r24, 0x01	; 1
    31da:	f1 f7       	brne	.-4      	; 0x31d8 <main+0x10ba>
    31dc:	98 8b       	std	Y+16, r25	; 0x10
    31de:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(300);
		LCD_voidWriteSpecialChar(Arr10, 3, 2, 14);
    31e0:	ce 01       	movw	r24, r28
    31e2:	83 55       	subi	r24, 0x53	; 83
    31e4:	9f 4f       	sbci	r25, 0xFF	; 255
    31e6:	63 e0       	ldi	r22, 0x03	; 3
    31e8:	42 e0       	ldi	r20, 0x02	; 2
    31ea:	2e e0       	ldi	r18, 0x0E	; 14
    31ec:	0e 94 4e 10 	call	0x209c	; 0x209c <LCD_voidWriteSpecialChar>
		LCD_voidWriteSpecialChar(Arr4, 2, 2, 13);
    31f0:	ce 01       	movw	r24, r28
    31f2:	83 58       	subi	r24, 0x83	; 131
    31f4:	9f 4f       	sbci	r25, 0xFF	; 255
    31f6:	62 e0       	ldi	r22, 0x02	; 2
    31f8:	42 e0       	ldi	r20, 0x02	; 2
    31fa:	2d e0       	ldi	r18, 0x0D	; 13
    31fc:	0e 94 4e 10 	call	0x209c	; 0x209c <LCD_voidWriteSpecialChar>
    3200:	80 e0       	ldi	r24, 0x00	; 0
    3202:	90 e0       	ldi	r25, 0x00	; 0
    3204:	a6 e9       	ldi	r26, 0x96	; 150
    3206:	b3 e4       	ldi	r27, 0x43	; 67
    3208:	8b 87       	std	Y+11, r24	; 0x0b
    320a:	9c 87       	std	Y+12, r25	; 0x0c
    320c:	ad 87       	std	Y+13, r26	; 0x0d
    320e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3210:	6b 85       	ldd	r22, Y+11	; 0x0b
    3212:	7c 85       	ldd	r23, Y+12	; 0x0c
    3214:	8d 85       	ldd	r24, Y+13	; 0x0d
    3216:	9e 85       	ldd	r25, Y+14	; 0x0e
    3218:	20 e0       	ldi	r18, 0x00	; 0
    321a:	30 e8       	ldi	r19, 0x80	; 128
    321c:	4b e3       	ldi	r20, 0x3B	; 59
    321e:	55 e4       	ldi	r21, 0x45	; 69
    3220:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3224:	dc 01       	movw	r26, r24
    3226:	cb 01       	movw	r24, r22
    3228:	8f 83       	std	Y+7, r24	; 0x07
    322a:	98 87       	std	Y+8, r25	; 0x08
    322c:	a9 87       	std	Y+9, r26	; 0x09
    322e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3230:	6f 81       	ldd	r22, Y+7	; 0x07
    3232:	78 85       	ldd	r23, Y+8	; 0x08
    3234:	89 85       	ldd	r24, Y+9	; 0x09
    3236:	9a 85       	ldd	r25, Y+10	; 0x0a
    3238:	20 e0       	ldi	r18, 0x00	; 0
    323a:	30 e0       	ldi	r19, 0x00	; 0
    323c:	40 e8       	ldi	r20, 0x80	; 128
    323e:	5f e3       	ldi	r21, 0x3F	; 63
    3240:	0e 94 1d 04 	call	0x83a	; 0x83a <__ltsf2>
    3244:	88 23       	and	r24, r24
    3246:	2c f4       	brge	.+10     	; 0x3252 <main+0x1134>
		__ticks = 1;
    3248:	81 e0       	ldi	r24, 0x01	; 1
    324a:	90 e0       	ldi	r25, 0x00	; 0
    324c:	9e 83       	std	Y+6, r25	; 0x06
    324e:	8d 83       	std	Y+5, r24	; 0x05
    3250:	3f c0       	rjmp	.+126    	; 0x32d0 <main+0x11b2>
	else if (__tmp > 65535)
    3252:	6f 81       	ldd	r22, Y+7	; 0x07
    3254:	78 85       	ldd	r23, Y+8	; 0x08
    3256:	89 85       	ldd	r24, Y+9	; 0x09
    3258:	9a 85       	ldd	r25, Y+10	; 0x0a
    325a:	20 e0       	ldi	r18, 0x00	; 0
    325c:	3f ef       	ldi	r19, 0xFF	; 255
    325e:	4f e7       	ldi	r20, 0x7F	; 127
    3260:	57 e4       	ldi	r21, 0x47	; 71
    3262:	0e 94 bd 03 	call	0x77a	; 0x77a <__gtsf2>
    3266:	18 16       	cp	r1, r24
    3268:	4c f5       	brge	.+82     	; 0x32bc <main+0x119e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    326a:	6b 85       	ldd	r22, Y+11	; 0x0b
    326c:	7c 85       	ldd	r23, Y+12	; 0x0c
    326e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3270:	9e 85       	ldd	r25, Y+14	; 0x0e
    3272:	20 e0       	ldi	r18, 0x00	; 0
    3274:	30 e0       	ldi	r19, 0x00	; 0
    3276:	40 e2       	ldi	r20, 0x20	; 32
    3278:	51 e4       	ldi	r21, 0x41	; 65
    327a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    327e:	dc 01       	movw	r26, r24
    3280:	cb 01       	movw	r24, r22
    3282:	bc 01       	movw	r22, r24
    3284:	cd 01       	movw	r24, r26
    3286:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    328a:	dc 01       	movw	r26, r24
    328c:	cb 01       	movw	r24, r22
    328e:	9e 83       	std	Y+6, r25	; 0x06
    3290:	8d 83       	std	Y+5, r24	; 0x05
    3292:	0f c0       	rjmp	.+30     	; 0x32b2 <main+0x1194>
    3294:	8c e2       	ldi	r24, 0x2C	; 44
    3296:	91 e0       	ldi	r25, 0x01	; 1
    3298:	9c 83       	std	Y+4, r25	; 0x04
    329a:	8b 83       	std	Y+3, r24	; 0x03
    329c:	8b 81       	ldd	r24, Y+3	; 0x03
    329e:	9c 81       	ldd	r25, Y+4	; 0x04
    32a0:	01 97       	sbiw	r24, 0x01	; 1
    32a2:	f1 f7       	brne	.-4      	; 0x32a0 <main+0x1182>
    32a4:	9c 83       	std	Y+4, r25	; 0x04
    32a6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    32a8:	8d 81       	ldd	r24, Y+5	; 0x05
    32aa:	9e 81       	ldd	r25, Y+6	; 0x06
    32ac:	01 97       	sbiw	r24, 0x01	; 1
    32ae:	9e 83       	std	Y+6, r25	; 0x06
    32b0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    32b2:	8d 81       	ldd	r24, Y+5	; 0x05
    32b4:	9e 81       	ldd	r25, Y+6	; 0x06
    32b6:	00 97       	sbiw	r24, 0x00	; 0
    32b8:	69 f7       	brne	.-38     	; 0x3294 <main+0x1176>
    32ba:	68 cb       	rjmp	.-2352   	; 0x298c <main+0x86e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    32bc:	6f 81       	ldd	r22, Y+7	; 0x07
    32be:	78 85       	ldd	r23, Y+8	; 0x08
    32c0:	89 85       	ldd	r24, Y+9	; 0x09
    32c2:	9a 85       	ldd	r25, Y+10	; 0x0a
    32c4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    32c8:	dc 01       	movw	r26, r24
    32ca:	cb 01       	movw	r24, r22
    32cc:	9e 83       	std	Y+6, r25	; 0x06
    32ce:	8d 83       	std	Y+5, r24	; 0x05
    32d0:	8d 81       	ldd	r24, Y+5	; 0x05
    32d2:	9e 81       	ldd	r25, Y+6	; 0x06
    32d4:	9a 83       	std	Y+2, r25	; 0x02
    32d6:	89 83       	std	Y+1, r24	; 0x01
    32d8:	89 81       	ldd	r24, Y+1	; 0x01
    32da:	9a 81       	ldd	r25, Y+2	; 0x02
    32dc:	01 97       	sbiw	r24, 0x01	; 1
    32de:	f1 f7       	brne	.-4      	; 0x32dc <main+0x11be>
    32e0:	9a 83       	std	Y+2, r25	; 0x02
    32e2:	89 83       	std	Y+1, r24	; 0x01
    32e4:	53 cb       	rjmp	.-2394   	; 0x298c <main+0x86e>

000032e6 <__udivmodhi4>:
    32e6:	aa 1b       	sub	r26, r26
    32e8:	bb 1b       	sub	r27, r27
    32ea:	51 e1       	ldi	r21, 0x11	; 17
    32ec:	07 c0       	rjmp	.+14     	; 0x32fc <__udivmodhi4_ep>

000032ee <__udivmodhi4_loop>:
    32ee:	aa 1f       	adc	r26, r26
    32f0:	bb 1f       	adc	r27, r27
    32f2:	a6 17       	cp	r26, r22
    32f4:	b7 07       	cpc	r27, r23
    32f6:	10 f0       	brcs	.+4      	; 0x32fc <__udivmodhi4_ep>
    32f8:	a6 1b       	sub	r26, r22
    32fa:	b7 0b       	sbc	r27, r23

000032fc <__udivmodhi4_ep>:
    32fc:	88 1f       	adc	r24, r24
    32fe:	99 1f       	adc	r25, r25
    3300:	5a 95       	dec	r21
    3302:	a9 f7       	brne	.-22     	; 0x32ee <__udivmodhi4_loop>
    3304:	80 95       	com	r24
    3306:	90 95       	com	r25
    3308:	bc 01       	movw	r22, r24
    330a:	cd 01       	movw	r24, r26
    330c:	08 95       	ret

0000330e <__prologue_saves__>:
    330e:	2f 92       	push	r2
    3310:	3f 92       	push	r3
    3312:	4f 92       	push	r4
    3314:	5f 92       	push	r5
    3316:	6f 92       	push	r6
    3318:	7f 92       	push	r7
    331a:	8f 92       	push	r8
    331c:	9f 92       	push	r9
    331e:	af 92       	push	r10
    3320:	bf 92       	push	r11
    3322:	cf 92       	push	r12
    3324:	df 92       	push	r13
    3326:	ef 92       	push	r14
    3328:	ff 92       	push	r15
    332a:	0f 93       	push	r16
    332c:	1f 93       	push	r17
    332e:	cf 93       	push	r28
    3330:	df 93       	push	r29
    3332:	cd b7       	in	r28, 0x3d	; 61
    3334:	de b7       	in	r29, 0x3e	; 62
    3336:	ca 1b       	sub	r28, r26
    3338:	db 0b       	sbc	r29, r27
    333a:	0f b6       	in	r0, 0x3f	; 63
    333c:	f8 94       	cli
    333e:	de bf       	out	0x3e, r29	; 62
    3340:	0f be       	out	0x3f, r0	; 63
    3342:	cd bf       	out	0x3d, r28	; 61
    3344:	09 94       	ijmp

00003346 <__epilogue_restores__>:
    3346:	2a 88       	ldd	r2, Y+18	; 0x12
    3348:	39 88       	ldd	r3, Y+17	; 0x11
    334a:	48 88       	ldd	r4, Y+16	; 0x10
    334c:	5f 84       	ldd	r5, Y+15	; 0x0f
    334e:	6e 84       	ldd	r6, Y+14	; 0x0e
    3350:	7d 84       	ldd	r7, Y+13	; 0x0d
    3352:	8c 84       	ldd	r8, Y+12	; 0x0c
    3354:	9b 84       	ldd	r9, Y+11	; 0x0b
    3356:	aa 84       	ldd	r10, Y+10	; 0x0a
    3358:	b9 84       	ldd	r11, Y+9	; 0x09
    335a:	c8 84       	ldd	r12, Y+8	; 0x08
    335c:	df 80       	ldd	r13, Y+7	; 0x07
    335e:	ee 80       	ldd	r14, Y+6	; 0x06
    3360:	fd 80       	ldd	r15, Y+5	; 0x05
    3362:	0c 81       	ldd	r16, Y+4	; 0x04
    3364:	1b 81       	ldd	r17, Y+3	; 0x03
    3366:	aa 81       	ldd	r26, Y+2	; 0x02
    3368:	b9 81       	ldd	r27, Y+1	; 0x01
    336a:	ce 0f       	add	r28, r30
    336c:	d1 1d       	adc	r29, r1
    336e:	0f b6       	in	r0, 0x3f	; 63
    3370:	f8 94       	cli
    3372:	de bf       	out	0x3e, r29	; 62
    3374:	0f be       	out	0x3f, r0	; 63
    3376:	cd bf       	out	0x3d, r28	; 61
    3378:	ed 01       	movw	r28, r26
    337a:	08 95       	ret

0000337c <_exit>:
    337c:	f8 94       	cli

0000337e <__stop_program>:
    337e:	ff cf       	rjmp	.-2      	; 0x337e <__stop_program>
